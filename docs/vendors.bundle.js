(window.webpackJsonp=window.webpackJsonp||[]).push([[2],[function(e,t,n){"use strict";e.exports=n(34)},function(e,t,n){e.exports=n(38)()},function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";n.d(t,"a",function(){return f}),n.d(t,"b",function(){return d});var r=n(5),o=n(0),i=n.n(o),a=n(7),l=n(6),u=(n(1),n(2)),c=n(8),s=n(4),f=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=Object(l.a)(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(a.b,{history:this.history,children:this.props.children})},t}(i.a.Component);i.a.Component;var d=function(e){function t(){return e.apply(this,arguments)||this}Object(r.a)(t,e);var n=t.prototype;return n.handleClick=function(e,t){(this.props.onClick&&this.props.onClick(e),e.defaultPrevented||0!==e.button||this.props.target&&"_self"!==this.props.target||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))||(e.preventDefault(),(this.props.replace?t.replace:t.push)(this.props.to))},n.render=function(){var e=this,t=this.props,n=t.innerRef,r=(t.replace,t.to),o=Object(c.a)(t,["innerRef","replace","to"]);return i.a.createElement(a.c.Consumer,null,function(t){t||Object(s.a)(!1);var a="string"==typeof r?Object(l.c)(r,null,null,t.location):r,c=a?t.history.createHref(a):"";return i.a.createElement("a",Object(u.a)({},o,{onClick:function(n){return e.handleClick(n,t.history)},href:c,ref:n}))})},t}(i.a.Component)},function(e,t,n){"use strict";var r=!0,o="Invariant failed";t.a=function(e,t){if(!e)throw r?new Error(o):new Error(o+": "+(t||""))}},function(e,t,n){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";var r=n(2);function o(e){return"/"===e.charAt(0)}function i(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],a=e&&o(e),l=t&&o(t),u=a||l;if(e&&o(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var c=void 0;if(r.length){var s=r[r.length-1];c="."===s||".."===s||""===s}else c=!1;for(var f=0,d=r.length;d>=0;d--){var p=r[d];"."===p?i(r,d):".."===p?(i(r,d),f++):f&&(i(r,d),f--)}if(!u)for(;f--;f)r.unshift("..");!u||""===r[0]||r[0]&&o(r[0])||r.unshift("");var m=r.join("/");return c&&"/"!==m.substr(-1)&&(m+="/"),m},l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var u=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var r=void 0===t?"undefined":l(t);if(r!==(void 0===n?"undefined":l(n)))return!1;if("object"===r){var o=t.valueOf(),i=n.valueOf();if(o!==t||i!==n)return e(o,i);var a=Object.keys(t),u=Object.keys(n);return a.length===u.length&&a.every(function(r){return e(t[r],n[r])})}return!1},c=n(4);function s(e){return"/"===e.charAt(0)?e:"/"+e}function f(e){return"/"===e.charAt(0)?e.substr(1):e}function d(e,t){return function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)}(e,t)?e.substr(t.length):e}function p(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function m(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function h(e,t,n,o){var i;"string"==typeof e?(i=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(i=Object(r.a)({},e)).pathname&&(i.pathname=""),i.search?"?"!==i.search.charAt(0)&&(i.search="?"+i.search):i.search="",i.hash?"#"!==i.hash.charAt(0)&&(i.hash="#"+i.hash):i.hash="",void 0!==t&&void 0===i.state&&(i.state=t));try{i.pathname=decodeURI(i.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+i.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(i.key=n),o?i.pathname?"/"!==i.pathname.charAt(0)&&(i.pathname=a(i.pathname,o.pathname)):i.pathname=o.pathname:i.pathname||(i.pathname="/"),i}function v(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&u(e.state,t.state)}function y(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}}n.d(t,"a",function(){return T}),n.d(t,"b",function(){return _}),n.d(t,"d",function(){return N}),n.d(t,"c",function(){return h}),n.d(t,"f",function(){return v}),n.d(t,"e",function(){return m});var g=!("undefined"==typeof window||!window.document||!window.document.createElement);function b(e,t){t(window.confirm(e))}var w="popstate",x="hashchange";function k(){try{return window.history.state||{}}catch(e){return{}}}function T(e){void 0===e&&(e={}),g||Object(c.a)(!1);var t,n=window.history,o=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,i=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,l=a.forceRefresh,u=void 0!==l&&l,f=a.getUserConfirmation,v=void 0===f?b:f,T=a.keyLength,S=void 0===T?6:T,C=e.basename?p(s(e.basename)):"";function E(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return C&&(i=d(i,C)),h(i,r,n)}function P(){return Math.random().toString(36).substr(2,S)}var _=y();function O(e){Object(r.a)($,e),$.length=n.length,_.notifyListeners($.location,$.action)}function N(e){(function(e){void 0===e.state&&navigator.userAgent.indexOf("CriOS")})(e)||j(E(e.state))}function R(){j(E(k()))}var M=!1;function j(e){if(M)M=!1,O();else{_.confirmTransitionTo(e,"POP",v,function(t){t?O({action:"POP",location:e}):function(e){var t=$.location,n=A.indexOf(t.key);-1===n&&(n=0);var r=A.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(M=!0,L(o))}(e)})}}var U=E(k()),A=[U.key];function I(e){return C+m(e)}function L(e){n.go(e)}var D=0;function F(e){1===(D+=e)&&1===e?(window.addEventListener(w,N),i&&window.addEventListener(x,R)):0===D&&(window.removeEventListener(w,N),i&&window.removeEventListener(x,R))}var z=!1;var $={length:n.length,action:"POP",location:U,createHref:I,push:function(e,t){var r=h(e,t,P(),$.location);_.confirmTransitionTo(r,"PUSH",v,function(e){if(e){var t=I(r),i=r.key,a=r.state;if(o)if(n.pushState({key:i,state:a},null,t),u)window.location.href=t;else{var l=A.indexOf($.location.key),c=A.slice(0,-1===l?0:l+1);c.push(r.key),A=c,O({action:"PUSH",location:r})}else window.location.href=t}})},replace:function(e,t){var r=h(e,t,P(),$.location);_.confirmTransitionTo(r,"REPLACE",v,function(e){if(e){var t=I(r),i=r.key,a=r.state;if(o)if(n.replaceState({key:i,state:a},null,t),u)window.location.replace(t);else{var l=A.indexOf($.location.key);-1!==l&&(A[l]=r.key),O({action:"REPLACE",location:r})}else window.location.replace(t)}})},go:L,goBack:function(){L(-1)},goForward:function(){L(1)},block:function(e){void 0===e&&(e=!1);var t=_.setPrompt(e);return z||(F(1),z=!0),function(){return z&&(z=!1,F(-1)),t()}},listen:function(e){var t=_.appendListener(e);return F(1),function(){F(-1),t()}}};return $}var S="hashchange",C={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+f(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:f,decodePath:s},slash:{encodePath:s,decodePath:s}};function E(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function P(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)}function _(e){void 0===e&&(e={}),g||Object(c.a)(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),o=n.getUserConfirmation,i=void 0===o?b:o,a=n.hashType,l=void 0===a?"slash":a,u=e.basename?p(s(e.basename)):"",f=C[l],w=f.encodePath,x=f.decodePath;function k(){var e=x(E());return u&&(e=d(e,u)),h(e)}var T=y();function _(e){Object(r.a)(z,e),z.length=t.length,T.notifyListeners(z.location,z.action)}var O=!1,N=null;function R(){var e=E(),t=w(e);if(e!==t)P(t);else{var n=k(),r=z.location;if(!O&&v(r,n))return;if(N===m(n))return;N=null,function(e){if(O)O=!1,_();else{T.confirmTransitionTo(e,"POP",i,function(t){t?_({action:"POP",location:e}):function(e){var t=z.location,n=A.lastIndexOf(m(t));-1===n&&(n=0);var r=A.lastIndexOf(m(e));-1===r&&(r=0);var o=n-r;o&&(O=!0,I(o))}(e)})}}(n)}}var M=E(),j=w(M);M!==j&&P(j);var U=k(),A=[m(U)];function I(e){t.go(e)}var L=0;function D(e){1===(L+=e)&&1===e?window.addEventListener(S,R):0===L&&window.removeEventListener(S,R)}var F=!1;var z={length:t.length,action:"POP",location:U,createHref:function(e){return"#"+w(u+m(e))},push:function(e,t){var n=h(e,void 0,void 0,z.location);T.confirmTransitionTo(n,"PUSH",i,function(e){if(e){var t=m(n),r=w(u+t);if(E()!==r){N=t,function(e){window.location.hash=e}(r);var o=A.lastIndexOf(m(z.location)),i=A.slice(0,-1===o?0:o+1);i.push(t),A=i,_({action:"PUSH",location:n})}else _()}})},replace:function(e,t){var n=h(e,void 0,void 0,z.location);T.confirmTransitionTo(n,"REPLACE",i,function(e){if(e){var t=m(n),r=w(u+t);E()!==r&&(N=t,P(r));var o=A.indexOf(m(z.location));-1!==o&&(A[o]=t),_({action:"REPLACE",location:n})}})},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&(e=!1);var t=T.setPrompt(e);return F||(D(1),F=!0),function(){return F&&(F=!1,D(-1)),t()}},listen:function(e){var t=T.appendListener(e);return D(1),function(){D(-1),t()}}};return z}function O(e,t,n){return Math.min(Math.max(e,t),n)}function N(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,o=t.initialEntries,i=void 0===o?["/"]:o,a=t.initialIndex,l=void 0===a?0:a,u=t.keyLength,c=void 0===u?6:u,s=y();function f(e){Object(r.a)(w,e),w.length=w.entries.length,s.notifyListeners(w.location,w.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=O(l,0,i.length-1),v=i.map(function(e){return h(e,void 0,"string"==typeof e?d():e.key||d())}),g=m;function b(e){var t=O(w.index+e,0,w.entries.length-1),r=w.entries[t];s.confirmTransitionTo(r,"POP",n,function(e){e?f({action:"POP",location:r,index:t}):f()})}var w={length:v.length,action:"POP",location:v[p],index:p,entries:v,createHref:g,push:function(e,t){var r=h(e,t,d(),w.location);s.confirmTransitionTo(r,"PUSH",n,function(e){if(e){var t=w.index+1,n=w.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}})},replace:function(e,t){var r=h(e,t,d(),w.location);s.confirmTransitionTo(r,"REPLACE",n,function(e){e&&(w.entries[w.index]=r,f({action:"REPLACE",location:r}))})},go:b,goBack:function(){b(-1)},goForward:function(){b(1)},canGo:function(e){var t=w.index+e;return t>=0&&t<w.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return w}},function(e,t,n){"use strict";n.d(t,"a",function(){return w}),n.d(t,"b",function(){return h}),n.d(t,"c",function(){return m});var r=n(27),o=n.n(r),i=n(5),a=n(0),l=n.n(a),u=(n(1),n(6)),c=n(4),s=n(16),f=n.n(s),d=n(2),p=(n(51),n(8)),m=(n(10),function(e){var t=o()();return t.Provider.displayName=e+".Provider",t.Consumer.displayName=e+".Consumer",t}("Router")),h=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen(function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e})),n}Object(i.a)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return l.a.createElement(m.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(l.a.Component);l.a.Component;l.a.Component;var v={},y=1e4,g=0;function b(e,t){void 0===t&&(t={}),"string"==typeof t&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce(function(t,n){if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=v[n]||(v[n]={});if(r[e])return r[e];var o=[],i={regexp:f()(e,o,t),keys:o};return g<y&&(r[e]=i,g++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],d=u.slice(1),p=e===s;return i&&!p?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:p,params:a.reduce(function(e,t,n){return e[t.name]=d[n],e},{})}},null)}var w=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this;return l.a.createElement(m.Consumer,null,function(t){t||Object(c.a)(!1);var n=e.props.location||t.location,r=e.props.computedMatch?e.props.computedMatch:e.props.path?b(n.pathname,e.props):t.match,o=Object(d.a)({},t,{location:n,match:r}),i=e.props,a=i.children,u=i.component,s=i.render;(Array.isArray(a)&&0===a.length&&(a=null),"function"==typeof a)&&(void 0===(a=a(o))&&(a=null));return l.a.createElement(m.Provider,{value:o},a&&!function(e){return 0===l.a.Children.count(e)}(a)?a:o.match?u?l.a.createElement(u,o):s?s(o):null:null)})},t}(l.a.Component);function x(e){return"/"===e.charAt(0)?e:"/"+e}function k(e,t){if(!e)return t;var n=x(e);return 0!==t.pathname.indexOf(n)?t:Object(d.a)({},t,{pathname:t.pathname.substr(n.length)})}function T(e){return"string"==typeof e?e:Object(u.e)(e)}function S(e){return function(){Object(c.a)(!1)}}function C(){}l.a.Component;l.a.Component},function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,a,l){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,l],s=0;(u=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";var r=n(40),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0};var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var o=p(n);o&&o!==m&&e(t,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=u(t),h=u(n),v=0;v<a.length;++v){var y=a[v];if(!(i[y]||r&&r[y]||h&&h[y]||l&&l[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}return t}return t}},,function(e,t,n){"use strict";n.d(t,"b",function(){return l}),n.d(t,"a",function(){return c});var r=n(15),o=function(){return Math.random().toString(36).substring(7).split("").join(".")},i={INIT:"@@redux/INIT"+o(),REPLACE:"@@redux/REPLACE"+o(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+o()}};function a(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function l(e,t,n){var o;if("function"==typeof t&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function");if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(l)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var u=e,c=t,s=[],f=s,d=!1;function p(){f===s&&(f=s.slice())}function m(){if(d)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return c}function h(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(d)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var t=!0;return p(),f.push(e),function(){if(t){if(d)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");t=!1,p();var n=f.indexOf(e);f.splice(n,1)}}}function v(e){if(!a(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(d)throw new Error("Reducers may not dispatch actions.");try{d=!0,c=u(c,e)}finally{d=!1}for(var t=s=f,n=0;n<t.length;n++){(0,t[n])()}return e}return v({type:i.INIT}),(o={dispatch:v,subscribe:h,getState:m,replaceReducer:function(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");u=e,v({type:i.REPLACE})}})[r.a]=function(){var e,t=h;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(m())}return n(),{unsubscribe:t(n)}}})[r.a]=function(){return this},e},o}function u(e,t){return function(){return t(e.apply(this,arguments))}}function c(e,t){if("function"==typeof e)return u(e,t);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');for(var n=Object.keys(e),r={},o=0;o<n.length;o++){var i=n[o],a=e[i];"function"==typeof a&&(r[i]=u(a,t))}return r}},function(e,t,n){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var o=n(0),i=n.n(o),a=n(1),l=n.n(a),u=i.a.createContext(null),c=function(e){function t(t){var n;n=e.call(this,t)||this;var r=t.store;return n.state={storeState:r.getState(),store:r},n}r(t,e);var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this.subscribe()},n.componentWillUnmount=function(){this.unsubscribe&&this.unsubscribe(),this._isMounted=!1},n.componentDidUpdate=function(e){this.props.store!==e.store&&(this.unsubscribe&&this.unsubscribe(),this.subscribe())},n.subscribe=function(){var e=this,t=this.props.store;this.unsubscribe=t.subscribe(function(){var n=t.getState();e._isMounted&&e.setState(function(e){return e.storeState===n?null:{storeState:n}})});var n=t.getState();n!==this.state.storeState&&this.setState({storeState:n})},n.render=function(){var e=this.props.context||u;return i.a.createElement(e.Provider,{value:this.state},this.props.children)},t}(o.Component);c.propTypes={store:l.a.shape({subscribe:l.a.func.isRequired,dispatch:l.a.func.isRequired,getState:l.a.func.isRequired}),context:l.a.object,children:l.a.any};var s=c;function f(){return(f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function d(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}var p=n(10),m=n.n(p),h=n(9),v=n.n(h),y=n(24);function g(e,t){void 0===t&&(t={});var n=t,a=n.getDisplayName,l=void 0===a?function(e){return"ConnectAdvanced("+e+")"}:a,c=n.methodName,s=void 0===c?"connectAdvanced":c,p=n.renderCountProp,h=void 0===p?void 0:p,g=n.shouldHandleStateChanges,b=void 0===g||g,w=n.storeKey,x=void 0===w?"store":w,k=n.withRef,T=void 0!==k&&k,S=n.forwardRef,C=void 0!==S&&S,E=n.context,P=void 0===E?u:E,_=d(n,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"]);v()(void 0===h,"renderCountProp is removed. render counting is built into the latest React dev tools profiling extension"),v()(!T,"withRef is removed. To access the wrapped instance, use a ref on the connected component");var O="To use a custom Redux store for specific components,  create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like:  <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. You may also pass a {context : MyContext} option to connect";v()("store"===x,"storeKey has been removed and does not do anything. "+O);var N=P;return function(t){var n=t.displayName||t.name||"Component",a=l(n),u=f({},_,{getDisplayName:l,methodName:s,renderCountProp:h,shouldHandleStateChanges:b,storeKey:x,displayName:a,wrappedComponentName:n,WrappedComponent:t}),c=_.pure,d=o.Component;c&&(d=o.PureComponent);var p=function(n){function o(t){var r,o,a,l,u,s,d,p,m,h,y;return r=n.call(this,t)||this,v()(C?!t.wrapperProps[x]:!t[x],"Passing redux store in props has been removed and does not do anything. "+O),r.selectDerivedProps=function(t,n,r,i){if(c&&o===n&&a===t)return l;r===u&&s===i||(u=r,s=i,d=e(r.dispatch,i)),o=n,a=t;var f=d(t,n);return l=f},r.selectChildElement=function(e,t,n){return t===p&&n===m&&y===e||(p=t,m=n,y=e,h=i.a.createElement(e,f({},t,{ref:n}))),h},r.indirectRenderWrappedComponent=r.indirectRenderWrappedComponent.bind(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(r)),r}r(o,n);var l=o.prototype;return l.indirectRenderWrappedComponent=function(e){return this.renderWrappedComponent(e)},l.renderWrappedComponent=function(e){v()(e,'Could not find "store" in the context of "'+a+'". Either wrap the root component in a <Provider>, or pass a custom React context provider to <Provider> and the corresponding React context consumer to '+a+" in connect options.");var n,r=e.storeState,o=e.store,i=this.props;C&&(i=this.props.wrapperProps,n=this.props.forwardedRef);var l=this.selectDerivedProps(r,i,o,u);return this.selectChildElement(t,l,n)},l.render=function(){var e=this.props.context&&this.props.context.Consumer&&Object(y.isContextConsumer)(i.a.createElement(this.props.context.Consumer,null))?this.props.context:N;return i.a.createElement(e.Consumer,null,this.indirectRenderWrappedComponent)},o}(d);if(p.WrappedComponent=t,p.displayName=a,C){var g=i.a.forwardRef(function(e,t){return i.a.createElement(p,{wrapperProps:e,forwardedRef:t})});return g.displayName=a,g.WrappedComponent=t,m()(g,t)}return m()(p,t)}}var b=Object.prototype.hasOwnProperty;function w(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function x(e,t){if(w(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(var o=0;o<n.length;o++)if(!b.call(t,n[o])||!w(e[n[o]],t[n[o]]))return!1;return!0}var k=n(12);function T(e){return function(t,n){var r=e(t,n);function o(){return r}return o.dependsOnOwnProps=!1,o}}function S(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function C(e,t){return function(t,n){n.displayName;var r=function(e,t){return r.dependsOnOwnProps?r.mapToProps(e,t):r.mapToProps(e)};return r.dependsOnOwnProps=!0,r.mapToProps=function(t,n){r.mapToProps=e,r.dependsOnOwnProps=S(e);var o=r(t,n);return"function"==typeof o&&(r.mapToProps=o,r.dependsOnOwnProps=S(o),o=r(t,n)),o},r}}var E=[function(e){return"function"==typeof e?C(e):void 0},function(e){return e?void 0:T(function(e){return{dispatch:e}})},function(e){return e&&"object"==typeof e?T(function(t){return Object(k.a)(e,t)}):void 0}];var P=[function(e){return"function"==typeof e?C(e):void 0},function(e){return e?void 0:T(function(){return{}})}];function _(e,t,n){return f({},n,e,t)}var O=[function(e){return"function"==typeof e?function(e){return function(t,n){n.displayName;var r,o=n.pure,i=n.areMergedPropsEqual,a=!1;return function(t,n,l){var u=e(t,n,l);return a?o&&i(u,r)||(r=u):(a=!0,r=u),r}}}(e):void 0},function(e){return e?void 0:function(){return _}}];function N(e,t,n,r){return function(o,i){return n(e(o,i),t(r,i),i)}}function R(e,t,n,r,o){var i,a,l,u,c,s=o.areStatesEqual,f=o.areOwnPropsEqual,d=o.areStatePropsEqual,p=!1;function m(o,p){var m,h,v=!f(p,a),y=!s(o,i);return i=o,a=p,v&&y?(l=e(i,a),t.dependsOnOwnProps&&(u=t(r,a)),c=n(l,u,a)):v?(e.dependsOnOwnProps&&(l=e(i,a)),t.dependsOnOwnProps&&(u=t(r,a)),c=n(l,u,a)):y?(m=e(i,a),h=!d(m,l),l=m,h&&(c=n(l,u,a)),c):c}return function(o,s){return p?m(o,s):(l=e(i=o,a=s),u=t(r,a),c=n(l,u,a),p=!0,c)}}function M(e,t){var n=t.initMapStateToProps,r=t.initMapDispatchToProps,o=t.initMergeProps,i=d(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),a=n(e,i),l=r(e,i),u=o(e,i);return(i.pure?R:N)(a,l,u,e,i)}function j(e,t,n){for(var r=t.length-1;r>=0;r--){var o=t[r](e);if(o)return o}return function(t,r){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+r.wrappedComponentName+".")}}function U(e,t){return e===t}var A,I,L,D,F,z,$,W,B,V,H,q,Q=(L=(I=void 0===A?{}:A).connectHOC,D=void 0===L?g:L,F=I.mapStateToPropsFactories,z=void 0===F?P:F,$=I.mapDispatchToPropsFactories,W=void 0===$?E:$,B=I.mergePropsFactories,V=void 0===B?O:B,H=I.selectorFactory,q=void 0===H?M:H,function(e,t,n,r){void 0===r&&(r={});var o=r,i=o.pure,a=void 0===i||i,l=o.areStatesEqual,u=void 0===l?U:l,c=o.areOwnPropsEqual,s=void 0===c?x:c,p=o.areStatePropsEqual,m=void 0===p?x:p,h=o.areMergedPropsEqual,v=void 0===h?x:h,y=d(o,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),g=j(e,z,"mapStateToProps"),b=j(t,W,"mapDispatchToProps"),w=j(n,V,"mergeProps");return D(q,f({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:g,initMapDispatchToProps:b,initMergeProps:w,pure:a,areStatesEqual:u,areOwnPropsEqual:s,areStatePropsEqual:m,areMergedPropsEqual:v},y))});n.d(t,"a",function(){return s}),n.d(t,"b",function(){return Q})},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";(function(e,r){var o,i=n(25);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var a=Object(i.a)(o);t.a=a}).call(this,n(14),n(19)(e))},function(e,t,n){var r=n(50);e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t))},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(a,p),a=p+f.length,d)l+=d[1];else{var m=e[a],h=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=h&&null!=m&&m!==h,k="+"===b||"*"===b,T="?"===b||"*"===b,S=n[2]||s,C=y||g;r.push({name:v||i++,prefix:h||"",delimiter:S,optional:T,repeat:k,partial:x,asterisk:!!w,pattern:C?c(C):w?".*":"[^"+u(S)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",l=n||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):u(d),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),a+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var m=u(n.delimiter||"/"),h=a.slice(-m.length)===m;return o||(a=(h?a.slice(0,-m.length):a)+"(?:"+m+"(?=$))?"),a+=i?"$":o&&h?"":"(?="+m+"|$)",s(new RegExp("^"+a,f(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return d(i(e,n),t,n)}(e,t,n)}},,function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(l[a[s]]=n[a[s]])}}return l}},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}var a;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];null!=i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];null!=a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){var r,o,i={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),u=null,c=0,s=[],f=n(45);function d(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(g(r.parts[a],t))}else{var l=[];for(a=0;a<r.parts.length;a++)l.push(g(r.parts[a],t));i[r.id]={id:r.id,refs:1,parts:l}}}}function p(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function m(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=s[s.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),s.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertAt.before,n);n.insertBefore(t,o)}}function h(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=s.indexOf(e);t>=0&&s.splice(t,1)}function v(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return y(t,e.attrs),m(e,t),t}function y(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function g(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=i}if(t.singleton){var a=c++;n=u||(u=v(t)),r=x.bind(null,n,a,!1),o=x.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",y(t,e.attrs),m(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){h(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){h(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return d(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var a=n[o];(l=i[a.id]).refs--,r.push(l)}e&&d(p(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete i[l.id]}}}};var b,w=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")});function x(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(35)},,function(e,t,n){"use strict";e.exports=n(42)},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",function(){return r})},,function(e,t,n){"use strict";t.__esModule=!0;var r=i(n(0)),o=i(n(46));function i(e){return e&&e.__esModule?e:{default:e}}t.default=r.default.createContext||o.default,e.exports=t.default},,,function(e,t,n){"use strict";e.exports=n(55)},,,,function(e,t,n){"use strict";
/** @license React v16.8.4
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(18),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function k(){}function T(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=x.prototype;var S=T.prototype=new k;S.constructor=T,r(S,x.prototype),S.isPureReactComponent=!0;var C={current:null},E={current:null},P=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)P.call(t,r)&&!_.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:E.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var R=/\/+/g,M=[];function j(e,t,n,r){if(M.length){var o=M.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function U(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function A(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+I(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+I(l=t[c],c);u+=e(l,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+I(l,c++),r,o);else"object"===l&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,function(e){return e}):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(R,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(R,"$&/")+"/"),A(e,D,t=j(t,i,r,o)),U(t)}function z(){var e=C.current;return null===e&&g("307"),e}var $={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;A(e,L,t=j(null,null,t,n)),U(t)},count:function(e){return A(e,function(){return null},null)},toArray:function(e){var t=[];return F(e,t,null,function(e){return e}),t},only:function(e){return N(e)||g("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:T,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return z().useCallback(e,t)},useContext:function(e,t){return z().useContext(e,t)},useEffect:function(e,t){return z().useEffect(e,t)},useImperativeHandle:function(e,t,n){return z().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return z().useLayoutEffect(e,t)},useMemo:function(e,t){return z().useMemo(e,t)},useReducer:function(e,t,n){return z().useReducer(e,t,n)},useRef:function(e){return z().useRef(e)},useState:function(e){return z().useState(e)},Fragment:l,StrictMode:u,Suspense:m,createElement:O,cloneElement:function(e,t,n){null==e&&g("267",e);var o=void 0,a=r({},e.props),l=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=E.current),void 0!==t.key&&(l=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)P.call(t,o)&&!_.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:l,ref:u,props:a,_owner:c}},createFactory:function(e){var t=O.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.8.4",unstable_ConcurrentMode:d,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:C,ReactCurrentOwner:E,assign:r}},W={default:$},B=W&&$||W;e.exports=B.default||B},function(e,t,n){"use strict";
/** @license React v16.8.4
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(18),i=n(36);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var l=!1,u=null,c=!1,s=null,f={onError:function(e){l=!0,u=e}};function d(e,t,n,r,o,i,a,c,s){l=!1,u=null,function(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var p=null,m={};function h(){if(p)for(var e in m){var t=m[e],n=p.indexOf(e);if(-1<n||a("96",e),!y[n])for(var r in t.extractEvents||a("97",e),y[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,u=r;g.hasOwnProperty(u)&&a("99",u),g[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&v(c[o],l,u);o=!0}else i.registrationName?(v(i.registrationName,l,u),o=!0):o=!1;o||a("98",r,e)}}}function v(e,t,n){b[e]&&a("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var y=[],g={},b={},w={},x=null,k=null,T=null;function S(e,t,n){var r=e.type||"unknown-event";e.currentTarget=T(n),function(e,t,n,r,o,i,f,p,m){if(d.apply(this,arguments),l){if(l){var h=u;l=!1,u=null}else a("198"),h=void 0;c||(c=!0,s=h)}}(r,t,void 0,e),e.currentTarget=null}function C(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function E(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var P=null;function _(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)S(e,t[r],n[r]);else t&&S(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var O={injectEventPluginOrder:function(e){p&&a("101"),p=Array.prototype.slice.call(e),h()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&a("102",t),m[t]=r,n=!0)}n&&h()}};function N(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function R(e){if(null!==e&&(P=C(P,e)),e=P,P=null,e&&(E(e,_),P&&a("95"),c))throw e=s,c=!1,s=null,e}var M=Math.random().toString(36).slice(2),j="__reactInternalInstance$"+M,U="__reactEventHandlers$"+M;function A(e){if(e[j])return e[j];for(;!e[j];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[j]).tag||6===e.tag?e:null}function I(e){return!(e=e[j])||5!==e.tag&&6!==e.tag?null:e}function L(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function D(e){return e[U]||null}function F(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function z(e,t,n){(t=N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function $(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=F(t);for(t=n.length;0<t--;)z(n[t],"captured",e);for(t=0;t<n.length;t++)z(n[t],"bubbled",e)}}function W(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function B(e){e&&e.dispatchConfig.registrationName&&W(e._targetInst,null,e)}function V(e){E(e,$)}var H=!("undefined"==typeof window||!window.document||!window.document.createElement);function q(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Q={animationend:q("Animation","AnimationEnd"),animationiteration:q("Animation","AnimationIteration"),animationstart:q("Animation","AnimationStart"),transitionend:q("Transition","TransitionEnd")},K={},Y={};function X(e){if(K[e])return K[e];if(!Q[e])return e;var t,n=Q[e];for(t in n)if(n.hasOwnProperty(t)&&t in Y)return K[e]=n[t];return e}H&&(Y=document.createElement("div").style,"AnimationEvent"in window||(delete Q.animationend.animation,delete Q.animationiteration.animation,delete Q.animationstart.animation),"TransitionEvent"in window||delete Q.transitionend.transition);var G=X("animationend"),J=X("animationiteration"),Z=X("animationstart"),ee=X("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ae(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:le,this.isPropagationStopped=le,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function se(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var de=ue.extend({data:null}),pe=ue.extend({data:null}),me=[9,13,27,32],he=H&&"CompositionEvent"in window,ve=null;H&&"documentMode"in document&&(ve=document.documentMode);var ye=H&&"TextEvent"in window&&!ve,ge=H&&(!he||ve&&8<ve&&11>=ve),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function ke(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Te(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Se=!1;var Ce={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(he)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else Se?ke(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ge&&"ko"!==n.locale&&(Se||o!==we.compositionStart?o===we.compositionEnd&&Se&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,Se=!0)),o=de.getPooled(o,t,n,r),i?o.data=i:null!==(i=Te(n))&&(o.data=i),V(o),i=o):i=null,(e=ye?function(e,t){switch(e){case"compositionend":return Te(t);case"keypress":return 32!==t.which?null:(xe=!0,be);case"textInput":return(e=t.data)===be&&xe?null:e;default:return null}}(e,n):function(e,t){if(Se)return"compositionend"===e||!he&&ke(e,t)?(e=ie(),oe=re=ne=null,Se=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=pe.getPooled(we.beforeInput,t,n,r)).data=e,V(t)):t=null,null===i?t:null===t?i:[i,t]}},Ee=null,Pe=null,_e=null;function Oe(e){if(e=k(e)){"function"!=typeof Ee&&a("280");var t=x(e.stateNode);Ee(e.stateNode,e.type,t)}}function Ne(e){Pe?_e?_e.push(e):_e=[e]:Pe=e}function Re(){if(Pe){var e=Pe,t=_e;if(_e=Pe=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Me(e,t){return e(t)}function je(e,t,n){return e(t,n)}function Ue(){}var Ae=!1;function Ie(e,t){if(Ae)return e(t);Ae=!0;try{return Me(e,t)}finally{Ae=!1,(null!==Pe||null!==_e)&&(Ue(),Re())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function De(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function Fe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ze(e){if(!H)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function $e(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function We(e){e._valueTracker||(e._valueTracker=function(e){var t=$e(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Be(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=$e(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var Ve=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Ve.hasOwnProperty("ReactCurrentDispatcher")||(Ve.ReactCurrentDispatcher={current:null});var He=/^(.*)[\\\/]/,qe="function"==typeof Symbol&&Symbol.for,Qe=qe?Symbol.for("react.element"):60103,Ke=qe?Symbol.for("react.portal"):60106,Ye=qe?Symbol.for("react.fragment"):60107,Xe=qe?Symbol.for("react.strict_mode"):60108,Ge=qe?Symbol.for("react.profiler"):60114,Je=qe?Symbol.for("react.provider"):60109,Ze=qe?Symbol.for("react.context"):60110,et=qe?Symbol.for("react.concurrent_mode"):60111,tt=qe?Symbol.for("react.forward_ref"):60112,nt=qe?Symbol.for("react.suspense"):60113,rt=qe?Symbol.for("react.memo"):60115,ot=qe?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ye:return"Fragment";case Ke:return"Portal";case Ge:return"Profiler";case Xe:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Je:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=lt(e.type);n=null,r&&(n=lt(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(He,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},dt={};function pt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var mt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){mt[e]=new pt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];mt[t]=new pt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){mt[e]=new pt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){mt[e]=new pt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){mt[e]=new pt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){mt[e]=new pt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){mt[e]=new pt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){mt[e]=new pt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){mt[e]=new pt(e,5,!1,e.toLowerCase(),null)});var ht=/[\-:]([a-z])/g;function vt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var o=mt.hasOwnProperty(t)?mt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(dt,e)||!st.call(ft,e)&&(ct.test(e)?dt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function kt(e,t){xt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?St(e,t.type,n):t.hasOwnProperty("defaultValue")&&St(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Tt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function St(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){mt[e]=new pt(e,1,!1,e.toLowerCase(),null)});var Ct={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Et(e,t,n){return(e=ue.getPooled(Ct.change,e,t,n)).type="change",Ne(n),V(e),e}var Pt=null,_t=null;function Ot(e){R(e)}function Nt(e){if(Be(L(e)))return e}function Rt(e,t){if("change"===e)return t}var Mt=!1;function jt(){Pt&&(Pt.detachEvent("onpropertychange",Ut),_t=Pt=null)}function Ut(e){"value"===e.propertyName&&Nt(_t)&&Ie(Ot,e=Et(_t,e,Fe(e)))}function At(e,t,n){"focus"===e?(jt(),_t=n,(Pt=t).attachEvent("onpropertychange",Ut)):"blur"===e&&jt()}function It(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Nt(_t)}function Lt(e,t){if("click"===e)return Nt(t)}function Dt(e,t){if("input"===e||"change"===e)return Nt(t)}H&&(Mt=ze("input")&&(!document.documentMode||9<document.documentMode));var Ft={eventTypes:Ct,_isInputEventSupported:Mt,extractEvents:function(e,t,n,r){var o=t?L(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=Rt:De(o)?Mt?i=Dt:(i=It,a=At):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Lt),i&&(i=i(e,t)))return Et(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&St(o,"number",o.value)}},zt=ue.extend({view:null,detail:null}),$t={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Wt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=$t[e])&&!!t[e]}function Bt(){return Wt}var Vt=0,Ht=0,qt=!1,Qt=!1,Kt=zt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Bt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Vt;return Vt=e.screenX,qt?"mousemove"===e.type?e.screenX-t:0:(qt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ht;return Ht=e.screenY,Qt?"mousemove"===e.type?e.screenY-t:0:(Qt=!0,0)}}),Yt=Kt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Gt={eventTypes:Xt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?A(t):null):i=null,i===t)return null;var a=void 0,l=void 0,u=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=Kt,l=Xt.mouseLeave,u=Xt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Yt,l=Xt.pointerLeave,u=Xt.pointerEnter,c="pointer");var s=null==i?o:L(i);if(o=null==t?o:L(t),(e=a.getPooled(l,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=a.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,a=t=i;a;a=F(a))c++;for(a=0,u=o;u;u=F(u))a++;for(;0<c-a;)t=F(t),c--;for(;0<a-c;)o=F(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=F(t),o=F(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=F(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=F(r);for(r=0;r<t.length;r++)W(t[r],"bubbled",e);for(r=i.length;0<r--;)W(i[r],"captured",n);return[e,n]}};function Jt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Jt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Jt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}l||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=zt.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=zt.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Bt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),dn=Kt.extend({dataTransfer:null}),pn=zt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Bt}),mn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),hn=Kt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[G,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},gn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),vn.forEach(function(e){bn(e,!1)});var wn={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Kt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=dn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case G:case J:case Z:e=on;break;case ee:e=mn;break;case"scroll":e=zt;break;case"wheel":e=hn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Yt;break;default:e=ue}return V(t=e.getPooled(o,t,n,r)),t}},xn=wn.isInteractiveTopLevelEventType,kn=[];function Tn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=A(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Fe(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<y.length;l++){var u=y[l];u&&(u=u.extractEvents(r,t,i,o))&&(a=C(a,u))}R(a)}}var Sn=!0;function Cn(e,t){if(!t)return null;var n=(xn(e)?Pn:_n).bind(null,e);t.addEventListener(e,n,!1)}function En(e,t){if(!t)return null;var n=(xn(e)?Pn:_n).bind(null,e);t.addEventListener(e,n,!0)}function Pn(e,t){je(_n,e,t)}function _n(e,t){if(Sn){var n=Fe(t);if(null===(n=A(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),kn.length){var r=kn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ie(Tn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>kn.length&&kn.push(e)}}}var On={},Nn=0,Rn="_reactListenersID"+(""+Math.random()).slice(2);function Mn(e){return Object.prototype.hasOwnProperty.call(e,Rn)||(e[Rn]=Nn++,On[e[Rn]]={}),On[e[Rn]]}function jn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Un(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function An(e,t){var n,r=Un(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Un(r)}}function In(){for(var e=window,t=jn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=jn(e.document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Dn(e){var t=In(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&Ln(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,i=Math.min(r.start,o);r=void 0===r.end?i:Math.min(r.end,o),!e.extend&&i>r&&(o=r,r=i,i=o),o=An(n,i);var a=An(n,r);o&&a&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Fn=H&&"documentMode"in document&&11>=document.documentMode,zn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$n=null,Wn=null,Bn=null,Vn=!1;function Hn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Vn||null==$n||$n!==jn(n)?null:("selectionStart"in(n=$n)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Bn&&en(Bn,n)?null:(Bn=n,(e=ue.getPooled(zn.select,Wn,e,t)).type="select",e.target=$n,V(e),e))}var qn={eventTypes:zn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Mn(i),o=w.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?L(t):window,e){case"focus":(De(i)||"true"===i.contentEditable)&&($n=i,Wn=t,Bn=null);break;case"blur":Bn=Wn=$n=null;break;case"mousedown":Vn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Vn=!1,Hn(n,r);case"selectionchange":if(Fn)break;case"keydown":case"keyup":return Hn(n,r)}return null}};function Qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Kn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Yn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Xn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Gn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Jn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}O.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=D,k=I,T=L,O.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Gt,ChangeEventPlugin:Ft,SelectEventPlugin:qn,BeforeInputEventPlugin:Ce});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr,rr=void 0,or=(nr=function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((rr=rr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=rr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return nr(e,t)})}:nr);function ir(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},lr=["Webkit","ms","Moz","O"];function ur(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function cr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ur(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){lr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function fr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function dr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=Mn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":En("scroll",e);break;case"focus":case"blur":En("focus",e),En("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":ze(o)&&En(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Cn(o,e)}n[o]=!0}}}function mr(){}var hr=null,vr=null;function yr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,wr="function"==typeof clearTimeout?clearTimeout:void 0,xr=i.unstable_scheduleCallback,kr=i.unstable_cancelCallback;function Tr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Sr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Cr=[],Er=-1;function Pr(e){0>Er||(e.current=Cr[Er],Cr[Er]=null,Er--)}function _r(e,t){Cr[++Er]=e.current,e.current=t}var Or={},Nr={current:Or},Rr={current:!1},Mr=Or;function jr(e,t){var n=e.type.contextTypes;if(!n)return Or;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Ur(e){return null!=(e=e.childContextTypes)}function Ar(e){Pr(Rr),Pr(Nr)}function Ir(e){Pr(Rr),Pr(Nr)}function Lr(e,t,n){Nr.current!==Or&&a("168"),_r(Nr,t),_r(Rr,n)}function Dr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",lt(t)||"Unknown",i);return o({},n,r)}function Fr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Or,Mr=Nr.current,_r(Nr,t),_r(Rr,Rr.current),!0}function zr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Dr(e,t,Mr),r.__reactInternalMemoizedMergedChildContext=t,Pr(Rr),Pr(Nr),_r(Nr,t)):Pr(Rr),_r(Rr,n)}var $r=null,Wr=null;function Br(e){return function(t){try{return e(t)}catch(e){}}}function Vr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Hr(e,t,n,r){return new Vr(e,t,n,r)}function qr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Qr(e,t){var n=e.alternate;return null===n?((n=Hr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Kr(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)qr(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Ye:return Yr(n.children,o,i,t);case et:return Xr(n,3|o,i,t);case Xe:return Xr(n,2|o,i,t);case Ge:return(e=Hr(12,n,t,4|o)).elementType=Ge,e.type=Ge,e.expirationTime=i,e;case nt:return(e=Hr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=Hr(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Yr(e,t,n,r){return(e=Hr(7,e,r,t)).expirationTime=n,e}function Xr(e,t,n,r){return e=Hr(8,e,r,t),t=0==(1&t)?Xe:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Gr(e,t,n){return(e=Hr(6,e,null,t)).expirationTime=n,e}function Jr(e,t,n){return(t=Hr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Zr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),no(t,e)}function eo(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),no(t,e)}function to(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function no(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function ro(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var oo=(new r.Component).refs;function io(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=kl(),o=Xi(r=Ya(r,e));o.payload=t,null!=n&&(o.callback=n),Ba(),Ji(e,o),Ja(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=kl(),o=Xi(r=Ya(r,e));o.tag=Vi,o.payload=t,null!=n&&(o.callback=n),Ba(),Ji(e,o),Ja(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=kl(),r=Xi(n=Ya(n,e));r.tag=Hi,null!=t&&(r.callback=t),Ba(),Ji(e,r),Ja(e,n)}};function lo(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function uo(e,t,n){var r=!1,o=Or,i=t.contextType;return"object"==typeof i&&null!==i?i=Wi(i):(o=Ur(t)?Mr:Nr.current,i=(r=null!=(r=t.contextTypes))?jr(e,o):Or),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function co(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function so(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=oo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Wi(i):(i=Ur(t)?Mr:Nr.current,o.context=jr(e,i)),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(io(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ao.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var fo=Array.isArray;function po(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("309"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===oo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function mo(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function ho(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Qr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Gr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=po(e,t,n),r.return=e,r):((r=Kr(n.type,n.key,n.props,null,e.mode,r)).ref=po(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Jr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Yr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Gr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Qe:return(n=Kr(t.type,t.key,t.props,null,e.mode,n)).ref=po(e,null,t),n.return=e,n;case Ke:return(t=Jr(t,e.mode,n)).return=e,t}if(fo(t)||at(t))return(t=Yr(t,e.mode,n,null)).return=e,t;mo(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Qe:return n.key===o?n.type===Ye?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case Ke:return n.key===o?s(e,t,n,r):null}if(fo(n)||at(n))return null!==o?null:f(e,t,n,r,null);mo(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Ye?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case Ke:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(fo(r)||at(r))return f(t,e=e.get(n)||null,r,o,null);mo(t,r)}return null}function h(o,a,l,u){for(var c=null,s=null,f=a,h=a=0,v=null;null!==f&&h<l.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var y=p(o,f,l[h],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),a=i(y,a,h),null===s?c=y:s.sibling=y,s=y,f=v}if(h===l.length)return n(o,f),c;if(null===f){for(;h<l.length;h++)(f=d(o,l[h],u))&&(a=i(f,a,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<l.length;h++)(v=m(f,o,h,l[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),a=i(v,a,h),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach(function(e){return t(o,e)}),c}function v(o,l,u,c){var s=at(u);"function"!=typeof s&&a("150"),null==(u=s.call(u))&&a("151");for(var f=s=null,h=l,v=l=0,y=null,g=u.next();null!==h&&!g.done;v++,g=u.next()){h.index>v?(y=h,h=null):y=h.sibling;var b=p(o,h,g.value,c);if(null===b){h||(h=y);break}e&&h&&null===b.alternate&&t(o,h),l=i(b,l,v),null===f?s=b:f.sibling=b,f=b,h=y}if(g.done)return n(o,h),s;if(null===h){for(;!g.done;v++,g=u.next())null!==(g=d(o,g.value,c))&&(l=i(g,l,v),null===f?s=g:f.sibling=g,f=g);return s}for(h=r(o,h);!g.done;v++,g=u.next())null!==(g=m(h,o,v,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?v:g.key),l=i(g,l,v),null===f?s=g:f.sibling=g,f=g);return e&&h.forEach(function(e){return t(o,e)}),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===Ye&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Qe:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Ye:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Ye?i.props.children:i.props)).ref=po(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Ye?((r=Yr(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Kr(i.type,i.key,i.props,null,e.mode,u)).ref=po(e,r,i),u.return=e,e=u)}return l(e);case Ke:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Jr(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Gr(i,e.mode,u)).return=e,e=r),l(e);if(fo(i))return h(e,r,i,u);if(at(i))return v(e,r,i,u);if(s&&mo(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:a("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var vo=ho(!0),yo=ho(!1),go={},bo={current:go},wo={current:go},xo={current:go};function ko(e){return e===go&&a("174"),e}function To(e,t){_r(xo,t),_r(wo,e),_r(bo,go);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Pr(bo),_r(bo,t)}function So(e){Pr(bo),Pr(wo),Pr(xo)}function Co(e){ko(xo.current);var t=ko(bo.current),n=tr(t,e.type);t!==n&&(_r(wo,e),_r(bo,n))}function Eo(e){wo.current===e&&(Pr(bo),Pr(wo))}var Po=0,_o=2,Oo=4,No=8,Ro=16,Mo=32,jo=64,Uo=128,Ao=Ve.ReactCurrentDispatcher,Io=0,Lo=null,Do=null,Fo=null,zo=null,$o=null,Wo=null,Bo=0,Vo=null,Ho=0,qo=!1,Qo=null,Ko=0;function Yo(){a("307")}function Xo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Jt(e[n],t[n]))return!1;return!0}function Go(e,t,n,r,o,i){if(Io=i,Lo=t,Fo=null!==e?e.memoizedState:null,Ao.current=null===Fo?si:fi,t=n(r,o),qo){do{qo=!1,Ko+=1,Fo=null!==e?e.memoizedState:null,Wo=zo,Vo=$o=Do=null,Ao.current=fi,t=n(r,o)}while(qo);Qo=null,Ko=0}return Ao.current=ci,(e=Lo).memoizedState=zo,e.expirationTime=Bo,e.updateQueue=Vo,e.effectTag|=Ho,e=null!==Do&&null!==Do.next,Io=0,Wo=$o=zo=Fo=Do=Lo=null,Bo=0,Vo=null,Ho=0,e&&a("300"),t}function Jo(){Ao.current=ci,Io=0,Wo=$o=zo=Fo=Do=Lo=null,Bo=0,Vo=null,Ho=0,qo=!1,Qo=null,Ko=0}function Zo(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===$o?zo=$o=e:$o=$o.next=e,$o}function ei(){if(null!==Wo)Wo=($o=Wo).next,Fo=null!==(Do=Fo)?Do.next:null;else{null===Fo&&a("310");var e={memoizedState:(Do=Fo).memoizedState,baseState:Do.baseState,queue:Do.queue,baseUpdate:Do.baseUpdate,next:null};$o=null===$o?zo=e:$o.next=e,Fo=Do.next}return $o}function ti(e,t){return"function"==typeof t?t(e):t}function ni(e){var t=ei(),n=t.queue;if(null===n&&a("311"),0<Ko){var r=n.dispatch;if(null!==Qo){var o=Qo.get(n);if(void 0!==o){Qo.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return Jt(i,t.memoizedState)||(ki=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.eagerReducer=e,n.eagerState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(i=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<Io?(s||(s=!0,u=l,o=i),f>Bo&&(Bo=f)):i=c.eagerReducer===e?c.eagerState:e(i,c.action),l=c,c=c.next}while(null!==c&&c!==r);s||(u=l,o=i),Jt(i,t.memoizedState)||(ki=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=o,n.eagerReducer=e,n.eagerState=i}return[t.memoizedState,n.dispatch]}function ri(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Vo?(Vo={lastEffect:null}).lastEffect=e.next=e:null===(t=Vo.lastEffect)?Vo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Vo.lastEffect=e),e}function oi(e,t,n,r){var o=Zo();Ho|=e,o.memoizedState=ri(t,n,void 0,void 0===r?null:r)}function ii(e,t,n,r){var o=ei();r=void 0===r?null:r;var i=void 0;if(null!==Do){var a=Do.memoizedState;if(i=a.destroy,null!==r&&Xo(r,a.deps))return void ri(Po,n,i,r)}Ho|=e,o.memoizedState=ri(t,n,i,r)}function ai(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function li(){}function ui(e,t,n){25>Ko||a("301");var r=e.alternate;if(e===Lo||null!==r&&r===Lo)if(qo=!0,e={expirationTime:Io,action:n,eagerReducer:null,eagerState:null,next:null},null===Qo&&(Qo=new Map),void 0===(n=Qo.get(t)))Qo.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Ba();var o=kl(),i={expirationTime:o=Ya(o,e),action:n,eagerReducer:null,eagerState:null,next:null},l=t.last;if(null===l)i.next=i;else{var u=l.next;null!==u&&(i.next=u),l.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.eagerReducer))try{var c=t.eagerState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,Jt(s,c))return}catch(e){}Ja(e,o)}}var ci={readContext:Wi,useCallback:Yo,useContext:Yo,useEffect:Yo,useImperativeHandle:Yo,useLayoutEffect:Yo,useMemo:Yo,useReducer:Yo,useRef:Yo,useState:Yo,useDebugValue:Yo},si={readContext:Wi,useCallback:function(e,t){return Zo().memoizedState=[e,void 0===t?null:t],e},useContext:Wi,useEffect:function(e,t){return oi(516,Uo|jo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oi(4,Oo|Mo,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oi(4,Oo|Mo,e,t)},useMemo:function(e,t){var n=Zo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Zo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,eagerReducer:e,eagerState:t}).dispatch=ui.bind(null,Lo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Zo().memoizedState=e},useState:function(e){var t=Zo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,eagerReducer:ti,eagerState:e}).dispatch=ui.bind(null,Lo,e),[t.memoizedState,e]},useDebugValue:li},fi={readContext:Wi,useCallback:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Wi,useEffect:function(e,t){return ii(516,Uo|jo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ii(4,Oo|Mo,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ii(4,Oo|Mo,e,t)},useMemo:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ni,useRef:function(){return ei().memoizedState},useState:function(e){return ni(ti)},useDebugValue:li},di=null,pi=null,mi=!1;function hi(e,t){var n=Hr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function vi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function yi(e){if(mi){var t=pi;if(t){var n=t;if(!vi(e,t)){if(!(t=Tr(n))||!vi(e,t))return e.effectTag|=2,mi=!1,void(di=e);hi(di,n)}di=e,pi=Sr(t)}else e.effectTag|=2,mi=!1,di=e}}function gi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;di=e}function bi(e){if(e!==di)return!1;if(!mi)return gi(e),mi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gr(t,e.memoizedProps))for(t=pi;t;)hi(e,t),t=Tr(t);return gi(e),pi=di?Tr(e.stateNode):null,!0}function wi(){pi=di=null,mi=!1}var xi=Ve.ReactCurrentOwner,ki=!1;function Ti(e,t,n,r){t.child=null===e?yo(t,null,n,r):vo(t,e.child,n,r)}function Si(e,t,n,r,o){n=n.render;var i=t.ref;return $i(t,o),r=Go(e,t,n,r,i,o),null===e||ki?(t.effectTag|=1,Ti(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),ji(e,t,o))}function Ci(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||qr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Kr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ei(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?ji(e,t,i):(t.effectTag|=1,(e=Qr(a,r)).ref=t.ref,e.return=t,t.child=e)}function Ei(e,t,n,r,o,i){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(ki=!1,o<i)?ji(e,t,i):_i(e,t,n,r,i)}function Pi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function _i(e,t,n,r,o){var i=Ur(n)?Mr:Nr.current;return i=jr(t,i),$i(t,o),n=Go(e,t,n,r,i,o),null===e||ki?(t.effectTag|=1,Ti(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),ji(e,t,o))}function Oi(e,t,n,r,o){if(Ur(n)){var i=!0;Fr(t)}else i=!1;if($i(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),uo(t,n,r),so(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=Wi(c):c=jr(t,c=Ur(n)?Mr:Nr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&co(t,a,r,c),Qi=!1;var d=t.memoizedState;u=a.state=d;var p=t.updateQueue;null!==p&&(na(t,p,r,a,o),u=t.memoizedState),l!==r||d!==u||Rr.current||Qi?("function"==typeof s&&(io(t,n,s,r),u=t.memoizedState),(l=Qi||lo(t,n,l,r,d,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=t.type===t.elementType?l:ro(t.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=Wi(c):c=jr(t,c=Ur(n)?Mr:Nr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&co(t,a,r,c),Qi=!1,u=t.memoizedState,d=a.state=u,null!==(p=t.updateQueue)&&(na(t,p,r,a,o),d=t.memoizedState),l!==r||u!==d||Rr.current||Qi?("function"==typeof s&&(io(t,n,s,r),d=t.memoizedState),(s=Qi||lo(t,n,l,r,u,d,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ni(e,t,n,r,i,o)}function Ni(e,t,n,r,o,i){Pi(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&zr(t,n,!1),ji(e,t,i);r=t.stateNode,xi.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=vo(t,e.child,null,i),t.child=vo(t,null,l,i)):Ti(e,t,l,i),t.memoizedState=r.state,o&&zr(t,n,!0),t.child}function Ri(e){var t=e.stateNode;t.pendingContext?Lr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Lr(0,t.context,!1),To(e,t.containerInfo)}function Mi(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var l=o.fallback;e=Yr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Yr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=yo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,a?(n=o.fallback,o=Qr(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a)),r=o.sibling=Qr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=vo(t,r.child,o.children,n)):(l=e.child,a?(a=o.fallback,(o=Yr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Yr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=vo(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function ji(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=Qr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Qr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ui(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Rr.current)ki=!0;else if(r<n){switch(ki=!1,t.tag){case 3:Ri(t),wi();break;case 5:Co(t);break;case 1:Ur(t.type)&&Fr(t);break;case 4:To(t,t.stateNode.containerInfo);break;case 10:Fi(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Mi(e,t,n):null!==(t=ji(e,t,n))?t.sibling:null}return ji(e,t,n)}}else ki=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=jr(t,Nr.current);if($i(t,n),o=Go(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Jo(),Ur(r)){var i=!0;Fr(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&io(t,r,l,e),o.updater=ao,t.stateNode=o,o._reactInternalFiber=t,so(t,r,e,n),t=Ni(null,t,r,!0,i,n)}else t.tag=0,Ti(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return qr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=ro(e,i),l=void 0,o){case 0:l=_i(null,t,e,i,n);break;case 1:l=Oi(null,t,e,i,n);break;case 11:l=Si(null,t,e,i,n);break;case 14:l=Ci(null,t,e,ro(e.type,i),r,n);break;default:a("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,_i(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 1:return r=t.type,o=t.pendingProps,Oi(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 3:return Ri(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,na(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(wi(),t=ji(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(pi=Sr(t.stateNode.containerInfo),di=t,o=mi=!0),o?(t.effectTag|=2,t.child=yo(t,null,r,n)):(Ti(e,t,r,n),wi()),t=t.child),t;case 5:return Co(t),null===e&&yi(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,gr(r,o)?l=null:null!==i&&gr(r,i)&&(t.effectTag|=16),Pi(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ti(e,t,l,n),t=t.child),t;case 6:return null===e&&yi(t),null;case 13:return Mi(e,t,n);case 4:return To(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=vo(t,null,r,n):Ti(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Si(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 7:return Ti(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ti(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,Fi(t,i=o.value),null!==l){var u=l.value;if(0===(i=Jt(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!Rr.current){t=ji(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.contextDependencies;if(null!==c){l=u.child;for(var s=c.first;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=Xi(n)).tag=Hi,Ji(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),s=n;for(var f=u.return;null!==f;){var d=f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==d&&d.childExpirationTime<s&&(d.childExpirationTime=s);else{if(!(null!==d&&d.childExpirationTime<s))break;d.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}Ti(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,$i(t,n),r=r(o=Wi(o,i.unstable_observedBits)),t.effectTag|=1,Ti(e,t,r,n),t.child;case 14:return i=ro(o=t.type,t.pendingProps),Ci(e,t,o,i=ro(o.type,i),r,n);case 15:return Ei(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:ro(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Ur(r)?(e=!0,Fr(t)):e=!1,$i(t,n),uo(t,r,o),so(t,r,o,n),Ni(null,t,r,!0,e,n)}a("156")}var Ai={current:null},Ii=null,Li=null,Di=null;function Fi(e,t){var n=e.type._context;_r(Ai,n._currentValue),n._currentValue=t}function zi(e){var t=Ai.current;Pr(Ai),e.type._context._currentValue=t}function $i(e,t){Ii=e,Di=Li=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(ki=!0),e.contextDependencies=null}function Wi(e,t){return Di!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Di=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Li?(null===Ii&&a("308"),Li=t,Ii.contextDependencies={first:t,expirationTime:0}):Li=Li.next=t),e._currentValue}var Bi=0,Vi=1,Hi=2,qi=3,Qi=!1;function Ki(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Yi(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Xi(e){return{expirationTime:e,tag:Bi,payload:null,callback:null,next:null,nextEffect:null}}function Gi(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Ji(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Ki(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Ki(e.memoizedState),o=n.updateQueue=Ki(n.memoizedState)):r=e.updateQueue=Yi(o):null===o&&(o=n.updateQueue=Yi(r));null===o||r===o?Gi(r,t):null===r.lastUpdate||null===o.lastUpdate?(Gi(r,t),Gi(o,t)):(Gi(r,t),o.lastUpdate=t)}function Zi(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Ki(e.memoizedState):ea(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ea(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Yi(t)),t}function ta(e,t,n,r,i,a){switch(n.tag){case Vi:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case qi:e.effectTag=-2049&e.effectTag|64;case Bi:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case Hi:Qi=!0}return r}function na(e,t,n,r,o){Qi=!1;for(var i=(t=ea(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===a&&(a=u,i=c),l<s&&(l=s)):(c=ta(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===a&&(i=c)),l<f&&(l=f)):(c=ta(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=l,e.memoizedState=c}function ra(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),oa(t.firstEffect,n),t.firstEffect=t.lastEffect=null,oa(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function oa(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function ia(e,t){return{value:e,source:t,stack:ut(t)}}function aa(e){e.effectTag|=4}var la=void 0,ua=void 0,ca=void 0,sa=void 0;la=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},ua=function(){},ca=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(ko(bo.current),e=null,n){case"input":a=bt(l,a),r=bt(l,r),e=[];break;case"option":a=Qn(l,a),r=Qn(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Yn(l,a),r=Yn(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=mr)}fr(n,r),l=n=void 0;var u=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(l in c)c.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(u||(u={}),u[l]=s[l])}else u||(e||(e=[]),e.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&pr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&aa(t)}},sa=function(e,t,n,r){n!==r&&aa(t)};var fa="function"==typeof WeakSet?WeakSet:Set;function da(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function pa(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ka(e,t)}else t.current=null}function ma(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==Po){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==Po&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function ha(e){switch("function"==typeof Wr&&Wr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){Ka(o,e)}}n=n.next}while(n!==t)}break;case 1:if(pa(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Ka(e,t)}break;case 5:pa(e);break;case 4:ga(e)}}function va(e){return 5===e.tag||3===e.tag||4===e.tag}function ya(e){e:{for(var t=e.return;null!==t;){if(va(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(ir(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||va(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,l=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(l,u):i.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(i=l.parentNode).insertBefore(u,l):(i=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==i.onclick||(i.onclick=mr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function ga(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,l=i;;)if(ha(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===i)break;for(;null===l.sibling;){if(null===l.return||l.return===i)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(i=r,l=t.stateNode,8===i.nodeType?i.parentNode.removeChild(l):i.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(ha(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function ba(e,t){switch(t.tag){case 0:case 11:case 14:case 15:ma(Oo,No,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&function(e,t,n,r,o){e[U]=o,"input"===n&&"radio"===o.type&&null!=o.name&&xt(e,o),dr(n,r),r=dr(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],l=t[i+1];"style"===a?cr(e,l):"dangerouslySetInnerHTML"===a?or(e,l):"children"===a?ir(e,l):yt(e,a,l,r)}switch(n){case"input":kt(e,o);break;case"textarea":Gn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Kn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Kn(e,!!o.multiple,o.defaultValue,!0):Kn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,e,r)}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=kl())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=ur("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new fa),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Ya(t=kl(),e),null!==(e=Ga(e,t))&&(Zr(e,t),0!==(t=e.expirationTime)&&Tl(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:a("163")}}var wa="function"==typeof WeakMap?WeakMap:Map;function xa(e,t,n){(n=Xi(n)).tag=qi,n.payload={element:null};var r=t.value;return n.callback=function(){Ml(r),da(e,t)},n}function ka(e,t,n){(n=Xi(n)).tag=qi;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Da?Da=new Set([this]):Da.add(this));var n=t.value,o=t.stack;da(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function Ta(e){switch(e.tag){case 1:Ur(e.type)&&Ar();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return So(),Ir(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return Eo(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return So(),null;case 10:return zi(e),null;default:return null}}var Sa=Ve.ReactCurrentDispatcher,Ca=Ve.ReactCurrentOwner,Ea=1073741822,Pa=!1,_a=null,Oa=null,Na=0,Ra=-1,Ma=!1,ja=null,Ua=!1,Aa=null,Ia=null,La=null,Da=null;function Fa(){if(null!==_a)for(var e=_a.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Ar();break;case 3:So(),Ir();break;case 5:Eo(t);break;case 4:So();break;case 10:zi(t)}e=e.return}Oa=null,Na=0,Ra=-1,Ma=!1,_a=null}function za(){for(;null!==ja;){var e=ja.effectTag;if(16&e&&ir(ja.stateNode,""),128&e){var t=ja.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:ya(ja),ja.effectTag&=-3;break;case 6:ya(ja),ja.effectTag&=-3,ba(ja.alternate,ja);break;case 4:ba(ja.alternate,ja);break;case 8:ga(e=ja),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}ja=ja.nextEffect}}function $a(){for(;null!==ja;){if(256&ja.effectTag)e:{var e=ja.alternate,t=ja;switch(t.tag){case 0:case 11:case 15:ma(_o,Po,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ro(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}ja=ja.nextEffect}}function Wa(e,t){for(;null!==ja;){var n=ja.effectTag;if(36&n){var r=ja.alternate,o=ja,i=t;switch(o.tag){case 0:case 11:case 15:ma(Ro,Mo,o);break;case 1:var l=o.stateNode;if(4&o.effectTag)if(null===r)l.componentDidMount();else{var u=o.elementType===o.type?r.memoizedProps:ro(o.type,r.memoizedProps);l.componentDidUpdate(u,r.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ra(0,r,l);break;case 3:if(null!==(r=o.updateQueue)){if(l=null,null!==o.child)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}ra(0,r,l)}break;case 5:i=o.stateNode,null===r&&4&o.effectTag&&yr(o.type,o.memoizedProps)&&i.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}128&n&&(null!==(o=ja.ref)&&(i=ja.stateNode,"function"==typeof o?o(i):o.current=i)),512&n&&(Aa=e),ja=ja.nextEffect}}function Ba(){null!==Ia&&kr(Ia),null!==La&&La()}function Va(e,t){Ua=Pa=!0,e.current===t&&a("177");var n=e.pendingCommitExpirationTime;0===n&&a("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Zr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Zr(e,t)):t>n&&Zr(e,t)}no(0,e)}(e,o>r?o:r),Ca.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,hr=Sn,vr=function(){var e=In();if(Ln(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var i=0,a=-1,l=-1,u=0,c=0,s=e,f=null;t:for(;;){for(var d;s!==t||0!==r&&3!==s.nodeType||(a=i+r),s!==o||0!==n&&3!==s.nodeType||(l=i+n),3===s.nodeType&&(i+=s.nodeValue.length),null!==(d=s.firstChild);)f=s,s=d;for(;;){if(s===e)break t;if(f===t&&++u===r&&(a=i),f===o&&++c===n&&(l=i),null!==(d=s.nextSibling))break;f=(s=f).parentNode}s=d}t=-1===a||-1===l?null:{start:a,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),Sn=!1,ja=r;null!==ja;){o=!1;var l=void 0;try{$a()}catch(e){o=!0,l=e}o&&(null===ja&&a("178"),Ka(ja,l),null!==ja&&(ja=ja.nextEffect))}for(ja=r;null!==ja;){o=!1,l=void 0;try{za()}catch(e){o=!0,l=e}o&&(null===ja&&a("178"),Ka(ja,l),null!==ja&&(ja=ja.nextEffect))}for(Dn(vr),vr=null,Sn=!!hr,hr=null,e.current=t,ja=r;null!==ja;){o=!1,l=void 0;try{Wa(e,n)}catch(e){o=!0,l=e}o&&(null===ja&&a("178"),Ka(ja,l),null!==ja&&(ja=ja.nextEffect))}if(null!==r&&null!==Aa){var u=function(e,t){La=Ia=Aa=null;var n=ol;ol=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var i=t;ma(Uo,Po,i),ma(Po,jo,i)}catch(e){r=!0,o=e}r&&Ka(t,o)}t=t.nextEffect}while(null!==t);ol=n,0!==(n=e.expirationTime)&&Tl(e,n),sl||ol||_l(1073741823,!1)}.bind(null,e,r);Ia=i.unstable_runWithPriority(i.unstable_NormalPriority,function(){return xr(u)}),La=u}Pa=Ua=!1,"function"==typeof $r&&$r(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(Da=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Ha(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){_a=e;e:{var i=t,l=Na,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Ur(t.type)&&Ar();break;case 3:So(),Ir(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(bi(t),t.effectTag&=-3),ua(t);break;case 5:Eo(t);var c=ko(xo.current);if(l=t.type,null!==i&&null!=t.stateNode)ca(i,t,l,u,c),i.ref!==t.ref&&(t.effectTag|=128);else if(u){var s=ko(bo.current);if(bi(t)){i=(u=t).stateNode;var f=u.type,d=u.memoizedProps,p=c;switch(i[j]=u,i[U]=d,l=void 0,c=f){case"iframe":case"object":Cn("load",i);break;case"video":case"audio":for(f=0;f<te.length;f++)Cn(te[f],i);break;case"source":Cn("error",i);break;case"img":case"image":case"link":Cn("error",i),Cn("load",i);break;case"form":Cn("reset",i),Cn("submit",i);break;case"details":Cn("toggle",i);break;case"input":wt(i,d),Cn("invalid",i),pr(p,"onChange");break;case"select":i._wrapperState={wasMultiple:!!d.multiple},Cn("invalid",i),pr(p,"onChange");break;case"textarea":Xn(i,d),Cn("invalid",i),pr(p,"onChange")}for(l in fr(c,d),f=null,d)d.hasOwnProperty(l)&&(s=d[l],"children"===l?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(l)&&null!=s&&pr(p,l));switch(c){case"input":We(i),Tt(i,d,!0);break;case"textarea":We(i),Jn(i);break;case"select":case"option":break;default:"function"==typeof d.onClick&&(i.onclick=mr)}l=f,u.updateQueue=l,(u=null!==l)&&aa(t)}else{d=t,i=l,p=u,f=9===c.nodeType?c:c.ownerDocument,s===Zn.html&&(s=er(i)),s===Zn.html?"script"===i?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof p.is?f=f.createElement(i,{is:p.is}):(f=f.createElement(i),"select"===i&&p.multiple&&(f.multiple=!0)):f=f.createElementNS(s,i),(i=f)[j]=d,i[U]=u,la(i,t,!1,!1),p=i;var m=c,h=dr(f=l,d=u);switch(f){case"iframe":case"object":Cn("load",p),c=d;break;case"video":case"audio":for(c=0;c<te.length;c++)Cn(te[c],p);c=d;break;case"source":Cn("error",p),c=d;break;case"img":case"image":case"link":Cn("error",p),Cn("load",p),c=d;break;case"form":Cn("reset",p),Cn("submit",p),c=d;break;case"details":Cn("toggle",p),c=d;break;case"input":wt(p,d),c=bt(p,d),Cn("invalid",p),pr(m,"onChange");break;case"option":c=Qn(p,d);break;case"select":p._wrapperState={wasMultiple:!!d.multiple},c=o({},d,{value:void 0}),Cn("invalid",p),pr(m,"onChange");break;case"textarea":Xn(p,d),c=Yn(p,d),Cn("invalid",p),pr(m,"onChange");break;default:c=d}fr(f,c),s=void 0;var v=f,y=p,g=c;for(s in g)if(g.hasOwnProperty(s)){var w=g[s];"style"===s?cr(y,w):"dangerouslySetInnerHTML"===s?null!=(w=w?w.__html:void 0)&&or(y,w):"children"===s?"string"==typeof w?("textarea"!==v||""!==w)&&ir(y,w):"number"==typeof w&&ir(y,""+w):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=w&&pr(m,s):null!=w&&yt(y,s,w,h))}switch(f){case"input":We(p),Tt(p,d,!1);break;case"textarea":We(p),Jn(p);break;case"option":null!=d.value&&p.setAttribute("value",""+gt(d.value));break;case"select":(c=p).multiple=!!d.multiple,null!=(p=d.value)?Kn(c,!!d.multiple,p,!1):null!=d.defaultValue&&Kn(c,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof c.onClick&&(p.onclick=mr)}(u=yr(l,u))&&aa(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?sa(i,t,i.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&a("166")),i=ko(xo.current),ko(bo.current),bi(t)?(l=(u=t).stateNode,i=u.memoizedProps,l[j]=u,(u=l.nodeValue!==i)&&aa(t)):(l=t,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[j]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,_a=t;break e}u=null!==u,l=null!==i&&null!==i.memoizedState,null!==i&&!u&&l&&(null!==(i=i.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=i,i.nextEffect=c):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(u||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:So(),ua(t);break;case 10:zi(t);break;case 9:case 14:break;case 17:Ur(t.type)&&Ar();break;case 18:break;default:a("156")}_a=null}if(t=e,1===Na||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)(i=l.expirationTime)>u&&(u=i),(c=l.childExpirationTime)>u&&(u=c),l=l.sibling;t.childExpirationTime=u}if(null!==_a)return _a;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Ta(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function qa(e){var t=Ui(e.alternate,e,Na);return e.memoizedProps=e.pendingProps,null===t&&(t=Ha(e)),Ca.current=null,t}function Qa(e,t){Pa&&a("243"),Ba(),Pa=!0;var n=Sa.current;Sa.current=ci;var r=e.nextExpirationTimeToWorkOn;r===Na&&e===Oa&&null!==_a||(Fa(),Na=r,_a=Qr((Oa=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==_a&&!El();)_a=qa(_a);else for(;null!==_a;)_a=qa(_a)}catch(t){if(Di=Li=Ii=null,Jo(),null===_a)o=!0,Ml(t);else{null===_a&&a("271");var i=_a,l=i.return;if(null!==l){e:{var u=e,c=l,s=i,f=t;if(l=Na,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var d=f;f=c;var p=-1,m=-1;do{if(13===f.tag){var h=f.alternate;if(null!==h&&null!==(h=h.memoizedState)){m=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=f.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}f=f.return}while(null!==f);f=c;do{if((h=13===f.tag)&&(h=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),h){if(null===(c=f.updateQueue)?((c=new Set).add(d),f.updateQueue=c):c.add(d),0==(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((l=Xi(1073741823)).tag=Hi,Ji(s,l))),s.expirationTime=1073741823;break e}c=l;var v=(s=u).pingCache;null===v?(v=s.pingCache=new wa,h=new Set,v.set(d,h)):void 0===(h=v.get(d))&&(h=new Set,v.set(d,h)),h.has(c)||(h.add(c),s=Xa.bind(null,s,d,c),d.then(s,s)),-1===p?u=1073741823:(-1===m&&(m=10*(1073741822-to(u,l))-5e3),u=m+p),0<=u&&Ra<u&&(Ra=u),f.effectTag|=2048,f.expirationTime=l;break e}f=f.return}while(null!==f);f=Error((lt(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(s))}Ma=!0,f=ia(f,s),u=c;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=l,Zi(u,l=xa(u,f,l));break e;case 1:if(p=f,m=u.type,s=u.stateNode,0==(64&u.effectTag)&&("function"==typeof m.getDerivedStateFromError||null!==s&&"function"==typeof s.componentDidCatch&&(null===Da||!Da.has(s)))){u.effectTag|=2048,u.expirationTime=l,Zi(u,l=ka(u,p,l));break e}}u=u.return}while(null!==u)}_a=Ha(i);continue}o=!0,Ml(t)}}break}if(Pa=!1,Sa.current=n,Di=Li=Ii=null,Jo(),o)Oa=null,e.finishedWork=null;else if(null!==_a)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&a("281"),Oa=null,Ma){if(o=e.latestPendingTime,i=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<r||0!==i&&i<r||0!==l&&l<r)return eo(e,r),void xl(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void xl(e,n,r,t,-1)}t&&-1!==Ra?(eo(e,r),(t=10*(1073741822-to(e,r)))<Ra&&(Ra=t),t=10*(1073741822-kl()),t=Ra-t,xl(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Ka(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Da||!Da.has(r)))return Ji(n,e=ka(n,e=ia(t,e),1073741823)),void Ja(n,1073741823);break;case 3:return Ji(n,e=xa(n,e=ia(t,e),1073741823)),void Ja(n,1073741823)}n=n.return}3===e.tag&&(Ji(e,n=xa(e,n=ia(t,e),1073741823)),Ja(e,1073741823))}function Ya(e,t){var n=i.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(Pa&&!Ua)r=Na;else{switch(n){case i.unstable_ImmediatePriority:r=1073741823;break;case i.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case i.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case i.unstable_LowPriority:case i.unstable_IdlePriority:r=1;break;default:a("313")}null!==Oa&&r===Na&&--r}return n===i.unstable_UserBlockingPriority&&(0===ll||r<ll)&&(ll=r),r}function Xa(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Oa&&Na===n?Oa=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),no(n,e),0!==(n=e.expirationTime)&&Tl(e,n)))}function Ga(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Ja(e,t){null!==(e=Ga(e,t))&&(!Pa&&0!==Na&&t>Na&&Fa(),Zr(e,t),Pa&&!Ua&&Oa===e||Tl(e,e.expirationTime),yl>vl&&(yl=0,a("185")))}function Za(e,t,n,r,o){return i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var el=null,tl=null,nl=0,rl=void 0,ol=!1,il=null,al=0,ll=0,ul=!1,cl=null,sl=!1,fl=!1,dl=null,pl=i.unstable_now(),ml=1073741822-(pl/10|0),hl=ml,vl=50,yl=0,gl=null;function bl(){ml=1073741822-((i.unstable_now()-pl)/10|0)}function wl(e,t){if(0!==nl){if(t<nl)return;null!==rl&&i.unstable_cancelCallback(rl)}nl=t,e=i.unstable_now()-pl,rl=i.unstable_scheduleCallback(Pl,{timeout:10*(1073741822-t)-e})}function xl(e,t,n,r,o){e.expirationTime=r,0!==o||El()?0<o&&(e.timeoutHandle=br(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,bl(),hl=ml,Ol(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function kl(){return ol?hl:(Sl(),0!==al&&1!==al||(bl(),hl=ml),hl)}function Tl(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===tl?(el=tl=e,e.nextScheduledRoot=e):(tl=tl.nextScheduledRoot=e).nextScheduledRoot=el):t>e.expirationTime&&(e.expirationTime=t),ol||(sl?fl&&(il=e,al=1073741823,Nl(e,1073741823,!1)):1073741823===t?_l(1073741823,!1):wl(e,t))}function Sl(){var e=0,t=null;if(null!==tl)for(var n=tl,r=el;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===tl)&&a("244"),r===r.nextScheduledRoot){el=tl=r.nextScheduledRoot=null;break}if(r===el)el=o=r.nextScheduledRoot,tl.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===tl){(tl=n).nextScheduledRoot=el,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===tl)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}il=t,al=e}var Cl=!1;function El(){return!!Cl||!!i.unstable_shouldYield()&&(Cl=!0)}function Pl(){try{if(!El()&&null!==el){bl();var e=el;do{var t=e.expirationTime;0!==t&&ml<=t&&(e.nextExpirationTimeToWorkOn=ml),e=e.nextScheduledRoot}while(e!==el)}_l(0,!0)}finally{Cl=!1}}function _l(e,t){if(Sl(),t)for(bl(),hl=ml;null!==il&&0!==al&&e<=al&&!(Cl&&ml>al);)Nl(il,al,ml>al),Sl(),bl(),hl=ml;else for(;null!==il&&0!==al&&e<=al;)Nl(il,al,!1),Sl();if(t&&(nl=0,rl=null),0!==al&&wl(il,al),yl=0,gl=null,null!==dl)for(e=dl,dl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ul||(ul=!0,cl=e)}}if(ul)throw e=cl,cl=null,ul=!1,e}function Ol(e,t){ol&&a("253"),il=e,al=t,Nl(e,t,!1),_l(1073741823,!1)}function Nl(e,t,n){if(ol&&a("245"),ol=!0,n){var r=e.finishedWork;null!==r?Rl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Qa(e,n),null!==(r=e.finishedWork)&&(El()?e.finishedWork=r:Rl(e,r,t)))}else null!==(r=e.finishedWork)?Rl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Qa(e,n),null!==(r=e.finishedWork)&&Rl(e,r,t));ol=!1}function Rl(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===dl?dl=[r]:dl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===gl?yl++:(gl=e,yl=0),i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){Va(e,t)})}function Ml(e){null===il&&a("246"),il.expirationTime=0,ul||(ul=!0,cl=e)}function jl(e,t){var n=sl;sl=!0;try{return e(t)}finally{(sl=n)||ol||_l(1073741823,!1)}}function Ul(e,t){if(sl&&!fl){fl=!0;try{return e(t)}finally{fl=!1}}return e(t)}function Al(e,t,n){sl||ol||0===ll||(_l(ll,!1),ll=0);var r=sl;sl=!0;try{return i.unstable_runWithPriority(i.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(sl=r)||ol||_l(1073741823,!1)}}function Il(e,t,n,r,o){var i=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||a("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Ur(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);a("171"),l=void 0}if(1===n.tag){var u=n.type;if(Ur(u)){n=Dr(n,u,l);break e}}n=l}else n=Or;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Xi(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Ba(),Ji(i,o),Ja(i,r),r}function Ll(e,t,n,r){var o=t.current;return Il(e,t,n,o=Ya(kl(),o),r)}function Dl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fl(e){var t=1073741822-25*(1+((1073741822-kl()+500)/25|0));t>=Ea&&(t=Ea-1),this._expirationTime=Ea=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function zl(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function $l(e,t,n){e={current:t=Hr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Wl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Bl(e,t,n,r,o){var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=Dl(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new $l(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=Dl(i._internalRoot);l.call(e)}}Ul(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return Dl(i._internalRoot)}function Vl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Wl(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ke,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ee=function(e,t,n){switch(t){case"input":if(kt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=D(r);o||a("90"),Be(r),kt(r,o)}}}break;case"textarea":Gn(e,n);break;case"select":null!=(t=n.value)&&Kn(e,!!n.multiple,t,!1)}},Fl.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new zl;return Il(e,t,null,n,r._onCommit),r},Fl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Fl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ol(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Fl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},zl.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},zl.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},$l.prototype.render=function(e,t){var n=this._internalRoot,r=new zl;return null!==(t=void 0===t?null:t)&&r.then(t),Ll(e,n,null,r._onCommit),r},$l.prototype.unmount=function(e){var t=this._internalRoot,n=new zl;return null!==(e=void 0===e?null:e)&&n.then(e),Ll(null,t,null,n._onCommit),n},$l.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new zl;return null!==(n=void 0===n?null:n)&&o.then(n),Ll(t,r,e,o._onCommit),o},$l.prototype.createBatch=function(){var e=new Fl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Me=jl,je=Al,Ue=function(){ol||0===ll||(_l(ll,!1),ll=0)};var Hl={createPortal:Vl,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Wl(t)||a("200"),Bl(null,e,t,!0,n)},render:function(e,t,n){return Wl(t)||a("200"),Bl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Wl(n)||a("200"),(null==e||void 0===e._reactInternalFiber)&&a("38"),Bl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Wl(e)||a("40"),!!e._reactRootContainer&&(Ul(function(){Bl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Vl.apply(void 0,arguments)},unstable_batchedUpdates:jl,unstable_interactiveUpdates:Al,flushSync:function(e,t){ol&&a("187");var n=sl;sl=!0;try{return Za(e,t)}finally{sl=n,_l(1073741823,!1)}},unstable_createRoot:function(e,t){return Wl(e)||a("299","unstable_createRoot"),new $l(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=sl;sl=!0;try{Za(e)}finally{(sl=t)||ol||_l(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[I,L,D,O.injectEventPluginsByName,g,V,function(e){E(e,B)},Ne,Re,_n,R]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);$r=Br(function(e){return t.onCommitFiberRoot(n,e)}),Wr=Br(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:Ve.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:A,bundleType:0,version:"16.8.4",rendererPackageName:"react-dom"});var ql={default:Hl},Ql=ql&&Hl||ql;e.exports=Ql.default||Ql},function(e,t,n){"use strict";e.exports=n(37)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.4
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,a=-1,l=!1,u=!1;function c(){if(!l){var e=n.expirationTime;u?T():u=!0,k(d,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,l=a;o=e,a=t;try{var u=r()}finally{o=i,a=l}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,c()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function f(){if(-1===i&&null!==n&&1===n.priorityLevel){l=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?c():u=!1}}}function d(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.expirationTime<=i))break;do{s()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{s()}while(null!==n&&!S())}finally{l=!1,r=o,null!==n?c():u=!1,f()}}var p,m,h=Date,v="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,b="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){p=g(function(t){y(m),e(t)}),m=v(function(){b(p),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return h.now()};var k,T,S,C=null;if("undefined"!=typeof window?C=window:void 0!==e&&(C=e),C&&C._schedMock){var E=C._schedMock;k=E[0],T=E[1],S=E[2],t.unstable_now=E[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var P=null,_=function(e){if(null!==P)try{P(e)}finally{P=null}};k=function(e){null!==P?setTimeout(k,0,e):(P=e,setTimeout(_,0,!1))},T=function(){P=null},S=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var O=null,N=!1,R=-1,M=!1,j=!1,U=0,A=33,I=33;S=function(){return U<=t.unstable_now()};var L=new MessageChannel,D=L.port2;L.port1.onmessage=function(){N=!1;var e=O,n=R;O=null,R=-1;var r=t.unstable_now(),o=!1;if(0>=U-r){if(!(-1!==n&&n<=r))return M||(M=!0,w(F)),O=e,void(R=n);o=!0}if(null!==e){j=!0;try{e(o)}finally{j=!1}}};var F=function(e){if(null!==O){w(F);var t=e-U+I;t<I&&A<I?(8>t&&(t=8),I=t<A?A:t):A=t,U=e+I,N||(N=!0,D.postMessage(void 0))}else M=!1};k=function(e,t){O=e,R=t,j||0>t?D.postMessage(void 0):M||(M=!0,w(F))},T=function(){O=null,N=!1,R=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,a=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=a,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,a=i;o=n,i=t.unstable_now();try{return e()}finally{o=r,i=a,f()}},t.unstable_scheduleCallback=function(e,r){var a=-1!==i?i:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=a+r.timeout;else switch(o){case 1:r=a+-1;break;case 2:r=a+250;break;case 5:r=a+1073741823;break;case 4:r=a+1e4;break;default:r=a+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{a=null;var l=n;do{if(l.expirationTime>r){a=l;break}l=l.next}while(l!==n);null===a?a=n:a===n&&(n=e,c()),(r=a.previous).next=a.previous=e,e.next=a,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,a=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=a,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<a||S())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(14))},function(e,t,n){"use strict";var r=n(39);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";e.exports=n(41)},function(e,t,n){"use strict";
/** @license React v16.8.4
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116;function y(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case a:case u:case l:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case c:return e;default:return t}}case v:case h:case i:return t}}}function g(e){return y(e)===d}t.typeOf=y,t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=v,t.Memo=h,t.Portal=i,t.Profiler=u,t.StrictMode=l,t.Suspense=m,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===u||e===l||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===h||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p)},t.isAsyncMode=function(e){return g(e)||y(e)===f},t.isConcurrentMode=g,t.isContextConsumer=function(e){return y(e)===s},t.isContextProvider=function(e){return y(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return y(e)===p},t.isFragment=function(e){return y(e)===a},t.isLazy=function(e){return y(e)===v},t.isMemo=function(e){return y(e)===h},t.isPortal=function(e){return y(e)===i},t.isProfiler=function(e){return y(e)===u},t.isStrictMode=function(e){return y(e)===l},t.isSuspense=function(e){return y(e)===m}},function(e,t,n){"use strict";
/** @license React v16.8.5
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116;function y(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case a:case u:case l:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case c:return e;default:return t}}case v:case h:case i:return t}}}function g(e){return y(e)===d}t.typeOf=y,t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=v,t.Memo=h,t.Portal=i,t.Profiler=u,t.StrictMode=l,t.Suspense=m,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===u||e===l||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===h||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p)},t.isAsyncMode=function(e){return g(e)||y(e)===f},t.isConcurrentMode=g,t.isContextConsumer=function(e){return y(e)===s},t.isContextProvider=function(e){return y(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return y(e)===p},t.isFragment=function(e){return y(e)===a},t.isLazy=function(e){return y(e)===v},t.isMemo=function(e){return y(e)===h},t.isPortal=function(e){return y(e)===i},t.isProfiler=function(e){return y(e)===u},t.isStrictMode=function(e){return y(e)===l},t.isSuspense=function(e){return y(e)===m}},,,function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";t.__esModule=!0;var r=n(0),o=(a(r),a(n(1))),i=a(n(47));a(n(48));function a(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var s=1073741823;t.default=function(e,t){var n,a,f="__create-react-context-"+(0,i.default)()+"__",d=function(e){function n(){var t,r,o,i;l(this,n);for(var a=arguments.length,c=Array(a),s=0;s<a;s++)c[s]=arguments[s];return t=r=u(this,e.call.apply(e,[this].concat(c))),r.emitter=(o=r.props.value,i=[],{on:function(e){i.push(e)},off:function(e){i=i.filter(function(t){return t!==e})},get:function(){return o},set:function(e,t){o=e,i.forEach(function(e){return e(o,t)})}}),u(r,t)}return c(n,e),n.prototype.getChildContext=function(){var e;return(e={})[f]=this.emitter,e},n.prototype.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n=this.props.value,r=e.value,o=void 0;((i=n)===(a=r)?0!==i||1/i==1/a:i!=i&&a!=a)?o=0:(o="function"==typeof t?t(n,r):s,0!=(o|=0)&&this.emitter.set(e.value,o))}var i,a},n.prototype.render=function(){return this.props.children},n}(r.Component);d.childContextTypes=((n={})[f]=o.default.object.isRequired,n);var p=function(t){function n(){var e,r;l(this,n);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return e=r=u(this,t.call.apply(t,[this].concat(i))),r.state={value:r.getValue()},r.onUpdate=function(e,t){0!=((0|r.observedBits)&t)&&r.setState({value:r.getValue()})},u(r,e)}return c(n,t),n.prototype.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?s:t},n.prototype.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?s:e},n.prototype.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},n.prototype.getValue=function(){return this.context[f]?this.context[f].get():e},n.prototype.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return p.contextTypes=((a={})[f]=o.default.object,a),{Provider:d,Consumer:p}},e.exports=t.default},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(14))},function(e,t,n){"use strict";var r=n(49);e.exports=r},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";e.exports=n(52)},function(e,t,n){"use strict";
/** @license React v16.8.5
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116;function y(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case a:case u:case l:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case c:return e;default:return t}}case v:case h:case i:return t}}}function g(e){return y(e)===d}t.typeOf=y,t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=v,t.Memo=h,t.Portal=i,t.Profiler=u,t.StrictMode=l,t.Suspense=m,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===u||e===l||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===h||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p)},t.isAsyncMode=function(e){return g(e)||y(e)===f},t.isConcurrentMode=g,t.isContextConsumer=function(e){return y(e)===s},t.isContextProvider=function(e){return y(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return y(e)===p},t.isFragment=function(e){return y(e)===a},t.isLazy=function(e){return y(e)===v},t.isMemo=function(e){return y(e)===h},t.isPortal=function(e){return y(e)===i},t.isProfiler=function(e){return y(e)===u},t.isStrictMode=function(e){return y(e)===l},t.isSuspense=function(e){return y(e)===m}},,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=(r=n(0))&&"object"==typeof r&&"default"in r?r.default:r;t.AppContainer=function(e){return o.Children.only(e.children)},t.hot=function(){return function(e){return e}},t.areComponentsEqual=function(e,t){return e===t},t.setConfig=function(){},t.cold=function(e){return e},t.configureComponent=function(){}}]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXNtL3JlYWN0LXJvdXRlci1kb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvdGlueS1pbnZhcmlhbnQuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZXNvbHZlLXBhdGhuYW1lL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy92YWx1ZS1lcXVhbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgvZXMvcmVkdXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL0NvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2NvbXBvbmVudHMvUHJvdmlkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL3NoYWxsb3dFcXVhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC93cmFwTWFwVG9Qcm9wcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9tYXBEaXNwYXRjaFRvUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWFwU3RhdGVUb1Byb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21lcmdlUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3Qvc2VsZWN0b3JGYWN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L2Nvbm5lY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2luZGV4LmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N5bWJvbC1vYnNlcnZhYmxlL2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9oYXJtb255LW1vZHVsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N5bWJvbC1vYnNlcnZhYmxlL2VzL3BvbnlmaWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jcmVhdGUtcmVhY3QtY29udGV4dC9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWhvdC1sb2FkZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jcmVhdGUtcmVhY3QtY29udGV4dC9saWIvaW1wbGVtZW50YXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2d1ZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaG90LWxvYWRlci9kaXN0L3JlYWN0LWhvdC1sb2FkZXIucHJvZHVjdGlvbi5taW4uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJfZXh0ZW5kcyIsIk9iamVjdCIsImFzc2lnbiIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsInRoaXMiLCJkIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsIkJyb3dzZXJSb3V0ZXIiLCJMaW5rIiwiX2JhYmVsX3J1bnRpbWVfaGVscGVyc19lc21faW5oZXJpdHNMb29zZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsInJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdCIsIm4iLCJyZWFjdF9yb3V0ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsImhpc3RvcnlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl9iYWJlbF9ydW50aW1lX2hlbHBlcnNfZXNtX2V4dGVuZHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyIsIl9iYWJlbF9ydW50aW1lX2hlbHBlcnNfZXNtX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyIsInRpbnlfaW52YXJpYW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18iLCJfUmVhY3QkQ29tcG9uZW50IiwiX3RoaXMiLCJfbGVuIiwiYXJncyIsIkFycmF5IiwiX2tleSIsImNvbmNhdCIsImhpc3RvcnkiLCJwcm9wcyIsInJlbmRlciIsImEiLCJjcmVhdGVFbGVtZW50IiwiY2hpbGRyZW4iLCJDb21wb25lbnQiLCJfcHJvdG8iLCJoYW5kbGVDbGljayIsImV2ZW50Iiwib25DbGljayIsImRlZmF1bHRQcmV2ZW50ZWQiLCJidXR0b24iLCJtZXRhS2V5IiwiYWx0S2V5IiwiY3RybEtleSIsInNoaWZ0S2V5IiwiaXNNb2RpZmllZEV2ZW50IiwicHJldmVudERlZmF1bHQiLCJyZXBsYWNlIiwicHVzaCIsInRvIiwiX3RoaXMkcHJvcHMiLCJpbm5lclJlZiIsInJlc3QiLCJDb25zdW1lciIsImNvbnRleHQiLCJsb2NhdGlvbiIsImhyZWYiLCJjcmVhdGVIcmVmIiwicmVmIiwiaXNQcm9kdWN0aW9uIiwicHJlZml4IiwiY29uZGl0aW9uIiwibWVzc2FnZSIsIkVycm9yIiwiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsIl9fcHJvdG9fXyIsImlzQWJzb2x1dGUiLCJwYXRobmFtZSIsImNoYXJBdCIsInNwbGljZU9uZSIsImxpc3QiLCJpbmRleCIsImsiLCJwb3AiLCJyZXNvbHZlX3BhdGhuYW1lIiwiZnJvbSIsInVuZGVmaW5lZCIsInRvUGFydHMiLCJzcGxpdCIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwiaGFzVHJhaWxpbmdTbGFzaCIsImxhc3QiLCJ1cCIsInBhcnQiLCJ1bnNoaWZ0IiwicmVzdWx0Iiwiam9pbiIsInN1YnN0ciIsIl90eXBlb2YiLCJTeW1ib2wiLCJpdGVyYXRvciIsIm9iaiIsInZhbHVlX2VxdWFsIiwidmFsdWVFcXVhbCIsImIiLCJpc0FycmF5IiwiZXZlcnkiLCJpdGVtIiwiYVR5cGUiLCJhVmFsdWUiLCJ2YWx1ZU9mIiwiYlZhbHVlIiwiYUtleXMiLCJrZXlzIiwiYktleXMiLCJhZGRMZWFkaW5nU2xhc2giLCJwYXRoIiwic3RyaXBMZWFkaW5nU2xhc2giLCJzdHJpcEJhc2VuYW1lIiwiUmVnRXhwIiwidGVzdCIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwic2xpY2UiLCJjcmVhdGVQYXRoIiwic2VhcmNoIiwiaGFzaCIsImNyZWF0ZUxvY2F0aW9uIiwic3RhdGUiLCJjdXJyZW50TG9jYXRpb24iLCJoYXNoSW5kZXgiLCJpbmRleE9mIiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJlc21fZXh0ZW5kcyIsImRlY29kZVVSSSIsImUiLCJVUklFcnJvciIsImxvY2F0aW9uc0FyZUVxdWFsIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJsaXN0ZW5lcnMiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImFjdGlvbiIsImdldFVzZXJDb25maXJtYXRpb24iLCJjYWxsYmFjayIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwiZmlsdGVyIiwibm90aWZ5TGlzdGVuZXJzIiwiZm9yRWFjaCIsImNyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiY3JlYXRlSGFzaEhpc3RvcnkiLCJjcmVhdGVNZW1vcnlIaXN0b3J5IiwiY2FuVXNlRE9NIiwid2luZG93IiwiZG9jdW1lbnQiLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiUG9wU3RhdGVFdmVudCIsIkhhc2hDaGFuZ2VFdmVudCIsImdldEhpc3RvcnlTdGF0ZSIsInRpbnlfaW52YXJpYW50X2VzbSIsInVhIiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwidHJhbnNpdGlvbk1hbmFnZXIiLCJzZXRTdGF0ZSIsIm5leHRTdGF0ZSIsImhhbmRsZVBvcFN0YXRlIiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJvayIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJyZXZlcnRQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzQmxvY2tlZCIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwiYmxvY2siLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJIYXNoQ2hhbmdlRXZlbnQkMSIsIkhhc2hQYXRoQ29kZXJzIiwiaGFzaGJhbmciLCJlbmNvZGVQYXRoIiwiZGVjb2RlUGF0aCIsIm5vc2xhc2giLCJzbGFzaCIsImdldEhhc2hQYXRoIiwic3Vic3RyaW5nIiwicmVwbGFjZUhhc2hQYXRoIiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJfSGFzaFBhdGhDb2RlcnMkaGFzaFQiLCJpZ25vcmVQYXRoIiwiZW5jb2RlZFBhdGgiLCJwcmV2TG9jYXRpb24iLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwicHVzaEhhc2hQYXRoIiwibmV4dFBhdGhzIiwiY2xhbXAiLCJsb3dlckJvdW5kIiwidXBwZXJCb3VuZCIsIm1pbiIsIm1heCIsIl9wcm9wcyRpbml0aWFsRW50cmllcyIsImluaXRpYWxFbnRyaWVzIiwiX3Byb3BzJGluaXRpYWxJbmRleCIsImluaXRpYWxJbmRleCIsImVudHJpZXMiLCJtYXAiLCJlbnRyeSIsIm5leHRJbmRleCIsIm5leHRFbnRyaWVzIiwic3BsaWNlIiwiY2FuR28iLCJSb3V0ZSIsIlJvdXRlciIsImNyZWF0ZV9yZWFjdF9jb250ZXh0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJjcmVhdGVfcmVhY3RfY29udGV4dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQiLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9pbmhlcml0c0xvb3NlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJyZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX19kZWZhdWx0IiwiaGlzdG9yeV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwidGlueV9pbnZhcmlhbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyIsInBhdGhfdG9fcmVnZXhwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18iLCJwYXRoX3RvX3JlZ2V4cF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fX2RlZmF1bHQiLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9leHRlbmRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18iLCJfYmFiZWxfcnVudGltZV9oZWxwZXJzX2VzbV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X18iLCJuYW1lIiwiUHJvdmlkZXIiLCJkaXNwbGF5TmFtZSIsImNyZWF0ZU5hbWVkQ29udGV4dCIsIl9pc01vdW50ZWQiLCJfcGVuZGluZ0xvY2F0aW9uIiwic3RhdGljQ29udGV4dCIsImNvbXB1dGVSb290TWF0Y2giLCJ1cmwiLCJwYXJhbXMiLCJpc0V4YWN0IiwiY29tcG9uZW50RGlkTW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsInZhbHVlIiwibWF0Y2giLCJjYWNoZSQxIiwiY2FjaGVMaW1pdCQxIiwiY2FjaGVDb3VudCQxIiwibWF0Y2hQYXRoIiwib3B0aW9ucyIsIl9vcHRpb25zIiwiX29wdGlvbnMkZXhhY3QiLCJleGFjdCIsIl9vcHRpb25zJHN0cmljdCIsInN0cmljdCIsIl9vcHRpb25zJHNlbnNpdGl2ZSIsInNlbnNpdGl2ZSIsInJlZHVjZSIsIm1hdGNoZWQiLCJfY29tcGlsZVBhdGgiLCJjYWNoZUtleSIsImVuZCIsInBhdGhDYWNoZSIsInJlZ2V4cCIsImNvbXBpbGVQYXRoJDEiLCJleGVjIiwidmFsdWVzIiwibWVtbyIsImNvbnRleHQkJDEiLCJjb21wdXRlZE1hdGNoIiwiY29tcG9uZW50IiwiQ2hpbGRyZW4iLCJjb3VudCIsImlzRW1wdHlDaGlsZHJlbiIsImJhc2UiLCJjcmVhdGVVUkwiLCJzdGF0aWNIYW5kbGVyIiwibWV0aG9kTmFtZSIsIm5vb3AiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsImZvcm1hdCIsImMiLCJmIiwiZXJyb3IiLCJhcmdJbmRleCIsImZyYW1lc1RvUG9wIiwiUmVhY3RJcyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlIiwiY29udGV4dFR5cGVzIiwiZGVmYXVsdFByb3BzIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsIk1FTU9fU1RBVElDUyIsIiQkdHlwZW9mIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiZGVzY3JpcHRvciIsImNyZWF0ZVN0b3JlIiwiYmluZEFjdGlvbkNyZWF0b3JzIiwic3ltYm9sX29ic2VydmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsInJhbmRvbVN0cmluZyIsIkFjdGlvblR5cGVzIiwiSU5JVCIsIlJFUExBQ0UiLCJQUk9CRV9VTktOT1dOX0FDVElPTiIsImlzUGxhaW5PYmplY3QiLCJwcm90byIsInJlZHVjZXIiLCJwcmVsb2FkZWRTdGF0ZSIsImVuaGFuY2VyIiwiX3JlZjIiLCJjdXJyZW50UmVkdWNlciIsImN1cnJlbnRTdGF0ZSIsImN1cnJlbnRMaXN0ZW5lcnMiLCJuZXh0TGlzdGVuZXJzIiwiaXNEaXNwYXRjaGluZyIsImVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMiLCJnZXRTdGF0ZSIsInN1YnNjcmliZSIsImlzU3Vic2NyaWJlZCIsImRpc3BhdGNoIiwicmVwbGFjZVJlZHVjZXIiLCJuZXh0UmVkdWNlciIsIm91dGVyU3Vic2NyaWJlIiwib2JzZXJ2ZXIiLCJUeXBlRXJyb3IiLCJvYnNlcnZlU3RhdGUiLCJuZXh0IiwidW5zdWJzY3JpYmUiLCJiaW5kQWN0aW9uQ3JlYXRvciIsImFjdGlvbkNyZWF0b3IiLCJhY3Rpb25DcmVhdG9ycyIsImJvdW5kQWN0aW9uQ3JlYXRvcnMiLCJSZWFjdFJlZHV4Q29udGV4dCIsInJlYWN0X2RlZmF1bHQiLCJjcmVhdGVDb250ZXh0IiwiUHJvdmlkZXJfUHJvdmlkZXIiLCJfQ29tcG9uZW50Iiwic3RvcmUiLCJzdG9yZVN0YXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicHJldlByb3BzIiwiX3RoaXMyIiwibmV3U3RvcmVTdGF0ZSIsInByb3ZpZGVyU3RhdGUiLCJwb3N0TW91bnRTdG9yZVN0YXRlIiwiQ29udGV4dCIsInJlYWN0IiwicHJvcF90eXBlc19kZWZhdWx0Iiwic2hhcGUiLCJmdW5jIiwiaXNSZXF1aXJlZCIsIm9iamVjdCIsImFueSIsImNvbXBvbmVudHNfUHJvdmlkZXIiLCJjb25uZWN0QWR2YW5jZWQiLCJzZWxlY3RvckZhY3RvcnkiLCJfcmVmMiRnZXREaXNwbGF5TmFtZSIsImdldERpc3BsYXlOYW1lIiwiX3JlZjIkbWV0aG9kTmFtZSIsIl9yZWYyJHJlbmRlckNvdW50UHJvcCIsInJlbmRlckNvdW50UHJvcCIsIl9yZWYyJHNob3VsZEhhbmRsZVN0YSIsInNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyIsIl9yZWYyJHN0b3JlS2V5Iiwic3RvcmVLZXkiLCJfcmVmMiR3aXRoUmVmIiwid2l0aFJlZiIsIl9yZWYyJGZvcndhcmRSZWYiLCJmb3J3YXJkUmVmIiwiX3JlZjIkY29udGV4dCIsImNvbm5lY3RPcHRpb25zIiwiYnJvd3Nlcl9kZWZhdWx0IiwiY3VzdG9tU3RvcmVXYXJuaW5nTWVzc2FnZSIsIldyYXBwZWRDb21wb25lbnQiLCJ3cmFwcGVkQ29tcG9uZW50TmFtZSIsInNlbGVjdG9yRmFjdG9yeU9wdGlvbnMiLCJwdXJlIiwiT3V0ZXJCYXNlQ29tcG9uZW50IiwiQ29ubmVjdCIsIl9PdXRlckJhc2VDb21wb25lbnQiLCJsYXN0UHJvcHMiLCJsYXN0U3RhdGUiLCJsYXN0RGVyaXZlZFByb3BzIiwibGFzdFN0b3JlIiwibGFzdFNlbGVjdG9yRmFjdG9yeU9wdGlvbnMiLCJzb3VyY2VTZWxlY3RvciIsImxhc3RDaGlsZFByb3BzIiwibGFzdEZvcndhcmRSZWYiLCJsYXN0Q2hpbGRFbGVtZW50IiwibGFzdENvbXBvbmVudCIsIndyYXBwZXJQcm9wcyIsInNlbGVjdERlcml2ZWRQcm9wcyIsIm5leHRQcm9wcyIsInNlbGVjdENoaWxkRWxlbWVudCIsImNoaWxkUHJvcHMiLCJpbmRpcmVjdFJlbmRlcldyYXBwZWRDb21wb25lbnQiLCJiaW5kIiwic2VsZiIsIlJlZmVyZW5jZUVycm9yIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInJlbmRlcldyYXBwZWRDb21wb25lbnQiLCJmb3J3YXJkZWRSZWYiLCJkZXJpdmVkUHJvcHMiLCJDb250ZXh0VG9Vc2UiLCJyZWFjdF9pcyIsImZvcndhcmRlZCIsImhvaXN0X25vbl9yZWFjdF9zdGF0aWNzX2Nqc19kZWZhdWx0IiwiaGFzT3duIiwiaXMiLCJ4IiwieSIsInNoYWxsb3dFcXVhbCIsIm9iakEiLCJvYmpCIiwia2V5c0EiLCJrZXlzQiIsIndyYXBNYXBUb1Byb3BzQ29uc3RhbnQiLCJnZXRDb25zdGFudCIsImNvbnN0YW50IiwiY29uc3RhbnRTZWxlY3RvciIsImRlcGVuZHNPbk93blByb3BzIiwiZ2V0RGVwZW5kc09uT3duUHJvcHMiLCJtYXBUb1Byb3BzIiwiQm9vbGVhbiIsIndyYXBNYXBUb1Byb3BzRnVuYyIsInByb3h5Iiwic3RhdGVPckRpc3BhdGNoIiwib3duUHJvcHMiLCJjb25uZWN0X21hcERpc3BhdGNoVG9Qcm9wcyIsIm1hcERpc3BhdGNoVG9Qcm9wcyIsInJlZHV4IiwiY29ubmVjdF9tYXBTdGF0ZVRvUHJvcHMiLCJtYXBTdGF0ZVRvUHJvcHMiLCJkZWZhdWx0TWVyZ2VQcm9wcyIsInN0YXRlUHJvcHMiLCJkaXNwYXRjaFByb3BzIiwiY29ubmVjdF9tZXJnZVByb3BzIiwibWVyZ2VQcm9wcyIsIm1lcmdlZFByb3BzIiwiYXJlTWVyZ2VkUHJvcHNFcXVhbCIsImhhc1J1bk9uY2UiLCJuZXh0TWVyZ2VkUHJvcHMiLCJ3cmFwTWVyZ2VQcm9wc0Z1bmMiLCJpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwicHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkiLCJhcmVTdGF0ZXNFcXVhbCIsImFyZU93blByb3BzRXF1YWwiLCJhcmVTdGF0ZVByb3BzRXF1YWwiLCJoYXNSdW5BdExlYXN0T25jZSIsImhhbmRsZVN1YnNlcXVlbnRDYWxscyIsIm5leHRPd25Qcm9wcyIsIm5leHRTdGF0ZVByb3BzIiwic3RhdGVQcm9wc0NoYW5nZWQiLCJwcm9wc0NoYW5nZWQiLCJzdGF0ZUNoYW5nZWQiLCJmaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwiaW5pdE1hcFN0YXRlVG9Qcm9wcyIsImluaXRNYXBEaXNwYXRjaFRvUHJvcHMiLCJpbml0TWVyZ2VQcm9wcyIsImFyZyIsImZhY3RvcmllcyIsInN0cmljdEVxdWFsIiwiX3RlbXAiLCJfcmVmJGNvbm5lY3RIT0MiLCJjb25uZWN0SE9DIiwiX3JlZiRtYXBTdGF0ZVRvUHJvcHNGIiwibWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzIiwiX3JlZiRtYXBEaXNwYXRjaFRvUHJvIiwibWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIiwiX3JlZiRtZXJnZVByb3BzRmFjdG9yIiwibWVyZ2VQcm9wc0ZhY3RvcmllcyIsIl9yZWYkc2VsZWN0b3JGYWN0b3J5IiwiY29ubmVjdF9jb25uZWN0IiwiX3JlZjMiLCJfcmVmMyRwdXJlIiwiX3JlZjMkYXJlU3RhdGVzRXF1YWwiLCJfcmVmMyRhcmVPd25Qcm9wc0VxdWEiLCJfcmVmMyRhcmVTdGF0ZVByb3BzRXEiLCJfcmVmMyRhcmVNZXJnZWRQcm9wc0UiLCJleHRyYU9wdGlvbnMiLCJnIiwiRnVuY3Rpb24iLCJnbG9iYWwiLCJyb290IiwiX3BvbnlmaWxsX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwicGFyc2UiLCJjb21waWxlIiwic3RyIiwidG9rZW5zVG9GdW5jdGlvbiIsInRva2Vuc1RvUmVnRXhwIiwiUEFUSF9SRUdFWFAiLCJyZXMiLCJ0b2tlbnMiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZGVsaW1pdGVyIiwibSIsImVzY2FwZWQiLCJvZmZzZXQiLCJjYXB0dXJlIiwiZ3JvdXAiLCJtb2RpZmllciIsImFzdGVyaXNrIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwicGF0dGVybiIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwiY2hhckNvZGVBdCIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsIm9wdHMiLCJkYXRhIiwiZW5jb2RlIiwicHJldHR5IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwidG9rZW4iLCJzZWdtZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImoiLCJhdHRhY2hLZXlzIiwicmUiLCJmbGFncyIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInN0cmluZ1RvUmVnZXhwIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidGVzdDEiLCJTdHJpbmciLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwic3ltYm9scyIsInZhbCIsInRvT2JqZWN0IiwicyIsIm9yaWdpbmFsTW9kdWxlIiwid2VicGFja1BvbHlmaWxsIiwiZW51bWVyYWJsZSIsImdldCIsImwiLCJ1c2VTb3VyY2VNYXAiLCJjb250ZW50IiwiY3NzTWFwcGluZyIsImJ0b2EiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlTWFwIiwidW5lc2NhcGUiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibW9kdWxlcyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiaWQiLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInBhcmVudCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwiZG9tU3R5bGUiLCJyZWZzIiwiYWRkU3R5bGUiLCJsaXN0VG9TdHlsZXMiLCJuZXdTdHlsZXMiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiaW5zZXJ0SW50byIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwiaW5zZXJ0QXQiLCJuZXh0U2libGluZyIsImluc2VydEJlZm9yZSIsImFwcGVuZENoaWxkIiwiZmlyc3RDaGlsZCIsImJlZm9yZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImlkeCIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImF0dHJzIiwibm9uY2UiLCJuYyIsImdldE5vbmNlIiwiYWRkQXR0cnMiLCJlbCIsInNldEF0dHJpYnV0ZSIsInVwZGF0ZSIsInJlbW92ZSIsInRyYW5zZm9ybSIsImRlZmF1bHQiLCJzdHlsZUluZGV4IiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInJldm9rZU9iamVjdFVSTCIsIkJsb2IiLCJsaW5rIiwicmVsIiwiY3JlYXRlTGlua0VsZW1lbnQiLCJhdXRvRml4VXJscyIsImNvbnZlcnRUb0Fic29sdXRlVXJscyIsImJsb2IiLCJvbGRTcmMiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNyZWF0ZVRleHROb2RlIiwibmV3T2JqIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJjb25zb2xlIiwic3ltYm9sT2JzZXJ2YWJsZVBvbnlmaWxsIiwib2JzZXJ2YWJsZSIsIl9fZXNNb2R1bGUiLCJfcmVhY3QyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9pbXBsZW1lbnRhdGlvbjIiLCJmb3IiLCJwIiwicSIsInIiLCJ0IiwidSIsInYiLCJ3IiwieiIsImFhIiwiYmEiLCJBIiwiQiIsImgiLCJjYSIsIkMiLCJpc01vdW50ZWQiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZVNldFN0YXRlIiwiRCIsIkUiLCJ1cGRhdGVyIiwiRiIsIkciLCJpc1JlYWN0Q29tcG9uZW50IiwiZm9yY2VVcGRhdGUiLCJIIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJJIiwiY3VycmVudCIsIkoiLCJLIiwiTCIsIl9fc2VsZiIsIl9fc291cmNlIiwiTSIsIl9vd25lciIsIk4iLCJPIiwiUCIsIlEiLCJrZXlQcmVmaXgiLCJSIiwiVSIsIlMiLCJUIiwiZG9uZSIsIj0iLCI6IiwiZXNjYXBlIiwiZWEiLCJmYSIsIlYiLCJkYSIsIlciLCJYIiwidG9BcnJheSIsIm9ubHkiLCJjcmVhdGVSZWYiLCJQdXJlQ29tcG9uZW50IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiX2NvbnRleHQiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlRmFjdG9yeSIsImlzVmFsaWRFbGVtZW50IiwidmVyc2lvbiIsInVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlIiwidW5zdGFibGVfUHJvZmlsZXIiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJSZWFjdEN1cnJlbnRPd25lciIsIlkiLCJaIiwiaGEiLCJpYSIsIm9uRXJyb3IiLCJqYSIsImxhIiwibWEiLCJuYSIsIm9hIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJwYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwicWEiLCJyZWdpc3RyYXRpb25OYW1lIiwicmEiLCJzYSIsImRlcGVuZGVuY2llcyIsInRhIiwidmEiLCJ3YSIsImN1cnJlbnRUYXJnZXQiLCJrYSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiQmEiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwiQ2EiLCJzdGF0ZU5vZGUiLCJkaXNhYmxlZCIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJ0YWciLCJJYSIsIkphIiwiS2EiLCJMYSIsInJldHVybiIsIk1hIiwiZGlzcGF0Y2hDb25maWciLCJOYSIsIl90YXJnZXRJbnN0IiwiT2EiLCJQYSIsIlFhIiwiUmEiLCJTYSIsInRvTG93ZXJDYXNlIiwiVGEiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJVYSIsIlZhIiwiV2EiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWGEiLCJZYSIsIlphIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJkYiIsImViIiwidGV4dENvbnRlbnQiLCJmYiIsImdiIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImliIiwiZXZlbnRQb29sIiwiamIiLCJkZXN0cnVjdG9yIiwiaGIiLCJnZXRQb29sZWQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJkb2N1bWVudE1vZGUiLCJwYiIsInFiIiwicmIiLCJzYiIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJ0YiIsInViIiwia2V5Q29kZSIsInZiIiwiZGV0YWlsIiwid2IiLCJ6YiIsImxvY2FsZSIsIndoaWNoIiwieGIiLCJjaGFyIiwieWIiLCJBYiIsIkJiIiwiQ2IiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInBhc3N3b3JkIiwicmFuZ2UiLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsIndlZWsiLCJNYiIsIm5vZGVOYW1lIiwiTmIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJub2RlVHlwZSIsIk9iIiwiUGIiLCJSYiIsIl92YWx1ZVRyYWNrZXIiLCJzZXQiLCJjb25maWd1cmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiUWIiLCJTYiIsImNoZWNrZWQiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImtjIiwibGMiLCJtYyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJyYyIsInNjIiwidGMiLCJwYyIsImlzTmFOIiwicWMiLCJvYyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwidWMiLCJ2YyIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwid2MiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwieGMiLCJ5YyIsInpjIiwiQWMiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIkJjIiwiY2hhbmdlIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsImRldGFjaEV2ZW50IiwiS2MiLCJMYyIsImF0dGFjaEV2ZW50IiwiTWMiLCJOYyIsIk9jIiwiUGMiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiUWMiLCJ2aWV3IiwiUmMiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiU2MiLCJnZXRNb2RpZmllclN0YXRlIiwiVGMiLCJVYyIsIlZjIiwiV2MiLCJYYyIsIlljIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiWmMiLCJwb2ludGVySWQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCIkYyIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiYWQiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsImFsdGVybmF0ZSIsImJkIiwiY2QiLCJkZCIsImVkIiwiZWZmZWN0VGFnIiwiZmQiLCJoZCIsImNoaWxkIiwic2libGluZyIsImdkIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsImpkIiwiY2xpcGJvYXJkRGF0YSIsImtkIiwibGQiLCJjaGFyQ29kZSIsIm1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIm5kIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIm9kIiwicGQiLCJkYXRhVHJhbnNmZXIiLCJxZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJyZCIsInNkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ0ZCIsInVkIiwidmQiLCJ3ZCIsImlzSW50ZXJhY3RpdmUiLCJ4ZCIsImlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSIsInlkIiwiemQiLCJBZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwiQmQiLCJDZCIsIkRkIiwiRWQiLCJGZCIsIkdkIiwiSGQiLCJJZCIsIkpkIiwiYm9keSIsIktkIiwiTGQiLCJub2RlIiwiTmQiLCJPZCIsImNvbnRlbnRFZGl0YWJsZSIsIlFkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIk1kIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImRvY3VtZW50RWxlbWVudCIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJnZXRTZWxlY3Rpb24iLCJyYW5nZUNvdW50IiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwiZWxlbWVudCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiZm9jdXMiLCJSZCIsIlNkIiwic2VsZWN0IiwiVGQiLCJVZCIsIlZkIiwiV2QiLCJYZCIsIllkIiwib25TZWxlY3QiLCIkZCIsIlpkIiwiYWUiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImJlIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJjZSIsImRlIiwiZWUiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiZmUiLCJodG1sIiwibWF0aG1sIiwic3ZnIiwiZ2UiLCJoZSIsImllIiwiamUiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwia2UiLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJsZSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwibWUiLCJuZSIsInRyaW0iLCJvZSIsInNldFByb3BlcnR5IiwicGUiLCJtZW51aXRlbSIsImFyZWEiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwicWUiLCJzZSIsImJsdXIiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsImF1dG9Gb2N1cyIsInhlIiwiX19odG1sIiwieWUiLCJzZXRUaW1lb3V0IiwiemUiLCJjbGVhclRpbWVvdXQiLCJBZSIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJCZSIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiRGUiLCJFZSIsIlNldCIsIkZlIiwiR2UiLCJIZSIsIkllIiwiSmUiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJLZSIsIkxlIiwiTWUiLCJOZSIsImdldENoaWxkQ29udGV4dCIsIk9lIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlVlIiwiZWxlbWVudFR5cGUiLCJwZW5kaW5nUHJvcHMiLCJjb250ZXh0RGVwZW5kZW5jaWVzIiwibWVtb2l6ZWRTdGF0ZSIsInVwZGF0ZVF1ZXVlIiwibWVtb2l6ZWRQcm9wcyIsIm1vZGUiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwiVmUiLCJYZSIsIlllIiwiWmUiLCIkZSIsImFmIiwiYmYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImNmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJkZiIsImZmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJnZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwiamYiLCJrZiIsImJhc2VTdGF0ZSIsInRmIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsImxmIiwibmYiLCJtZiIsInBheWxvYWQiLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwidWYiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJ2ZiIsIndmIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwieGYiLCJ5ZiIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsInpmIiwiQWYiLCJfc3RyaW5nUmVmIiwiQmYiLCJDZiIsIk1hcCIsImRlbGV0ZSIsIkRmIiwiRWYiLCJGZiIsIkdmIiwiSGYiLCJJZiIsIkpmIiwidGFnTmFtZSIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsInF1ZXVlIiwiYmFzZVVwZGF0ZSIsIm5nIiwib2ciLCJwZyIsInFnIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsInJnIiwiZGVzdHJveSIsImRlcHMiLCJzZyIsInRnIiwidWciLCJ2ZyIsIndnIiwicmVhZENvbnRleHQiLCJ4ZyIsInlnIiwiemciLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJHZyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJQZyIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsIlFnIiwiUmciLCJwZW5kaW5nQ29udGV4dCIsIlNnIiwidGltZWRPdXRBdCIsImZhbGxiYWNrIiwiVGciLCJVZyIsInRoZW4iLCJoZiIsIldlIiwiaHlkcmF0ZSIsImhpZGRlbiIsImZpcnN0Iiwib2JzZXJ2ZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiVmciLCJXZyIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwiY2giLCJkaCIsImVoIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsInN0YWNrIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsIm9uY2xpY2siLCJwaCIsIldlYWtTZXQiLCJxaCIsInJoIiwic2giLCJ0aCIsInZoIiwid2giLCJ4aCIsInloIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsInpoIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIkNlIiwiZGlzcGxheSIsInVoIiwiaGkiLCJYaCIsImhhcyIsImFkZCIsIkJoIiwiV2Vha01hcCIsIkNoIiwiRGgiLCJFaCIsImNvbXBvbmVudERpZENhdGNoIiwiRmgiLCJjb21wb25lbnRTdGFjayIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJVaCIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVmgiLCJaaCIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsImVmIiwiUGQiLCJZaCIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiZmluaXNoZWRXb3JrIiwiJGgiLCJhaSIsImNyZWF0ZUVsZW1lbnROUyIsImJpIiwiY2kiLCJkaSIsIm1heER1cmF0aW9uIiwicGluZ0NhY2hlIiwiZWkiLCJmaSIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiZ2kiLCJpaSIsImppIiwia2kiLCJsaSIsIm1pIiwibmkiLCJvaSIsInBpIiwicWkiLCJyaSIsInNpIiwidGkiLCJ1bnN0YWJsZV9ub3ciLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJ0aW1lb3V0IiwidGltZW91dEhhbmRsZSIsIkJpIiwiQ2kiLCJuZXh0U2NoZWR1bGVkUm9vdCIsIkRpIiwiRWkiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIl9vbkNvbXBsZXRlIiwiRmkiLCJmaXJzdEJhdGNoIiwiX2V4cGlyYXRpb25UaW1lIiwiX2RlZmVyIiwiR2kiLCJIaSIsIklpIiwiSmkiLCJLaSIsIkxpIiwiTmkiLCJfcm9vdCIsIl9jYWxsYmFja3MiLCJfbmV4dCIsIl9oYXNDaGlsZHJlbiIsIl9kaWRDb21wbGV0ZSIsIl9jaGlsZHJlbiIsIk9pIiwiX2RpZENvbW1pdCIsIl9vbkNvbW1pdCIsIlBpIiwiX2ludGVybmFsUm9vdCIsIlFpIiwiU2kiLCJsZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJoYXNBdHRyaWJ1dGUiLCJSaSIsIlRpIiwiTWkiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsImNvbW1pdCIsInVubW91bnQiLCJjcmVhdGVCYXRjaCIsIlZpIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlcyIsImZsdXNoU3luYyIsInVuc3RhYmxlX2NyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIlRlIiwib3ZlcnJpZGVQcm9wcyIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsIldpIiwiWGkiLCJwcmV2aW91cyIsInByaW9yaXR5TGV2ZWwiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInBlcmZvcm1hbmNlIiwiX3NjaGVkTW9jayIsIk1lc3NhZ2VDaGFubmVsIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJvb2wiLCJzdHJpbmciLCJzeW1ib2wiLCJhcnJheU9mIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsInR5cGVPZiIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkxhenkiLCJNZW1vIiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJob3N0IiwiY3VycmVudERpciIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCJvIiwiJDEiLCJfcmVhY3QiLCJfcHJvcFR5cGVzMiIsIl9ndWQyIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX2luaGVyaXRzIiwid3JpdGFibGUiLCJzZXRQcm90b3R5cGVPZiIsIk1BWF9TSUdORURfMzFfQklUX0lOVCIsImNhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX1Byb3ZpZGVyJGNoaWxkQ29udGV4IiwiX0NvbnN1bWVyJGNvbnRleHRUeXBlIiwiY29udGV4dFByb3AiLCJoYW5kbGVycyIsImVtaXR0ZXIiLCJvbiIsImhhbmRsZXIiLCJvZmYiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwib2xkVmFsdWUiLCJfQ29tcG9uZW50MiIsIl90ZW1wMiIsIl9sZW4yIiwiX2tleTIiLCJvblVwZGF0ZSIsIndhcm5pbmciLCJtYWtlRW1wdHlGdW5jdGlvbiIsInRoYXRSZXR1cm5zIiwidGhhdFJldHVybnNGYWxzZSIsInRoYXRSZXR1cm5zVHJ1ZSIsInRoYXRSZXR1cm5zTnVsbCIsInRoYXRSZXR1cm5zVGhpcyIsInRoYXRSZXR1cm5zQXJndW1lbnQiLCJhcnIiLCJSZWFjdCIsIkFwcENvbnRhaW5lciIsImhvdCIsImFyZUNvbXBvbmVudHNFcXVhbCIsInNldENvbmZpZyIsImNvbGQiLCJjb25maWd1cmVDb21wb25lbnQiXSwibWFwcGluZ3MiOiJzRkFHQUEsRUFBQUMsUUFBbUJDLEVBQVEscUJDYzNCRixFQUFBQyxRQUFtQkMsRUFBUSxHQUFSQSxpQ0NqQkosU0FBQUMsSUFlZixPQWRBQSxFQUFBQyxPQUFBQyxRQUFBLFNBQUFDLEdBQ0EsUUFBQUMsRUFBQSxFQUFtQkEsRUFBQUMsVUFBQUMsT0FBc0JGLElBQUEsQ0FDekMsSUFBQUcsRUFBQUYsVUFBQUQsR0FFQSxRQUFBSSxLQUFBRCxFQUNBTixPQUFBUSxVQUFBQyxlQUFBQyxLQUFBSixFQUFBQyxLQUNBTCxFQUFBSyxHQUFBRCxFQUFBQyxJQUtBLE9BQUFMLElBR0FTLE1BQUFDLEtBQUFSLFdBZkFOLEVBQUFlLEVBQUFDLEVBQUEsc0JBQUFmLGtDQ0FBRCxFQUFBZSxFQUFBQyxFQUFBLHNCQUFBQyxJQUFBakIsRUFBQWUsRUFBQUMsRUFBQSxzQkFBQUUsSUFBQSxJQUFB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QUFvckIsRUFBQXByQixLQUFBbWdCLEdBQWlCMWlCLEVBQUFzd0QsYUFBQSxTQUFBL3RELEdBQWlDLE9BQUFvckIsRUFBQXByQixLQUFBa1MsR0FDbmN6VSxFQUFBdXdELFdBQUEsU0FBQWh1RCxHQUErQixPQUFBb3JCLEVBQUFwckIsS0FBQWlyQixtQ0Nka0VydEIsT0FBQWlXLGVBQUFwVyxFQUFBLGNBQTRDZ1MsT0FBQSxJQUFXLElBQTNJbkosRUFBMkkwcUQsR0FBM0kxcUQsRUFBcUs1SSxFQUFRLEtBQWpKLGlCQUFBNEksR0FBQSxZQUFBQSxJQUFBdWlCLFFBQUF2aUIsRUFBa1o3SSxFQUFBd3pELGFBQXZQLFNBQUEzcUQsR0FBeUIsT0FBQTBxRCxFQUFBMy9DLFNBQUFxZCxLQUFBcG9CLEVBQUFwRyxXQUE4TnpDLEVBQUF5ekQsSUFBdkwsV0FBd0IsZ0JBQUE1cUQsR0FBbUIsT0FBQUEsSUFBNEk3SSxFQUFBMHpELG1CQUFsSSxTQUFBN3FELEVBQUF0SCxHQUFrQyxPQUFBc0gsSUFBQXRILEdBQWdHdkIsRUFBQTJ6RCxVQUFuRixhQUFtRjN6RCxFQUFBNHpELEtBQTVELFNBQUEvcUQsR0FBa0IsT0FBQUEsR0FBMEM3SSxFQUFBNnpELG1CQUFqQyIsImZpbGUiOiJ2ZW5kb3JzLmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIFJvdXRlIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmV4cG9ydCAqIGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyBIVE1MNSBoaXN0b3J5LlxuICovXG5cbnZhciBCcm93c2VyUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEJyb3dzZXJSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEJyb3dzZXJSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUJyb3dzZXJIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gQnJvd3NlclJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEJyb3dzZXJSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyXG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyB3aW5kb3cubG9jYXRpb24uaGFzaC5cbiAqL1xuXG52YXIgSGFzaFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShIYXNoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBIYXNoUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIYXNoSGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEhhc2hSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBIYXNoUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEhhc2hSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBoYXNoVHlwZTogUHJvcFR5cGVzLm9uZU9mKFtcImhhc2hiYW5nXCIsIFwibm9zbGFzaFwiLCBcInNsYXNoXCJdKVxuICB9O1xuXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8SGFzaFJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEhhc2hSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyBhIGhpc3RvcnktYXdhcmUgPGE+LlxuICovXG5cblxudmFyIExpbmsgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTGluaywgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGluaygpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTGluay5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmhhbmRsZUNsaWNrID0gZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQsIGhpc3RvcnkpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vbkNsaWNrKSB0aGlzLnByb3BzLm9uQ2xpY2soZXZlbnQpO1xuXG4gICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICBldmVudC5idXR0b24gPT09IDAgJiYgKCAvLyBpZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAhdGhpcy5wcm9wcy50YXJnZXQgfHwgdGhpcy5wcm9wcy50YXJnZXQgPT09IFwiX3NlbGZcIikgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAhaXNNb2RpZmllZEV2ZW50KGV2ZW50KSAvLyBpZ25vcmUgY2xpY2tzIHdpdGggbW9kaWZpZXIga2V5c1xuICAgICkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgbWV0aG9kID0gdGhpcy5wcm9wcy5yZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QodGhpcy5wcm9wcy50byk7XG4gICAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgaW5uZXJSZWYgPSBfdGhpcyRwcm9wcy5pbm5lclJlZixcbiAgICAgICAgcmVwbGFjZSA9IF90aGlzJHByb3BzLnJlcGxhY2UsXG4gICAgICAgIHRvID0gX3RoaXMkcHJvcHMudG8sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wcywgW1wiaW5uZXJSZWZcIiwgXCJyZXBsYWNlXCIsIFwidG9cIl0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG5cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBjb250ZXh0LmxvY2F0aW9uKSA6IHRvO1xuICAgICAgdmFyIGhyZWYgPSBsb2NhdGlvbiA/IGNvbnRleHQuaGlzdG9yeS5jcmVhdGVIcmVmKGxvY2F0aW9uKSA6IFwiXCI7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcy5oYW5kbGVDbGljayhldmVudCwgY29udGV4dC5oaXN0b3J5KTtcbiAgICAgICAgfSxcbiAgICAgICAgaHJlZjogaHJlZixcbiAgICAgICAgcmVmOiBpbm5lclJlZlxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBMaW5rO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciB0b1R5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSk7XG4gIHZhciBpbm5lclJlZlR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBjdXJyZW50OiBQcm9wVHlwZXMuYW55XG4gIH0pXSk7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiBpbm5lclJlZlR5cGUsXG4gICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gICAgcmVwbGFjZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgdGFyZ2V0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiB0b1R5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG5mdW5jdGlvbiBqb2luQ2xhc3NuYW1lcygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGNsYXNzbmFtZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgY2xhc3NuYW1lc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBjbGFzc25hbWVzLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgIHJldHVybiBpO1xuICB9KS5qb2luKFwiIFwiKTtcbn1cbi8qKlxuICogQSA8TGluaz4gd3JhcHBlciB0aGF0IGtub3dzIGlmIGl0J3MgXCJhY3RpdmVcIiBvciBub3QuXG4gKi9cblxuXG5mdW5jdGlvbiBOYXZMaW5rKF9yZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvbiA9IF9yZWYubG9jYXRpb24sXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCJdKTtcblxuICB2YXIgcGF0aCA9IHR5cGVvZiB0byA9PT0gXCJvYmplY3RcIiA/IHRvLnBhdGhuYW1lIDogdG87IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHtcbiAgICBwYXRoOiBlc2NhcGVkUGF0aCxcbiAgICBleGFjdDogZXhhY3QsXG4gICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgIGNoaWxkcmVuOiBmdW5jdGlvbiBjaGlsZHJlbihfcmVmMikge1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3JlZjIubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2ggPSBfcmVmMi5tYXRjaDtcbiAgICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgbG9jYXRpb24pIDogbWF0Y2gpO1xuICAgICAgdmFyIGNsYXNzTmFtZSA9IGlzQWN0aXZlID8gam9pbkNsYXNzbmFtZXMoY2xhc3NOYW1lUHJvcCwgYWN0aXZlQ2xhc3NOYW1lKSA6IGNsYXNzTmFtZVByb3A7XG4gICAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIGFjdGl2ZVN0eWxlKSA6IHN0eWxlUHJvcDtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIF9leHRlbmRzKHtcbiAgICAgICAgXCJhcmlhLWN1cnJlbnRcIjogaXNBY3RpdmUgJiYgYXJpYUN1cnJlbnQgfHwgbnVsbCxcbiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICAgIHN0eWxlOiBzdHlsZSxcbiAgICAgICAgdG86IHRvXG4gICAgICB9LCByZXN0KSk7XG4gICAgfVxuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICB2YXIgYXJpYUN1cnJlbnRUeXBlID0gUHJvcFR5cGVzLm9uZU9mKFtcInBhZ2VcIiwgXCJzdGVwXCIsIFwibG9jYXRpb25cIiwgXCJkYXRlXCIsIFwidGltZVwiLCBcInRydWVcIl0pO1xuICBOYXZMaW5rLnByb3BUeXBlcyA9IF9leHRlbmRzKHt9LCBMaW5rLnByb3BUeXBlcywge1xuICAgIFwiYXJpYS1jdXJyZW50XCI6IGFyaWFDdXJyZW50VHlwZSxcbiAgICBhY3RpdmVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGV4YWN0OiBSb3V0ZS5wcm9wVHlwZXMuZXhhY3QsXG4gICAgaXNBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHN0cmljdDogUm91dGUucHJvcFR5cGVzLnN0cmljdCxcbiAgICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdFxuICB9KTtcbn1cblxuZXhwb3J0IHsgQnJvd3NlclJvdXRlciwgSGFzaFJvdXRlciwgTGluaywgTmF2TGluayB9O1xuIiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoY29uZGl0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXggKyBcIjogXCIgKyAobWVzc2FnZSB8fCAnJykpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn0iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvKSB7XG4gIHZhciBmcm9tID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnJztcblxuICB2YXIgdG9QYXJ0cyA9IHRvICYmIHRvLnNwbGl0KCcvJykgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSBmcm9tICYmIGZyb20uc3BsaXQoJy8nKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoID0gdm9pZCAwO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIHtcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcbiAgfWlmIChtdXN0RW5kQWJzICYmIGZyb21QYXJ0c1swXSAhPT0gJycgJiYgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSkpIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIHZhbHVlRXF1YWwoYSwgYikge1xuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XG5cbiAgaWYgKGEgPT0gbnVsbCB8fCBiID09IG51bGwpIHJldHVybiBmYWxzZTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShhKSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGIpICYmIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJiBhLmV2ZXJ5KGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIGFUeXBlID0gdHlwZW9mIGEgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGEpO1xuICB2YXIgYlR5cGUgPSB0eXBlb2YgYiA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYik7XG5cbiAgaWYgKGFUeXBlICE9PSBiVHlwZSkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChhVHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgYVZhbHVlID0gYS52YWx1ZU9mKCk7XG4gICAgdmFyIGJWYWx1ZSA9IGIudmFsdWVPZigpO1xuXG4gICAgaWYgKGFWYWx1ZSAhPT0gYSB8fCBiVmFsdWUgIT09IGIpIHJldHVybiB2YWx1ZUVxdWFsKGFWYWx1ZSwgYlZhbHVlKTtcblxuICAgIHZhciBhS2V5cyA9IE9iamVjdC5rZXlzKGEpO1xuICAgIHZhciBiS2V5cyA9IE9iamVjdC5rZXlzKGIpO1xuXG4gICAgaWYgKGFLZXlzLmxlbmd0aCAhPT0gYktleXMubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgICByZXR1cm4gYUtleXMuZXZlcnkoZnVuY3Rpb24gKGtleSkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZUVxdWFsOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKCdeJyArIHByZWZpeCArICcoXFxcXC98XFxcXD98I3wkKScsICdpJykudGVzdChwYXRoKTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG5cbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcblxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRoO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uO1xuXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufVxuZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbmZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuXG5mdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn1cblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB2YXIgaGFzaEluZGV4ID0gd2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZignIycpO1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZSh3aW5kb3cubG9jYXRpb24uaHJlZi5zbGljZSgwLCBoYXNoSW5kZXggPj0gMCA/IGhhc2hJbmRleCA6IDApICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB2b2lkIDAgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfSAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cblxuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpIDogdm9pZCAwO1xuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpIDogdm9pZCAwO1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdm9pZCAwID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gX3Byb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcblxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBwYXJzZVBhdGgsIGNyZWF0ZVBhdGggfTtcbiIsImltcG9ydCBjcmVhdGVDb250ZXh0IGZyb20gJ2NyZWF0ZS1yZWFjdC1jb250ZXh0JztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgY3JlYXRlUGF0aCB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5pbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gJ3BhdGgtdG8tcmVnZXhwJztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5Qcm92aWRlci5kaXNwbGF5TmFtZSA9IG5hbWUgKyBcIi5Qcm92aWRlclwiO1xuICBjb250ZXh0LkNvbnN1bWVyLmRpc3BsYXlOYW1lID0gbmFtZSArIFwiLkNvbnN1bWVyXCI7XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxudmFyIGNvbnRleHQgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlTmFtZWRDb250ZXh0KCdSb3V0ZXInKTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cblxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgX3RoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgaWYgKF90aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBudWxsLFxuICAgICAgdmFsdWU6IHtcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICBsb2NhdGlvbjogdGhpcy5zdGF0ZS5sb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IFJvdXRlci5jb21wdXRlUm9vdE1hdGNoKHRoaXMuc3RhdGUubG9jYXRpb24ucGF0aG5hbWUpLFxuICAgICAgICBzdGF0aWNDb250ZXh0OiB0aGlzLnByb3BzLnN0YXRpY0NvbnRleHRcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBzdGF0aWNDb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcmV2UHJvcHMuaGlzdG9yeSA9PT0gdGhpcy5wcm9wcy5oaXN0b3J5LCBcIllvdSBjYW5ub3QgY2hhbmdlIDxSb3V0ZXIgaGlzdG9yeT5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIGEgPFJvdXRlcj4gdGhhdCBzdG9yZXMgbG9jYXRpb24gaW4gbWVtb3J5LlxuICovXG5cbnZhciBNZW1vcnlSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTWVtb3J5Um91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZW1vcnlSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZU1lbW9yeUhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBNZW1vcnlSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW1vcnlSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgTWVtb3J5Um91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBpbml0aWFsRW50cmllczogUHJvcFR5cGVzLmFycmF5LFxuICAgIGluaXRpYWxJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlXG4gIH07XG5cbiAgTWVtb3J5Um91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPE1lbW9yeVJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IE1lbW9yeVJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG52YXIgTGlmZWN5Y2xlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKExpZmVjeWNsZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGlmZWN5Y2xlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBMaWZlY3ljbGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uTW91bnQpIHRoaXMucHJvcHMub25Nb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25VcGRhdGUpIHRoaXMucHJvcHMub25VcGRhdGUuY2FsbCh0aGlzLCB0aGlzLCBwcmV2UHJvcHMpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVW5tb3VudCkgdGhpcy5wcm9wcy5vblVubW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBMaWZlY3ljbGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHByb21wdGluZyB0aGUgdXNlciBiZWZvcmUgbmF2aWdhdGluZyBhd2F5IGZyb20gYSBzY3JlZW4uXG4gKi9cblxuZnVuY3Rpb24gUHJvbXB0KF9yZWYpIHtcbiAgdmFyIG1lc3NhZ2UgPSBfcmVmLm1lc3NhZ2UsXG4gICAgICBfcmVmJHdoZW4gPSBfcmVmLndoZW4sXG4gICAgICB3aGVuID0gX3JlZiR3aGVuID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR3aGVuO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQkMSkge1xuICAgICFjb250ZXh0JCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UHJvbXB0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIGlmICghd2hlbiB8fCBjb250ZXh0JCQxLnN0YXRpY0NvbnRleHQpIHJldHVybiBudWxsO1xuICAgIHZhciBtZXRob2QgPSBjb250ZXh0JCQxLmhpc3RvcnkuYmxvY2s7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgaWYgKHByZXZQcm9wcy5tZXNzYWdlICE9PSBtZXNzYWdlKSB7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICAgICAgc2VsZi5yZWxlYXNlID0gbWV0aG9kKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb25Vbm1vdW50OiBmdW5jdGlvbiBvblVubW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgIH0sXG4gICAgICBtZXNzYWdlOiBtZXNzYWdlXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciBtZXNzYWdlVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc3RyaW5nXSk7XG4gIFByb21wdC5wcm9wVHlwZXMgPSB7XG4gICAgd2hlbjogUHJvcFR5cGVzLmJvb2wsXG4gICAgbWVzc2FnZTogbWVzc2FnZVR5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdGgpIHtcbiAgaWYgKGNhY2hlW3BhdGhdKSByZXR1cm4gY2FjaGVbcGF0aF07XG4gIHZhciBnZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXRoKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXRoXSA9IGdlbmVyYXRvcjtcbiAgICBjYWNoZUNvdW50Kys7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdG9yO1xufVxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBnZW5lcmF0aW5nIGEgVVJMIHBhdGhuYW1lIGZyb20gYSBwYXRoIGFuZCBwYXJhbWV0ZXJzLlxuICovXG5cblxuZnVuY3Rpb24gZ2VuZXJhdGVQYXRoKHBhdGgsIHBhcmFtcykge1xuICBpZiAocGF0aCA9PT0gdm9pZCAwKSB7XG4gICAgcGF0aCA9IFwiL1wiO1xuICB9XG5cbiAgaWYgKHBhcmFtcyA9PT0gdm9pZCAwKSB7XG4gICAgcGFyYW1zID0ge307XG4gIH1cblxuICByZXR1cm4gcGF0aCA9PT0gXCIvXCIgPyBwYXRoIDogY29tcGlsZVBhdGgocGF0aCkocGFyYW1zLCB7XG4gICAgcHJldHR5OiB0cnVlXG4gIH0pO1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBuYXZpZ2F0aW5nIHByb2dyYW1tYXRpY2FsbHkgd2l0aCBhIGNvbXBvbmVudC5cbiAqL1xuXG5mdW5jdGlvbiBSZWRpcmVjdChfcmVmKSB7XG4gIHZhciBjb21wdXRlZE1hdGNoID0gX3JlZi5jb21wdXRlZE1hdGNoLFxuICAgICAgdG8gPSBfcmVmLnRvLFxuICAgICAgX3JlZiRwdXNoID0gX3JlZi5wdXNoLFxuICAgICAgcHVzaCA9IF9yZWYkcHVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmJHB1c2g7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JCQxKSB7XG4gICAgIWNvbnRleHQkJDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICB2YXIgaGlzdG9yeSA9IGNvbnRleHQkJDEuaGlzdG9yeSxcbiAgICAgICAgc3RhdGljQ29udGV4dCA9IGNvbnRleHQkJDEuc3RhdGljQ29udGV4dDtcbiAgICB2YXIgbWV0aG9kID0gcHVzaCA/IGhpc3RvcnkucHVzaCA6IGhpc3RvcnkucmVwbGFjZTtcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihjb21wdXRlZE1hdGNoID8gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gZ2VuZXJhdGVQYXRoKHRvLCBjb21wdXRlZE1hdGNoLnBhcmFtcykgOiBfZXh0ZW5kcyh7fSwgdG8sIHtcbiAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgIH0pIDogdG8pOyAvLyBXaGVuIHJlbmRlcmluZyBpbiBhIHN0YXRpYyBjb250ZXh0LFxuICAgIC8vIHNldCB0aGUgbmV3IGxvY2F0aW9uIGltbWVkaWF0ZWx5LlxuXG4gICAgaWYgKHN0YXRpY0NvbnRleHQpIHtcbiAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoKSB7XG4gICAgICAgIG1ldGhvZChsb2NhdGlvbik7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICBpZiAoIWxvY2F0aW9uc0FyZUVxdWFsKHByZXZQcm9wcy50bywgbG9jYXRpb24pKSB7XG4gICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRvOiB0b1xuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSZWRpcmVjdC5wcm9wVHlwZXMgPSB7XG4gICAgcHVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlJDEgPSB7fTtcbnZhciBjYWNoZUxpbWl0JDEgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50JDEgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aCQxKHBhdGgsIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhDYWNoZSA9IGNhY2hlJDFbY2FjaGVLZXldIHx8IChjYWNoZSQxW2NhY2hlS2V5XSA9IHt9KTtcbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcbiAgdmFyIGtleXMgPSBbXTtcbiAgdmFyIHJlZ2V4cCA9IHBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIHJlc3VsdCA9IHtcbiAgICByZWdleHA6IHJlZ2V4cCxcbiAgICBrZXlzOiBrZXlzXG4gIH07XG5cbiAgaWYgKGNhY2hlQ291bnQkMSA8IGNhY2hlTGltaXQkMSkge1xuICAgIHBhdGhDYWNoZVtwYXRoXSA9IHJlc3VsdDtcbiAgICBjYWNoZUNvdW50JDErKztcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aC5cbiAqL1xuXG5cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiKSBvcHRpb25zID0ge1xuICAgIHBhdGg6IG9wdGlvbnNcbiAgfTtcbiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucyxcbiAgICAgIHBhdGggPSBfb3B0aW9ucy5wYXRoLFxuICAgICAgX29wdGlvbnMkZXhhY3QgPSBfb3B0aW9ucy5leGFjdCxcbiAgICAgIGV4YWN0ID0gX29wdGlvbnMkZXhhY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkZXhhY3QsXG4gICAgICBfb3B0aW9ucyRzdHJpY3QgPSBfb3B0aW9ucy5zdHJpY3QsXG4gICAgICBzdHJpY3QgPSBfb3B0aW9ucyRzdHJpY3QgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc3RyaWN0LFxuICAgICAgX29wdGlvbnMkc2Vuc2l0aXZlID0gX29wdGlvbnMuc2Vuc2l0aXZlLFxuICAgICAgc2Vuc2l0aXZlID0gX29wdGlvbnMkc2Vuc2l0aXZlID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhzID0gW10uY29uY2F0KHBhdGgpO1xuICByZXR1cm4gcGF0aHMucmVkdWNlKGZ1bmN0aW9uIChtYXRjaGVkLCBwYXRoKSB7XG4gICAgaWYgKG1hdGNoZWQpIHJldHVybiBtYXRjaGVkO1xuXG4gICAgdmFyIF9jb21waWxlUGF0aCA9IGNvbXBpbGVQYXRoJDEocGF0aCwge1xuICAgICAgZW5kOiBleGFjdCxcbiAgICAgIHN0cmljdDogc3RyaWN0LFxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmVcbiAgICB9KSxcbiAgICAgICAgcmVnZXhwID0gX2NvbXBpbGVQYXRoLnJlZ2V4cCxcbiAgICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gICAgdmFyIG1hdGNoID0gcmVnZXhwLmV4ZWMocGF0aG5hbWUpO1xuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICAgIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XG4gICAgdmFyIGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuICAgIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAvLyB0aGUgcGF0aCB1c2VkIHRvIG1hdGNoXG4gICAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLFxuICAgICAgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgICBpc0V4YWN0OiBpc0V4YWN0LFxuICAgICAgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgICBwYXJhbXM6IGtleXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBrZXksIGluZGV4KSB7XG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB7fSlcbiAgICB9O1xuICB9LCBudWxsKTtcbn1cblxuZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cblxuXG52YXIgUm91dGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQkJDEpIHtcbiAgICAgICFjb250ZXh0JCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGU+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0JCQxLmxvY2F0aW9uO1xuICAgICAgdmFyIG1hdGNoID0gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCA/IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG4gICAgICA6IF90aGlzLnByb3BzLnBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF90aGlzLnByb3BzKSA6IGNvbnRleHQkJDEubWF0Y2g7XG5cbiAgICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCBjb250ZXh0JCQxLCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgbWF0Y2g6IG1hdGNoXG4gICAgICB9KTtcblxuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICBjb21wb25lbnQgPSBfdGhpcyRwcm9wcy5jb21wb25lbnQsXG4gICAgICAgICAgcmVuZGVyID0gX3RoaXMkcHJvcHMucmVuZGVyOyAvLyBQcmVhY3QgdXNlcyBhbiBlbXB0eSBhcnJheSBhcyBjaGlsZHJlbiBieVxuICAgICAgLy8gZGVmYXVsdCwgc28gdXNlIG51bGwgaWYgdGhhdCdzIHRoZSBjYXNlLlxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikgJiYgY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNoaWxkcmVuID0gY2hpbGRyZW4ocHJvcHMpO1xuXG4gICAgICAgIGlmIChjaGlsZHJlbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgdmFyIHBhdGggPSBfdGhpcy5wcm9wcy5wYXRoO1xuICAgICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgXCJZb3UgcmV0dXJuZWQgYHVuZGVmaW5lZGAgZnJvbSB0aGUgYGNoaWxkcmVuYCBmdW5jdGlvbiBvZiBcIiArIChcIjxSb3V0ZVwiICsgKHBhdGggPyBcIiBwYXRoPVxcXCJcIiArIHBhdGggKyBcIlxcXCJcIiA6IFwiXCIpICsgXCI+LCBidXQgeW91IFwiKSArIFwic2hvdWxkIGhhdmUgcmV0dXJuZWQgYSBSZWFjdCBlbGVtZW50IG9yIGBudWxsYFwiKSA6IHZvaWQgMDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjaGlsZHJlbiA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICB2YWx1ZTogcHJvcHNcbiAgICAgIH0sIGNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBwcm9wcy5tYXRjaCA/IGNvbXBvbmVudCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiByZW5kZXIgPyByZW5kZXIocHJvcHMpIDogbnVsbCA6IG51bGwpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZS5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHByb3BzLCBwcm9wTmFtZSkge1xuICAgICAgaWYgKHByb3BzW3Byb3BOYW1lXSAmJiAhaXNWYWxpZEVsZW1lbnRUeXBlKHByb3BzW3Byb3BOYW1lXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkludmFsaWQgcHJvcCAnY29tcG9uZW50JyBzdXBwbGllZCB0byAnUm91dGUnOiB0aGUgcHJvcCBpcyBub3QgYSB2YWxpZCBSZWFjdCBjb21wb25lbnRcIik7XG4gICAgICB9XG4gICAgfSxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcGF0aDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyldKSxcbiAgICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxuICAgIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbFxuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMuY29tcG9uZW50KSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjb21wb25lbnQ+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIHJlbmRlcj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gXCIvXCIgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xufVxuXG5mdW5jdGlvbiBhZGRCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSkgKyBsb2NhdGlvbi5wYXRobmFtZVxuICB9KTtcbn1cblxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuICB2YXIgYmFzZSA9IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSk7XG4gIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKGJhc2UpICE9PSAwKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVVJMKGxvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgbG9jYXRpb24gPT09IFwic3RyaW5nXCIgPyBsb2NhdGlvbiA6IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xufVxuXG5mdW5jdGlvbiBzdGF0aWNIYW5kbGVyKG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IGNhbm5vdCAlcyB3aXRoIDxTdGF0aWNSb3V0ZXI+XCIsIG1ldGhvZE5hbWUpIDogaW52YXJpYW50KGZhbHNlKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cblxuXG52YXIgU3RhdGljUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN0YXRpY1JvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3RhdGljUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUFVTSFwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUkVQTEFDRVwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdGF0aWNSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5uYXZpZ2F0ZVRvID0gZnVuY3Rpb24gbmF2aWdhdGVUbyhsb2NhdGlvbiwgYWN0aW9uKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMkYmFzZW5hbWUgPSBfdGhpcyRwcm9wcy5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzJGJhc2VuYW1lLFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMuY29udGV4dDtcbiAgICBjb250ZXh0LmFjdGlvbiA9IGFjdGlvbjtcbiAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMiRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzMiRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGNvbnRleHQgPSBfdGhpcyRwcm9wczIuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMiRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzMiRjb250ZXh0LFxuICAgICAgICBfdGhpcyRwcm9wczIkbG9jYXRpb24gPSBfdGhpcyRwcm9wczIubG9jYXRpb24sXG4gICAgICAgIGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyJGxvY2F0aW9uID09PSB2b2lkIDAgPyBcIi9cIiA6IF90aGlzJHByb3BzMiRsb2NhdGlvbixcbiAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiwgW1wiYmFzZW5hbWVcIiwgXCJjb250ZXh0XCIsIFwibG9jYXRpb25cIl0pO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiBmdW5jdGlvbiBjcmVhdGVIcmVmKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSk7XG4gICAgICB9LFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBoaXN0b3J5OiBoaXN0b3J5LFxuICAgICAgc3RhdGljQ29udGV4dDogY29udGV4dFxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gU3RhdGljUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN0YXRpY1JvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN3aXRjaC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQkJDEpIHtcbiAgICAgICFjb250ZXh0JCQxID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dCQkMS5sb2NhdGlvbjtcbiAgICAgIHZhciBlbGVtZW50LCBtYXRjaDsgLy8gV2UgdXNlIFJlYWN0LkNoaWxkcmVuLmZvckVhY2ggaW5zdGVhZCBvZiBSZWFjdC5DaGlsZHJlbi50b0FycmF5KCkuZmluZCgpXG4gICAgICAvLyBoZXJlIGJlY2F1c2UgdG9BcnJheSBhZGRzIGtleXMgdG8gYWxsIGNoaWxkIGVsZW1lbnRzIGFuZCB3ZSBkbyBub3Qgd2FudFxuICAgICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxuICAgICAgLy8gY29tcG9uZW50IGF0IGRpZmZlcmVudCBVUkxzLlxuXG4gICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKF90aGlzLnByb3BzLmNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgZWxlbWVudCA9IGNoaWxkO1xuICAgICAgICAgIHZhciBwYXRoID0gY2hpbGQucHJvcHMucGF0aCB8fCBjaGlsZC5wcm9wcy5mcm9tO1xuICAgICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX2V4dGVuZHMoe30sIGNoaWxkLnByb3BzLCB7XG4gICAgICAgICAgICBwYXRoOiBwYXRoXG4gICAgICAgICAgfSkpIDogY29udGV4dCQkMS5tYXRjaDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoZWxlbWVudCwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGNvbXB1dGVkTWF0Y2g6IG1hdGNoXG4gICAgICB9KSA6IG51bGw7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTd2l0Y2gucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBBIHB1YmxpYyBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFjY2VzcyB0aGUgaW1wZXJhdGl2ZSBBUElcbiAqL1xuXG5mdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvbmVudCkge1xuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcIndyYXBwZWRDb21wb25lbnRSZWZcIl0pO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHtcbiAgICAgIGNoaWxkcmVuOiBmdW5jdGlvbiBjaGlsZHJlbihyb3V0ZUNvbXBvbmVudFByb3BzKSB7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHJlbWFpbmluZ1Byb3BzLCByb3V0ZUNvbXBvbmVudFByb3BzLCB7XG4gICAgICAgICAgcmVmOiB3cmFwcGVkQ29tcG9uZW50UmVmXG4gICAgICAgIH0pKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBDLmRpc3BsYXlOYW1lID0gXCJ3aXRoUm91dGVyKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBDLnByb3BUeXBlcyA9IHtcbiAgICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5mdW5jXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBob2lzdFN0YXRpY3MoQywgQ29tcG9uZW50KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBnbG9iYWwgPSB3aW5kb3c7XG4gICAgdmFyIGtleSA9IFwiX19yZWFjdF9yb3V0ZXJfYnVpbGRfX1wiO1xuICAgIHZhciBidWlsZE5hbWVzID0ge1xuICAgICAgY2pzOiBcIkNvbW1vbkpTXCIsXG4gICAgICBlc206IFwiRVMgbW9kdWxlc1wiLFxuICAgICAgdW1kOiBcIlVNRFwiXG4gICAgfTtcblxuICAgIGlmIChnbG9iYWxba2V5XSAmJiBnbG9iYWxba2V5XSAhPT0gXCJlc21cIikge1xuICAgICAgdmFyIGluaXRpYWxCdWlsZE5hbWUgPSBidWlsZE5hbWVzW2dsb2JhbFtrZXldXTtcbiAgICAgIHZhciBzZWNvbmRhcnlCdWlsZE5hbWUgPSBidWlsZE5hbWVzW1wiZXNtXCJdOyAvLyBUT0RPOiBBZGQgbGluayB0byBhcnRpY2xlIHRoYXQgZXhwbGFpbnMgaW4gZGV0YWlsIGhvdyB0byBhdm9pZFxuICAgICAgLy8gbG9hZGluZyAyIGRpZmZlcmVudCBidWlsZHMuXG5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBhcmUgbG9hZGluZyB0aGUgXCIgKyBzZWNvbmRhcnlCdWlsZE5hbWUgKyBcIiBidWlsZCBvZiBSZWFjdCBSb3V0ZXIgXCIgKyAoXCJvbiBhIHBhZ2UgdGhhdCBpcyBhbHJlYWR5IHJ1bm5pbmcgdGhlIFwiICsgaW5pdGlhbEJ1aWxkTmFtZSArIFwiIFwiKSArIFwiYnVpbGQsIHNvIHRoaW5ncyB3b24ndCB3b3JrIHJpZ2h0LlwiKTtcbiAgICB9XG5cbiAgICBnbG9iYWxba2V5XSA9IFwiZXNtXCI7XG4gIH1cbn1cblxuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBQcm9tcHQsIFJlZGlyZWN0LCBSb3V0ZSwgUm91dGVyLCBTdGF0aWNSb3V0ZXIsIFN3aXRjaCwgZ2VuZXJhdGVQYXRoLCBtYXRjaFBhdGgsIHdpdGhSb3V0ZXIsIGNvbnRleHQgYXMgX19Sb3V0ZXJDb250ZXh0IH07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICAgIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGNvbnRleHRUeXBlOiB0cnVlLFxuICAgIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjogdHJ1ZSxcbiAgICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gICAgbWl4aW5zOiB0cnVlLFxuICAgIHByb3BUeXBlczogdHJ1ZSxcbiAgICB0eXBlOiB0cnVlXG59O1xuXG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgICBuYW1lOiB0cnVlLFxuICAgIGxlbmd0aDogdHJ1ZSxcbiAgICBwcm90b3R5cGU6IHRydWUsXG4gICAgY2FsbGVyOiB0cnVlLFxuICAgIGNhbGxlZTogdHJ1ZSxcbiAgICBhcmd1bWVudHM6IHRydWUsXG4gICAgYXJpdHk6IHRydWVcbn07XG5cbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAgICckJHR5cGVvZic6IHRydWUsXG4gICAgcmVuZGVyOiB0cnVlLFxuICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICBwcm9wVHlwZXM6IHRydWVcbn07XG5cbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgICBjb21wYXJlOiB0cnVlLFxuICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICBwcm9wVHlwZXM6IHRydWUsXG4gICAgdHlwZTogdHJ1ZVxufTtcblxudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW1JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAgIGlmIChSZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgICAgIHJldHVybiBNRU1PX1NUQVRJQ1M7XG4gICAgfVxuICAgIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuXG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gICAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG5cbiAgICAgICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG4gICAgICAgICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICAgICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgICAgIHZhciBzb3VyY2VTdGF0aWNzID0gZ2V0U3RhdGljcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiIsImltcG9ydCAkJG9ic2VydmFibGUgZnJvbSAnc3ltYm9sLW9ic2VydmFibGUnO1xuXG4vKipcbiAqIFRoZXNlIGFyZSBwcml2YXRlIGFjdGlvbiB0eXBlcyByZXNlcnZlZCBieSBSZWR1eC5cbiAqIEZvciBhbnkgdW5rbm93biBhY3Rpb25zLCB5b3UgbXVzdCByZXR1cm4gdGhlIGN1cnJlbnQgc3RhdGUuXG4gKiBJZiB0aGUgY3VycmVudCBzdGF0ZSBpcyB1bmRlZmluZWQsIHlvdSBtdXN0IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZS5cbiAqIERvIG5vdCByZWZlcmVuY2UgdGhlc2UgYWN0aW9uIHR5cGVzIGRpcmVjdGx5IGluIHlvdXIgY29kZS5cbiAqL1xudmFyIHJhbmRvbVN0cmluZyA9IGZ1bmN0aW9uIHJhbmRvbVN0cmluZygpIHtcbiAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZyg3KS5zcGxpdCgnJykuam9pbignLicpO1xufTtcblxudmFyIEFjdGlvblR5cGVzID0ge1xuICBJTklUOiBcIkBAcmVkdXgvSU5JVFwiICsgcmFuZG9tU3RyaW5nKCksXG4gIFJFUExBQ0U6IFwiQEByZWR1eC9SRVBMQUNFXCIgKyByYW5kb21TdHJpbmcoKSxcbiAgUFJPQkVfVU5LTk9XTl9BQ1RJT046IGZ1bmN0aW9uIFBST0JFX1VOS05PV05fQUNUSU9OKCkge1xuICAgIHJldHVybiBcIkBAcmVkdXgvUFJPQkVfVU5LTk9XTl9BQ1RJT05cIiArIHJhbmRvbVN0cmluZygpO1xuICB9XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7YW55fSBvYmogVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIGFyZ3VtZW50IGFwcGVhcnMgdG8gYmUgYSBwbGFpbiBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgdmFyIHByb3RvID0gb2JqO1xuXG4gIHdoaWxlIChPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pICE9PSBudWxsKSB7XG4gICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopID09PSBwcm90bztcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgUmVkdXggc3RvcmUgdGhhdCBob2xkcyB0aGUgc3RhdGUgdHJlZS5cbiAqIFRoZSBvbmx5IHdheSB0byBjaGFuZ2UgdGhlIGRhdGEgaW4gdGhlIHN0b3JlIGlzIHRvIGNhbGwgYGRpc3BhdGNoKClgIG9uIGl0LlxuICpcbiAqIFRoZXJlIHNob3VsZCBvbmx5IGJlIGEgc2luZ2xlIHN0b3JlIGluIHlvdXIgYXBwLiBUbyBzcGVjaWZ5IGhvdyBkaWZmZXJlbnRcbiAqIHBhcnRzIG9mIHRoZSBzdGF0ZSB0cmVlIHJlc3BvbmQgdG8gYWN0aW9ucywgeW91IG1heSBjb21iaW5lIHNldmVyYWwgcmVkdWNlcnNcbiAqIGludG8gYSBzaW5nbGUgcmVkdWNlciBmdW5jdGlvbiBieSB1c2luZyBgY29tYmluZVJlZHVjZXJzYC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWR1Y2VyIEEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZSBuZXh0IHN0YXRlIHRyZWUsIGdpdmVuXG4gKiB0aGUgY3VycmVudCBzdGF0ZSB0cmVlIGFuZCB0aGUgYWN0aW9uIHRvIGhhbmRsZS5cbiAqXG4gKiBAcGFyYW0ge2FueX0gW3ByZWxvYWRlZFN0YXRlXSBUaGUgaW5pdGlhbCBzdGF0ZS4gWW91IG1heSBvcHRpb25hbGx5IHNwZWNpZnkgaXRcbiAqIHRvIGh5ZHJhdGUgdGhlIHN0YXRlIGZyb20gdGhlIHNlcnZlciBpbiB1bml2ZXJzYWwgYXBwcywgb3IgdG8gcmVzdG9yZSBhXG4gKiBwcmV2aW91c2x5IHNlcmlhbGl6ZWQgdXNlciBzZXNzaW9uLlxuICogSWYgeW91IHVzZSBgY29tYmluZVJlZHVjZXJzYCB0byBwcm9kdWNlIHRoZSByb290IHJlZHVjZXIgZnVuY3Rpb24sIHRoaXMgbXVzdCBiZVxuICogYW4gb2JqZWN0IHdpdGggdGhlIHNhbWUgc2hhcGUgYXMgYGNvbWJpbmVSZWR1Y2Vyc2Aga2V5cy5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZW5oYW5jZXJdIFRoZSBzdG9yZSBlbmhhbmNlci4gWW91IG1heSBvcHRpb25hbGx5IHNwZWNpZnkgaXRcbiAqIHRvIGVuaGFuY2UgdGhlIHN0b3JlIHdpdGggdGhpcmQtcGFydHkgY2FwYWJpbGl0aWVzIHN1Y2ggYXMgbWlkZGxld2FyZSxcbiAqIHRpbWUgdHJhdmVsLCBwZXJzaXN0ZW5jZSwgZXRjLiBUaGUgb25seSBzdG9yZSBlbmhhbmNlciB0aGF0IHNoaXBzIHdpdGggUmVkdXhcbiAqIGlzIGBhcHBseU1pZGRsZXdhcmUoKWAuXG4gKlxuICogQHJldHVybnMge1N0b3JlfSBBIFJlZHV4IHN0b3JlIHRoYXQgbGV0cyB5b3UgcmVhZCB0aGUgc3RhdGUsIGRpc3BhdGNoIGFjdGlvbnNcbiAqIGFuZCBzdWJzY3JpYmUgdG8gY2hhbmdlcy5cbiAqL1xuXG5mdW5jdGlvbiBjcmVhdGVTdG9yZShyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSwgZW5oYW5jZXIpIHtcbiAgdmFyIF9yZWYyO1xuXG4gIGlmICh0eXBlb2YgcHJlbG9hZGVkU3RhdGUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGVuaGFuY2VyID09PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiBlbmhhbmNlciA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgYXJndW1lbnRzWzNdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJdCBsb29rcyBsaWtlIHlvdSBhcmUgcGFzc2luZyBzZXZlcmFsIHN0b3JlIGVuaGFuY2VycyB0byAnICsgJ2NyZWF0ZVN0b3JlKCkuIFRoaXMgaXMgbm90IHN1cHBvcnRlZC4gSW5zdGVhZCwgY29tcG9zZSB0aGVtICcgKyAndG9nZXRoZXIgdG8gYSBzaW5nbGUgZnVuY3Rpb24nKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgcHJlbG9hZGVkU3RhdGUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGVuaGFuY2VyID09PSAndW5kZWZpbmVkJykge1xuICAgIGVuaGFuY2VyID0gcHJlbG9hZGVkU3RhdGU7XG4gICAgcHJlbG9hZGVkU3RhdGUgPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAndW5kZWZpbmVkJykge1xuICAgIGlmICh0eXBlb2YgZW5oYW5jZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIGVuaGFuY2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVuaGFuY2VyKGNyZWF0ZVN0b3JlKShyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSk7XG4gIH1cblxuICBpZiAodHlwZW9mIHJlZHVjZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSByZWR1Y2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgY3VycmVudFJlZHVjZXIgPSByZWR1Y2VyO1xuICB2YXIgY3VycmVudFN0YXRlID0gcHJlbG9hZGVkU3RhdGU7XG4gIHZhciBjdXJyZW50TGlzdGVuZXJzID0gW107XG4gIHZhciBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycztcbiAgdmFyIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogUmVhZHMgdGhlIHN0YXRlIHRyZWUgbWFuYWdlZCBieSB0aGUgc3RvcmUuXG4gICAqXG4gICAqIEByZXR1cm5zIHthbnl9IFRoZSBjdXJyZW50IHN0YXRlIHRyZWUgb2YgeW91ciBhcHBsaWNhdGlvbi5cbiAgICovXG5cblxuICBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLmdldFN0YXRlKCkgd2hpbGUgdGhlIHJlZHVjZXIgaXMgZXhlY3V0aW5nLiAnICsgJ1RoZSByZWR1Y2VyIGhhcyBhbHJlYWR5IHJlY2VpdmVkIHRoZSBzdGF0ZSBhcyBhbiBhcmd1bWVudC4gJyArICdQYXNzIGl0IGRvd24gZnJvbSB0aGUgdG9wIHJlZHVjZXIgaW5zdGVhZCBvZiByZWFkaW5nIGl0IGZyb20gdGhlIHN0b3JlLicpO1xuICAgIH1cblxuICAgIHJldHVybiBjdXJyZW50U3RhdGU7XG4gIH1cbiAgLyoqXG4gICAqIEFkZHMgYSBjaGFuZ2UgbGlzdGVuZXIuIEl0IHdpbGwgYmUgY2FsbGVkIGFueSB0aW1lIGFuIGFjdGlvbiBpcyBkaXNwYXRjaGVkLFxuICAgKiBhbmQgc29tZSBwYXJ0IG9mIHRoZSBzdGF0ZSB0cmVlIG1heSBwb3RlbnRpYWxseSBoYXZlIGNoYW5nZWQuIFlvdSBtYXkgdGhlblxuICAgKiBjYWxsIGBnZXRTdGF0ZSgpYCB0byByZWFkIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgaW5zaWRlIHRoZSBjYWxsYmFjay5cbiAgICpcbiAgICogWW91IG1heSBjYWxsIGBkaXNwYXRjaCgpYCBmcm9tIGEgY2hhbmdlIGxpc3RlbmVyLCB3aXRoIHRoZSBmb2xsb3dpbmdcbiAgICogY2F2ZWF0czpcbiAgICpcbiAgICogMS4gVGhlIHN1YnNjcmlwdGlvbnMgYXJlIHNuYXBzaG90dGVkIGp1c3QgYmVmb3JlIGV2ZXJ5IGBkaXNwYXRjaCgpYCBjYWxsLlxuICAgKiBJZiB5b3Ugc3Vic2NyaWJlIG9yIHVuc3Vic2NyaWJlIHdoaWxlIHRoZSBsaXN0ZW5lcnMgYXJlIGJlaW5nIGludm9rZWQsIHRoaXNcbiAgICogd2lsbCBub3QgaGF2ZSBhbnkgZWZmZWN0IG9uIHRoZSBgZGlzcGF0Y2goKWAgdGhhdCBpcyBjdXJyZW50bHkgaW4gcHJvZ3Jlc3MuXG4gICAqIEhvd2V2ZXIsIHRoZSBuZXh0IGBkaXNwYXRjaCgpYCBjYWxsLCB3aGV0aGVyIG5lc3RlZCBvciBub3QsIHdpbGwgdXNlIGEgbW9yZVxuICAgKiByZWNlbnQgc25hcHNob3Qgb2YgdGhlIHN1YnNjcmlwdGlvbiBsaXN0LlxuICAgKlxuICAgKiAyLiBUaGUgbGlzdGVuZXIgc2hvdWxkIG5vdCBleHBlY3QgdG8gc2VlIGFsbCBzdGF0ZSBjaGFuZ2VzLCBhcyB0aGUgc3RhdGVcbiAgICogbWlnaHQgaGF2ZSBiZWVuIHVwZGF0ZWQgbXVsdGlwbGUgdGltZXMgZHVyaW5nIGEgbmVzdGVkIGBkaXNwYXRjaCgpYCBiZWZvcmVcbiAgICogdGhlIGxpc3RlbmVyIGlzIGNhbGxlZC4gSXQgaXMsIGhvd2V2ZXIsIGd1YXJhbnRlZWQgdGhhdCBhbGwgc3Vic2NyaWJlcnNcbiAgICogcmVnaXN0ZXJlZCBiZWZvcmUgdGhlIGBkaXNwYXRjaCgpYCBzdGFydGVkIHdpbGwgYmUgY2FsbGVkIHdpdGggdGhlIGxhdGVzdFxuICAgKiBzdGF0ZSBieSB0aGUgdGltZSBpdCBleGl0cy5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbGlzdGVuZXIgQSBjYWxsYmFjayB0byBiZSBpbnZva2VkIG9uIGV2ZXJ5IGRpc3BhdGNoLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gdG8gcmVtb3ZlIHRoaXMgY2hhbmdlIGxpc3RlbmVyLlxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIGlmICh0eXBlb2YgbGlzdGVuZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIGxpc3RlbmVyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG1heSBub3QgY2FsbCBzdG9yZS5zdWJzY3JpYmUoKSB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnSWYgeW91IHdvdWxkIGxpa2UgdG8gYmUgbm90aWZpZWQgYWZ0ZXIgdGhlIHN0b3JlIGhhcyBiZWVuIHVwZGF0ZWQsIHN1YnNjcmliZSBmcm9tIGEgJyArICdjb21wb25lbnQgYW5kIGludm9rZSBzdG9yZS5nZXRTdGF0ZSgpIGluIHRoZSBjYWxsYmFjayB0byBhY2Nlc3MgdGhlIGxhdGVzdCBzdGF0ZS4gJyArICdTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvYXBpLXJlZmVyZW5jZS9zdG9yZSNzdWJzY3JpYmUobGlzdGVuZXIpIGZvciBtb3JlIGRldGFpbHMuJyk7XG4gICAgfVxuXG4gICAgdmFyIGlzU3Vic2NyaWJlZCA9IHRydWU7XG4gICAgZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycygpO1xuICAgIG5leHRMaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCkge1xuICAgICAgaWYgKCFpc1N1YnNjcmliZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtYXkgbm90IHVuc3Vic2NyaWJlIGZyb20gYSBzdG9yZSBsaXN0ZW5lciB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS1yZWZlcmVuY2Uvc3RvcmUjc3Vic2NyaWJlKGxpc3RlbmVyKSBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcbiAgICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBpbmRleCA9IG5leHRMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBuZXh0TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgfTtcbiAgfVxuICAvKipcbiAgICogRGlzcGF0Y2hlcyBhbiBhY3Rpb24uIEl0IGlzIHRoZSBvbmx5IHdheSB0byB0cmlnZ2VyIGEgc3RhdGUgY2hhbmdlLlxuICAgKlxuICAgKiBUaGUgYHJlZHVjZXJgIGZ1bmN0aW9uLCB1c2VkIHRvIGNyZWF0ZSB0aGUgc3RvcmUsIHdpbGwgYmUgY2FsbGVkIHdpdGggdGhlXG4gICAqIGN1cnJlbnQgc3RhdGUgdHJlZSBhbmQgdGhlIGdpdmVuIGBhY3Rpb25gLiBJdHMgcmV0dXJuIHZhbHVlIHdpbGxcbiAgICogYmUgY29uc2lkZXJlZCB0aGUgKipuZXh0Kiogc3RhdGUgb2YgdGhlIHRyZWUsIGFuZCB0aGUgY2hhbmdlIGxpc3RlbmVyc1xuICAgKiB3aWxsIGJlIG5vdGlmaWVkLlxuICAgKlxuICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvbmx5IHN1cHBvcnRzIHBsYWluIG9iamVjdCBhY3Rpb25zLiBJZiB5b3Ugd2FudCB0b1xuICAgKiBkaXNwYXRjaCBhIFByb21pc2UsIGFuIE9ic2VydmFibGUsIGEgdGh1bmssIG9yIHNvbWV0aGluZyBlbHNlLCB5b3UgbmVlZCB0b1xuICAgKiB3cmFwIHlvdXIgc3RvcmUgY3JlYXRpbmcgZnVuY3Rpb24gaW50byB0aGUgY29ycmVzcG9uZGluZyBtaWRkbGV3YXJlLiBGb3JcbiAgICogZXhhbXBsZSwgc2VlIHRoZSBkb2N1bWVudGF0aW9uIGZvciB0aGUgYHJlZHV4LXRodW5rYCBwYWNrYWdlLiBFdmVuIHRoZVxuICAgKiBtaWRkbGV3YXJlIHdpbGwgZXZlbnR1YWxseSBkaXNwYXRjaCBwbGFpbiBvYmplY3QgYWN0aW9ucyB1c2luZyB0aGlzIG1ldGhvZC5cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IGFjdGlvbiBBIHBsYWluIG9iamVjdCByZXByZXNlbnRpbmcg4oCcd2hhdCBjaGFuZ2Vk4oCdLiBJdCBpc1xuICAgKiBhIGdvb2QgaWRlYSB0byBrZWVwIGFjdGlvbnMgc2VyaWFsaXphYmxlIHNvIHlvdSBjYW4gcmVjb3JkIGFuZCByZXBsYXkgdXNlclxuICAgKiBzZXNzaW9ucywgb3IgdXNlIHRoZSB0aW1lIHRyYXZlbGxpbmcgYHJlZHV4LWRldnRvb2xzYC4gQW4gYWN0aW9uIG11c3QgaGF2ZVxuICAgKiBhIGB0eXBlYCBwcm9wZXJ0eSB3aGljaCBtYXkgbm90IGJlIGB1bmRlZmluZWRgLiBJdCBpcyBhIGdvb2QgaWRlYSB0byB1c2VcbiAgICogc3RyaW5nIGNvbnN0YW50cyBmb3IgYWN0aW9uIHR5cGVzLlxuICAgKlxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBGb3IgY29udmVuaWVuY2UsIHRoZSBzYW1lIGFjdGlvbiBvYmplY3QgeW91IGRpc3BhdGNoZWQuXG4gICAqXG4gICAqIE5vdGUgdGhhdCwgaWYgeW91IHVzZSBhIGN1c3RvbSBtaWRkbGV3YXJlLCBpdCBtYXkgd3JhcCBgZGlzcGF0Y2goKWAgdG9cbiAgICogcmV0dXJuIHNvbWV0aGluZyBlbHNlIChmb3IgZXhhbXBsZSwgYSBQcm9taXNlIHlvdSBjYW4gYXdhaXQpLlxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIGRpc3BhdGNoKGFjdGlvbikge1xuICAgIGlmICghaXNQbGFpbk9iamVjdChhY3Rpb24pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FjdGlvbnMgbXVzdCBiZSBwbGFpbiBvYmplY3RzLiAnICsgJ1VzZSBjdXN0b20gbWlkZGxld2FyZSBmb3IgYXN5bmMgYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbi50eXBlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBY3Rpb25zIG1heSBub3QgaGF2ZSBhbiB1bmRlZmluZWQgXCJ0eXBlXCIgcHJvcGVydHkuICcgKyAnSGF2ZSB5b3UgbWlzc3BlbGxlZCBhIGNvbnN0YW50PycpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlZHVjZXJzIG1heSBub3QgZGlzcGF0Y2ggYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IHRydWU7XG4gICAgICBjdXJyZW50U3RhdGUgPSBjdXJyZW50UmVkdWNlcihjdXJyZW50U3RhdGUsIGFjdGlvbik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgbGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycyA9IG5leHRMaXN0ZW5lcnM7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGxpc3RlbmVyID0gbGlzdGVuZXJzW2ldO1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWN0aW9uO1xuICB9XG4gIC8qKlxuICAgKiBSZXBsYWNlcyB0aGUgcmVkdWNlciBjdXJyZW50bHkgdXNlZCBieSB0aGUgc3RvcmUgdG8gY2FsY3VsYXRlIHRoZSBzdGF0ZS5cbiAgICpcbiAgICogWW91IG1pZ2h0IG5lZWQgdGhpcyBpZiB5b3VyIGFwcCBpbXBsZW1lbnRzIGNvZGUgc3BsaXR0aW5nIGFuZCB5b3Ugd2FudCB0b1xuICAgKiBsb2FkIHNvbWUgb2YgdGhlIHJlZHVjZXJzIGR5bmFtaWNhbGx5LiBZb3UgbWlnaHQgYWxzbyBuZWVkIHRoaXMgaWYgeW91XG4gICAqIGltcGxlbWVudCBhIGhvdCByZWxvYWRpbmcgbWVjaGFuaXNtIGZvciBSZWR1eC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbmV4dFJlZHVjZXIgVGhlIHJlZHVjZXIgZm9yIHRoZSBzdG9yZSB0byB1c2UgaW5zdGVhZC5cbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gcmVwbGFjZVJlZHVjZXIobmV4dFJlZHVjZXIpIHtcbiAgICBpZiAodHlwZW9mIG5leHRSZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSBuZXh0UmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cblxuICAgIGN1cnJlbnRSZWR1Y2VyID0gbmV4dFJlZHVjZXI7XG4gICAgZGlzcGF0Y2goe1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuUkVQTEFDRVxuICAgIH0pO1xuICB9XG4gIC8qKlxuICAgKiBJbnRlcm9wZXJhYmlsaXR5IHBvaW50IGZvciBvYnNlcnZhYmxlL3JlYWN0aXZlIGxpYnJhcmllcy5cbiAgICogQHJldHVybnMge29ic2VydmFibGV9IEEgbWluaW1hbCBvYnNlcnZhYmxlIG9mIHN0YXRlIGNoYW5nZXMuXG4gICAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIG9ic2VydmFibGUgcHJvcG9zYWw6XG4gICAqIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9ic2VydmFibGVcbiAgICovXG5cblxuICBmdW5jdGlvbiBvYnNlcnZhYmxlKCkge1xuICAgIHZhciBfcmVmO1xuXG4gICAgdmFyIG91dGVyU3Vic2NyaWJlID0gc3Vic2NyaWJlO1xuICAgIHJldHVybiBfcmVmID0ge1xuICAgICAgLyoqXG4gICAgICAgKiBUaGUgbWluaW1hbCBvYnNlcnZhYmxlIHN1YnNjcmlwdGlvbiBtZXRob2QuXG4gICAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JzZXJ2ZXIgQW55IG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIGFzIGFuIG9ic2VydmVyLlxuICAgICAgICogVGhlIG9ic2VydmVyIG9iamVjdCBzaG91bGQgaGF2ZSBhIGBuZXh0YCBtZXRob2QuXG4gICAgICAgKiBAcmV0dXJucyB7c3Vic2NyaXB0aW9ufSBBbiBvYmplY3Qgd2l0aCBhbiBgdW5zdWJzY3JpYmVgIG1ldGhvZCB0aGF0IGNhblxuICAgICAgICogYmUgdXNlZCB0byB1bnN1YnNjcmliZSB0aGUgb2JzZXJ2YWJsZSBmcm9tIHRoZSBzdG9yZSwgYW5kIHByZXZlbnQgZnVydGhlclxuICAgICAgICogZW1pc3Npb24gb2YgdmFsdWVzIGZyb20gdGhlIG9ic2VydmFibGUuXG4gICAgICAgKi9cbiAgICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKG9ic2VydmVyKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygb2JzZXJ2ZXIgIT09ICdvYmplY3QnIHx8IG9ic2VydmVyID09PSBudWxsKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgdGhlIG9ic2VydmVyIHRvIGJlIGFuIG9iamVjdC4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIG9ic2VydmVTdGF0ZSgpIHtcbiAgICAgICAgICBpZiAob2JzZXJ2ZXIubmV4dCkge1xuICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dChnZXRTdGF0ZSgpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBvYnNlcnZlU3RhdGUoKTtcbiAgICAgICAgdmFyIHVuc3Vic2NyaWJlID0gb3V0ZXJTdWJzY3JpYmUob2JzZXJ2ZVN0YXRlKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB1bnN1YnNjcmliZTogdW5zdWJzY3JpYmVcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9LCBfcmVmWyQkb2JzZXJ2YWJsZV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LCBfcmVmO1xuICB9IC8vIFdoZW4gYSBzdG9yZSBpcyBjcmVhdGVkLCBhbiBcIklOSVRcIiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCBzbyB0aGF0IGV2ZXJ5XG4gIC8vIHJlZHVjZXIgcmV0dXJucyB0aGVpciBpbml0aWFsIHN0YXRlLiBUaGlzIGVmZmVjdGl2ZWx5IHBvcHVsYXRlc1xuICAvLyB0aGUgaW5pdGlhbCBzdGF0ZSB0cmVlLlxuXG5cbiAgZGlzcGF0Y2goe1xuICAgIHR5cGU6IEFjdGlvblR5cGVzLklOSVRcbiAgfSk7XG4gIHJldHVybiBfcmVmMiA9IHtcbiAgICBkaXNwYXRjaDogZGlzcGF0Y2gsXG4gICAgc3Vic2NyaWJlOiBzdWJzY3JpYmUsXG4gICAgZ2V0U3RhdGU6IGdldFN0YXRlLFxuICAgIHJlcGxhY2VSZWR1Y2VyOiByZXBsYWNlUmVkdWNlclxuICB9LCBfcmVmMlskJG9ic2VydmFibGVdID0gb2JzZXJ2YWJsZSwgX3JlZjI7XG59XG5cbi8qKlxuICogUHJpbnRzIGEgd2FybmluZyBpbiB0aGUgY29uc29sZSBpZiBpdCBleGlzdHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIHdhcm5pbmcgbWVzc2FnZS5cbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiB3YXJuaW5nKG1lc3NhZ2UpIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBjb25zb2xlLmVycm9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cblxuXG4gIHRyeSB7XG4gICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCBpZiB5b3UgZW5hYmxlXG4gICAgLy8gXCJicmVhayBvbiBhbGwgZXhjZXB0aW9uc1wiIGluIHlvdXIgY29uc29sZSxcbiAgICAvLyBpdCB3b3VsZCBwYXVzZSB0aGUgZXhlY3V0aW9uIGF0IHRoaXMgbGluZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIH0gY2F0Y2ggKGUpIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcblxufVxuXG5mdW5jdGlvbiBnZXRVbmRlZmluZWRTdGF0ZUVycm9yTWVzc2FnZShrZXksIGFjdGlvbikge1xuICB2YXIgYWN0aW9uVHlwZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZTtcbiAgdmFyIGFjdGlvbkRlc2NyaXB0aW9uID0gYWN0aW9uVHlwZSAmJiBcImFjdGlvbiBcXFwiXCIgKyBTdHJpbmcoYWN0aW9uVHlwZSkgKyBcIlxcXCJcIiB8fCAnYW4gYWN0aW9uJztcbiAgcmV0dXJuIFwiR2l2ZW4gXCIgKyBhY3Rpb25EZXNjcmlwdGlvbiArIFwiLCByZWR1Y2VyIFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQuIFwiICsgXCJUbyBpZ25vcmUgYW4gYWN0aW9uLCB5b3UgbXVzdCBleHBsaWNpdGx5IHJldHVybiB0aGUgcHJldmlvdXMgc3RhdGUuIFwiICsgXCJJZiB5b3Ugd2FudCB0aGlzIHJlZHVjZXIgdG8gaG9sZCBubyB2YWx1ZSwgeW91IGNhbiByZXR1cm4gbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIjtcbn1cblxuZnVuY3Rpb24gZ2V0VW5leHBlY3RlZFN0YXRlU2hhcGVXYXJuaW5nTWVzc2FnZShpbnB1dFN0YXRlLCByZWR1Y2VycywgYWN0aW9uLCB1bmV4cGVjdGVkS2V5Q2FjaGUpIHtcbiAgdmFyIHJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMocmVkdWNlcnMpO1xuICB2YXIgYXJndW1lbnROYW1lID0gYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5JTklUID8gJ3ByZWxvYWRlZFN0YXRlIGFyZ3VtZW50IHBhc3NlZCB0byBjcmVhdGVTdG9yZScgOiAncHJldmlvdXMgc3RhdGUgcmVjZWl2ZWQgYnkgdGhlIHJlZHVjZXInO1xuXG4gIGlmIChyZWR1Y2VyS2V5cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJ1N0b3JlIGRvZXMgbm90IGhhdmUgYSB2YWxpZCByZWR1Y2VyLiBNYWtlIHN1cmUgdGhlIGFyZ3VtZW50IHBhc3NlZCAnICsgJ3RvIGNvbWJpbmVSZWR1Y2VycyBpcyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSByZWR1Y2Vycy4nO1xuICB9XG5cbiAgaWYgKCFpc1BsYWluT2JqZWN0KGlucHV0U3RhdGUpKSB7XG4gICAgcmV0dXJuIFwiVGhlIFwiICsgYXJndW1lbnROYW1lICsgXCIgaGFzIHVuZXhwZWN0ZWQgdHlwZSBvZiBcXFwiXCIgKyB7fS50b1N0cmluZy5jYWxsKGlucHV0U3RhdGUpLm1hdGNoKC9cXHMoW2EtenxBLVpdKykvKVsxXSArIFwiXFxcIi4gRXhwZWN0ZWQgYXJndW1lbnQgdG8gYmUgYW4gb2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBcIiArIChcImtleXM6IFxcXCJcIiArIHJlZHVjZXJLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiXCIpO1xuICB9XG5cbiAgdmFyIHVuZXhwZWN0ZWRLZXlzID0gT2JqZWN0LmtleXMoaW5wdXRTdGF0ZSkuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gIXJlZHVjZXJzLmhhc093blByb3BlcnR5KGtleSkgJiYgIXVuZXhwZWN0ZWRLZXlDYWNoZVtrZXldO1xuICB9KTtcbiAgdW5leHBlY3RlZEtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlW2tleV0gPSB0cnVlO1xuICB9KTtcbiAgaWYgKGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuUkVQTEFDRSkgcmV0dXJuO1xuXG4gIGlmICh1bmV4cGVjdGVkS2V5cy5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIFwiVW5leHBlY3RlZCBcIiArICh1bmV4cGVjdGVkS2V5cy5sZW5ndGggPiAxID8gJ2tleXMnIDogJ2tleScpICsgXCIgXCIgKyAoXCJcXFwiXCIgKyB1bmV4cGVjdGVkS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIiBmb3VuZCBpbiBcIiArIGFyZ3VtZW50TmFtZSArIFwiLiBcIikgKyBcIkV4cGVjdGVkIHRvIGZpbmQgb25lIG9mIHRoZSBrbm93biByZWR1Y2VyIGtleXMgaW5zdGVhZDogXCIgKyAoXCJcXFwiXCIgKyByZWR1Y2VyS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIi4gVW5leHBlY3RlZCBrZXlzIHdpbGwgYmUgaWdub3JlZC5cIik7XG4gIH1cbn1cblxuZnVuY3Rpb24gYXNzZXJ0UmVkdWNlclNoYXBlKHJlZHVjZXJzKSB7XG4gIE9iamVjdC5rZXlzKHJlZHVjZXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgcmVkdWNlciA9IHJlZHVjZXJzW2tleV07XG4gICAgdmFyIGluaXRpYWxTdGF0ZSA9IHJlZHVjZXIodW5kZWZpbmVkLCB7XG4gICAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gICAgfSk7XG5cbiAgICBpZiAodHlwZW9mIGluaXRpYWxTdGF0ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlJlZHVjZXIgXFxcIlwiICsga2V5ICsgXCJcXFwiIHJldHVybmVkIHVuZGVmaW5lZCBkdXJpbmcgaW5pdGlhbGl6YXRpb24uIFwiICsgXCJJZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZSByZWR1Y2VyIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgXCIgKyBcImV4cGxpY2l0bHkgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgXCIgKyBcIm5vdCBiZSB1bmRlZmluZWQuIElmIHlvdSBkb24ndCB3YW50IHRvIHNldCBhIHZhbHVlIGZvciB0aGlzIHJlZHVjZXIsIFwiICsgXCJ5b3UgY2FuIHVzZSBudWxsIGluc3RlYWQgb2YgdW5kZWZpbmVkLlwiKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHJlZHVjZXIodW5kZWZpbmVkLCB7XG4gICAgICB0eXBlOiBBY3Rpb25UeXBlcy5QUk9CRV9VTktOT1dOX0FDVElPTigpXG4gICAgfSkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWR1Y2VyIFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgd2hlbiBwcm9iZWQgd2l0aCBhIHJhbmRvbSB0eXBlLiBcIiArIChcIkRvbid0IHRyeSB0byBoYW5kbGUgXCIgKyBBY3Rpb25UeXBlcy5JTklUICsgXCIgb3Igb3RoZXIgYWN0aW9ucyBpbiBcXFwicmVkdXgvKlxcXCIgXCIpICsgXCJuYW1lc3BhY2UuIFRoZXkgYXJlIGNvbnNpZGVyZWQgcHJpdmF0ZS4gSW5zdGVhZCwgeW91IG11c3QgcmV0dXJuIHRoZSBcIiArIFwiY3VycmVudCBzdGF0ZSBmb3IgYW55IHVua25vd24gYWN0aW9ucywgdW5sZXNzIGl0IGlzIHVuZGVmaW5lZCwgXCIgKyBcImluIHdoaWNoIGNhc2UgeW91IG11c3QgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLCByZWdhcmRsZXNzIG9mIHRoZSBcIiArIFwiYWN0aW9uIHR5cGUuIFRoZSBpbml0aWFsIHN0YXRlIG1heSBub3QgYmUgdW5kZWZpbmVkLCBidXQgY2FuIGJlIG51bGwuXCIpO1xuICAgIH1cbiAgfSk7XG59XG4vKipcbiAqIFR1cm5zIGFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgYXJlIGRpZmZlcmVudCByZWR1Y2VyIGZ1bmN0aW9ucywgaW50byBhIHNpbmdsZVxuICogcmVkdWNlciBmdW5jdGlvbi4gSXQgd2lsbCBjYWxsIGV2ZXJ5IGNoaWxkIHJlZHVjZXIsIGFuZCBnYXRoZXIgdGhlaXIgcmVzdWx0c1xuICogaW50byBhIHNpbmdsZSBzdGF0ZSBvYmplY3QsIHdob3NlIGtleXMgY29ycmVzcG9uZCB0byB0aGUga2V5cyBvZiB0aGUgcGFzc2VkXG4gKiByZWR1Y2VyIGZ1bmN0aW9ucy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcmVkdWNlcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBjb3JyZXNwb25kIHRvIGRpZmZlcmVudFxuICogcmVkdWNlciBmdW5jdGlvbnMgdGhhdCBuZWVkIHRvIGJlIGNvbWJpbmVkIGludG8gb25lLiBPbmUgaGFuZHkgd2F5IHRvIG9idGFpblxuICogaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXMgcmVkdWNlcnNgIHN5bnRheC4gVGhlIHJlZHVjZXJzIG1heSBuZXZlciByZXR1cm5cbiAqIHVuZGVmaW5lZCBmb3IgYW55IGFjdGlvbi4gSW5zdGVhZCwgdGhleSBzaG91bGQgcmV0dXJuIHRoZWlyIGluaXRpYWwgc3RhdGVcbiAqIGlmIHRoZSBzdGF0ZSBwYXNzZWQgdG8gdGhlbSB3YXMgdW5kZWZpbmVkLCBhbmQgdGhlIGN1cnJlbnQgc3RhdGUgZm9yIGFueVxuICogdW5yZWNvZ25pemVkIGFjdGlvbi5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgcmVkdWNlciBmdW5jdGlvbiB0aGF0IGludm9rZXMgZXZlcnkgcmVkdWNlciBpbnNpZGUgdGhlXG4gKiBwYXNzZWQgb2JqZWN0LCBhbmQgYnVpbGRzIGEgc3RhdGUgb2JqZWN0IHdpdGggdGhlIHNhbWUgc2hhcGUuXG4gKi9cblxuXG5mdW5jdGlvbiBjb21iaW5lUmVkdWNlcnMocmVkdWNlcnMpIHtcbiAgdmFyIHJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMocmVkdWNlcnMpO1xuICB2YXIgZmluYWxSZWR1Y2VycyA9IHt9O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcmVkdWNlcktleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gcmVkdWNlcktleXNbaV07XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKHR5cGVvZiByZWR1Y2Vyc1trZXldID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB3YXJuaW5nKFwiTm8gcmVkdWNlciBwcm92aWRlZCBmb3Iga2V5IFxcXCJcIiArIGtleSArIFwiXFxcIlwiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHJlZHVjZXJzW2tleV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGZpbmFsUmVkdWNlcnNba2V5XSA9IHJlZHVjZXJzW2tleV07XG4gICAgfVxuICB9XG5cbiAgdmFyIGZpbmFsUmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhmaW5hbFJlZHVjZXJzKTtcbiAgdmFyIHVuZXhwZWN0ZWRLZXlDYWNoZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHVuZXhwZWN0ZWRLZXlDYWNoZSA9IHt9O1xuICB9XG5cbiAgdmFyIHNoYXBlQXNzZXJ0aW9uRXJyb3I7XG5cbiAgdHJ5IHtcbiAgICBhc3NlcnRSZWR1Y2VyU2hhcGUoZmluYWxSZWR1Y2Vycyk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBzaGFwZUFzc2VydGlvbkVycm9yID0gZTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBjb21iaW5hdGlvbihzdGF0ZSwgYWN0aW9uKSB7XG4gICAgaWYgKHN0YXRlID09PSB2b2lkIDApIHtcbiAgICAgIHN0YXRlID0ge307XG4gICAgfVxuXG4gICAgaWYgKHNoYXBlQXNzZXJ0aW9uRXJyb3IpIHtcbiAgICAgIHRocm93IHNoYXBlQXNzZXJ0aW9uRXJyb3I7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHZhciB3YXJuaW5nTWVzc2FnZSA9IGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2Uoc3RhdGUsIGZpbmFsUmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKTtcblxuICAgICAgaWYgKHdhcm5pbmdNZXNzYWdlKSB7XG4gICAgICAgIHdhcm5pbmcod2FybmluZ01lc3NhZ2UpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBoYXNDaGFuZ2VkID0gZmFsc2U7XG4gICAgdmFyIG5leHRTdGF0ZSA9IHt9O1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGZpbmFsUmVkdWNlcktleXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2tleSA9IGZpbmFsUmVkdWNlcktleXNbX2ldO1xuICAgICAgdmFyIHJlZHVjZXIgPSBmaW5hbFJlZHVjZXJzW19rZXldO1xuICAgICAgdmFyIHByZXZpb3VzU3RhdGVGb3JLZXkgPSBzdGF0ZVtfa2V5XTtcbiAgICAgIHZhciBuZXh0U3RhdGVGb3JLZXkgPSByZWR1Y2VyKHByZXZpb3VzU3RhdGVGb3JLZXksIGFjdGlvbik7XG5cbiAgICAgIGlmICh0eXBlb2YgbmV4dFN0YXRlRm9yS2V5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB2YXIgZXJyb3JNZXNzYWdlID0gZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2UoX2tleSwgYWN0aW9uKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yTWVzc2FnZSk7XG4gICAgICB9XG5cbiAgICAgIG5leHRTdGF0ZVtfa2V5XSA9IG5leHRTdGF0ZUZvcktleTtcbiAgICAgIGhhc0NoYW5nZWQgPSBoYXNDaGFuZ2VkIHx8IG5leHRTdGF0ZUZvcktleSAhPT0gcHJldmlvdXNTdGF0ZUZvcktleTtcbiAgICB9XG5cbiAgICByZXR1cm4gaGFzQ2hhbmdlZCA/IG5leHRTdGF0ZSA6IHN0YXRlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkaXNwYXRjaChhY3Rpb25DcmVhdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9O1xufVxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb24gY3JlYXRvcnMsIGludG8gYW4gb2JqZWN0IHdpdGggdGhlXG4gKiBzYW1lIGtleXMsIGJ1dCB3aXRoIGV2ZXJ5IGZ1bmN0aW9uIHdyYXBwZWQgaW50byBhIGBkaXNwYXRjaGAgY2FsbCBzbyB0aGV5XG4gKiBtYXkgYmUgaW52b2tlZCBkaXJlY3RseS4gVGhpcyBpcyBqdXN0IGEgY29udmVuaWVuY2UgbWV0aG9kLCBhcyB5b3UgY2FuIGNhbGxcbiAqIGBzdG9yZS5kaXNwYXRjaChNeUFjdGlvbkNyZWF0b3JzLmRvU29tZXRoaW5nKCkpYCB5b3Vyc2VsZiBqdXN0IGZpbmUuXG4gKlxuICogRm9yIGNvbnZlbmllbmNlLCB5b3UgY2FuIGFsc28gcGFzcyBhIHNpbmdsZSBmdW5jdGlvbiBhcyB0aGUgZmlyc3QgYXJndW1lbnQsXG4gKiBhbmQgZ2V0IGEgZnVuY3Rpb24gaW4gcmV0dXJuLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fSBhY3Rpb25DcmVhdG9ycyBBbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb25cbiAqIGNyZWF0b3IgZnVuY3Rpb25zLiBPbmUgaGFuZHkgd2F5IHRvIG9idGFpbiBpdCBpcyB0byB1c2UgRVM2IGBpbXBvcnQgKiBhc2BcbiAqIHN5bnRheC4gWW91IG1heSBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZGlzcGF0Y2ggVGhlIGBkaXNwYXRjaGAgZnVuY3Rpb24gYXZhaWxhYmxlIG9uIHlvdXIgUmVkdXhcbiAqIHN0b3JlLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbnxPYmplY3R9IFRoZSBvYmplY3QgbWltaWNraW5nIHRoZSBvcmlnaW5hbCBvYmplY3QsIGJ1dCB3aXRoXG4gKiBldmVyeSBhY3Rpb24gY3JlYXRvciB3cmFwcGVkIGludG8gdGhlIGBkaXNwYXRjaGAgY2FsbC4gSWYgeW91IHBhc3NlZCBhXG4gKiBmdW5jdGlvbiBhcyBgYWN0aW9uQ3JlYXRvcnNgLCB0aGUgcmV0dXJuIHZhbHVlIHdpbGwgYWxzbyBiZSBhIHNpbmdsZVxuICogZnVuY3Rpb24uXG4gKi9cblxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgIT09ICdvYmplY3QnIHx8IGFjdGlvbkNyZWF0b3JzID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYmluZEFjdGlvbkNyZWF0b3JzIGV4cGVjdGVkIGFuIG9iamVjdCBvciBhIGZ1bmN0aW9uLCBpbnN0ZWFkIHJlY2VpdmVkIFwiICsgKGFjdGlvbkNyZWF0b3JzID09PSBudWxsID8gJ251bGwnIDogdHlwZW9mIGFjdGlvbkNyZWF0b3JzKSArIFwiLiBcIiArIFwiRGlkIHlvdSB3cml0ZSBcXFwiaW1wb3J0IEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiIGluc3RlYWQgb2YgXFxcImltcG9ydCAqIGFzIEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiP1wiKTtcbiAgfVxuXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoYWN0aW9uQ3JlYXRvcnMpO1xuICB2YXIgYm91bmRBY3Rpb25DcmVhdG9ycyA9IHt9O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgIHZhciBhY3Rpb25DcmVhdG9yID0gYWN0aW9uQ3JlYXRvcnNba2V5XTtcblxuICAgIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYm91bmRBY3Rpb25DcmVhdG9yc1trZXldID0gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBib3VuZEFjdGlvbkNyZWF0b3JzO1xufVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTtcbiAgICB2YXIgb3duS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG5cbiAgICBpZiAodHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIG93bktleXMgPSBvd25LZXlzLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSkuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBzeW0pLmVudW1lcmFibGU7XG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgb3duS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuLyoqXG4gKiBDb21wb3NlcyBzaW5nbGUtYXJndW1lbnQgZnVuY3Rpb25zIGZyb20gcmlnaHQgdG8gbGVmdC4gVGhlIHJpZ2h0bW9zdFxuICogZnVuY3Rpb24gY2FuIHRha2UgbXVsdGlwbGUgYXJndW1lbnRzIGFzIGl0IHByb3ZpZGVzIHRoZSBzaWduYXR1cmUgZm9yXG4gKiB0aGUgcmVzdWx0aW5nIGNvbXBvc2l0ZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBmdW5jcyBUaGUgZnVuY3Rpb25zIHRvIGNvbXBvc2UuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gb2J0YWluZWQgYnkgY29tcG9zaW5nIHRoZSBhcmd1bWVudCBmdW5jdGlvbnNcbiAqIGZyb20gcmlnaHQgdG8gbGVmdC4gRm9yIGV4YW1wbGUsIGNvbXBvc2UoZiwgZywgaCkgaXMgaWRlbnRpY2FsIHRvIGRvaW5nXG4gKiAoLi4uYXJncykgPT4gZihnKGgoLi4uYXJncykpKS5cbiAqL1xuZnVuY3Rpb24gY29tcG9zZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGZ1bmNzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGZ1bmNzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICByZXR1cm4gYXJnO1xuICAgIH07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGZ1bmNzWzBdO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmNzLnJlZHVjZShmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gYShiLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKSk7XG4gICAgfTtcbiAgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHN0b3JlIGVuaGFuY2VyIHRoYXQgYXBwbGllcyBtaWRkbGV3YXJlIHRvIHRoZSBkaXNwYXRjaCBtZXRob2RcbiAqIG9mIHRoZSBSZWR1eCBzdG9yZS4gVGhpcyBpcyBoYW5keSBmb3IgYSB2YXJpZXR5IG9mIHRhc2tzLCBzdWNoIGFzIGV4cHJlc3NpbmdcbiAqIGFzeW5jaHJvbm91cyBhY3Rpb25zIGluIGEgY29uY2lzZSBtYW5uZXIsIG9yIGxvZ2dpbmcgZXZlcnkgYWN0aW9uIHBheWxvYWQuXG4gKlxuICogU2VlIGByZWR1eC10aHVua2AgcGFja2FnZSBhcyBhbiBleGFtcGxlIG9mIHRoZSBSZWR1eCBtaWRkbGV3YXJlLlxuICpcbiAqIEJlY2F1c2UgbWlkZGxld2FyZSBpcyBwb3RlbnRpYWxseSBhc3luY2hyb25vdXMsIHRoaXMgc2hvdWxkIGJlIHRoZSBmaXJzdFxuICogc3RvcmUgZW5oYW5jZXIgaW4gdGhlIGNvbXBvc2l0aW9uIGNoYWluLlxuICpcbiAqIE5vdGUgdGhhdCBlYWNoIG1pZGRsZXdhcmUgd2lsbCBiZSBnaXZlbiB0aGUgYGRpc3BhdGNoYCBhbmQgYGdldFN0YXRlYCBmdW5jdGlvbnNcbiAqIGFzIG5hbWVkIGFyZ3VtZW50cy5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBtaWRkbGV3YXJlcyBUaGUgbWlkZGxld2FyZSBjaGFpbiB0byBiZSBhcHBsaWVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHN0b3JlIGVuaGFuY2VyIGFwcGx5aW5nIHRoZSBtaWRkbGV3YXJlLlxuICovXG5cbmZ1bmN0aW9uIGFwcGx5TWlkZGxld2FyZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIG1pZGRsZXdhcmVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIG1pZGRsZXdhcmVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChjcmVhdGVTdG9yZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZS5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG5cbiAgICAgIHZhciBfZGlzcGF0Y2ggPSBmdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRGlzcGF0Y2hpbmcgd2hpbGUgY29uc3RydWN0aW5nIHlvdXIgbWlkZGxld2FyZSBpcyBub3QgYWxsb3dlZC4gXCIgKyBcIk90aGVyIG1pZGRsZXdhcmUgd291bGQgbm90IGJlIGFwcGxpZWQgdG8gdGhpcyBkaXNwYXRjaC5cIik7XG4gICAgICB9O1xuXG4gICAgICB2YXIgbWlkZGxld2FyZUFQSSA9IHtcbiAgICAgICAgZ2V0U3RhdGU6IHN0b3JlLmdldFN0YXRlLFxuICAgICAgICBkaXNwYXRjaDogZnVuY3Rpb24gZGlzcGF0Y2goKSB7XG4gICAgICAgICAgcmV0dXJuIF9kaXNwYXRjaC5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgY2hhaW4gPSBtaWRkbGV3YXJlcy5tYXAoZnVuY3Rpb24gKG1pZGRsZXdhcmUpIHtcbiAgICAgICAgcmV0dXJuIG1pZGRsZXdhcmUobWlkZGxld2FyZUFQSSk7XG4gICAgICB9KTtcbiAgICAgIF9kaXNwYXRjaCA9IGNvbXBvc2UuYXBwbHkodm9pZCAwLCBjaGFpbikoc3RvcmUuZGlzcGF0Y2gpO1xuICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHN0b3JlLCB7XG4gICAgICAgIGRpc3BhdGNoOiBfZGlzcGF0Y2hcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG59XG5cbi8qXG4gKiBUaGlzIGlzIGEgZHVtbXkgZnVuY3Rpb24gdG8gY2hlY2sgaWYgdGhlIGZ1bmN0aW9uIG5hbWUgaGFzIGJlZW4gYWx0ZXJlZCBieSBtaW5pZmljYXRpb24uXG4gKiBJZiB0aGUgZnVuY3Rpb24gaGFzIGJlZW4gbWluaWZpZWQgYW5kIE5PREVfRU5WICE9PSAncHJvZHVjdGlvbicsIHdhcm4gdGhlIHVzZXIuXG4gKi9cblxuZnVuY3Rpb24gaXNDcnVzaGVkKCkge31cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIGlzQ3J1c2hlZC5uYW1lID09PSAnc3RyaW5nJyAmJiBpc0NydXNoZWQubmFtZSAhPT0gJ2lzQ3J1c2hlZCcpIHtcbiAgd2FybmluZygnWW91IGFyZSBjdXJyZW50bHkgdXNpbmcgbWluaWZpZWQgY29kZSBvdXRzaWRlIG9mIE5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIi4gJyArICdUaGlzIG1lYW5zIHRoYXQgeW91IGFyZSBydW5uaW5nIGEgc2xvd2VyIGRldmVsb3BtZW50IGJ1aWxkIG9mIFJlZHV4LiAnICsgJ1lvdSBjYW4gdXNlIGxvb3NlLWVudmlmeSAoaHR0cHM6Ly9naXRodWIuY29tL3plcnRvc2gvbG9vc2UtZW52aWZ5KSBmb3IgYnJvd3NlcmlmeSAnICsgJ29yIHNldHRpbmcgbW9kZSB0byBwcm9kdWN0aW9uIGluIHdlYnBhY2sgKGh0dHBzOi8vd2VicGFjay5qcy5vcmcvY29uY2VwdHMvbW9kZS8pICcgKyAndG8gZW5zdXJlIHlvdSBoYXZlIHRoZSBjb3JyZWN0IGNvZGUgZm9yIHlvdXIgcHJvZHVjdGlvbiBidWlsZC4nKTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlU3RvcmUsIGNvbWJpbmVSZWR1Y2VycywgYmluZEFjdGlvbkNyZWF0b3JzLCBhcHBseU1pZGRsZXdhcmUsIGNvbXBvc2UsIEFjdGlvblR5cGVzIGFzIF9fRE9fTk9UX1VTRV9fQWN0aW9uVHlwZXMgfTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IHZhciBSZWFjdFJlZHV4Q29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5leHBvcnQgZGVmYXVsdCBSZWFjdFJlZHV4Q29udGV4dDsiLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2VcIjtcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL0NvbnRleHQnO1xuXG52YXIgUHJvdmlkZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFByb3ZpZGVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgdmFyIHN0b3JlID0gcHJvcHMuc3RvcmU7XG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBzdG9yZVN0YXRlOiBzdG9yZS5nZXRTdGF0ZSgpLFxuICAgICAgc3RvcmU6IHN0b3JlXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUHJvdmlkZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG4gICAgdGhpcy5zdWJzY3JpYmUoKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy51bnN1YnNjcmliZSkgdGhpcy51bnN1YnNjcmliZSgpO1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuc3RvcmUgIT09IHByZXZQcm9wcy5zdG9yZSkge1xuICAgICAgaWYgKHRoaXMudW5zdWJzY3JpYmUpIHRoaXMudW5zdWJzY3JpYmUoKTtcbiAgICAgIHRoaXMuc3Vic2NyaWJlKCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5zdWJzY3JpYmUgPSBmdW5jdGlvbiBzdWJzY3JpYmUoKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgc3RvcmUgPSB0aGlzLnByb3BzLnN0b3JlO1xuICAgIHRoaXMudW5zdWJzY3JpYmUgPSBzdG9yZS5zdWJzY3JpYmUoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIG5ld1N0b3JlU3RhdGUgPSBzdG9yZS5nZXRTdGF0ZSgpO1xuXG4gICAgICBpZiAoIV90aGlzMi5faXNNb3VudGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgX3RoaXMyLnNldFN0YXRlKGZ1bmN0aW9uIChwcm92aWRlclN0YXRlKSB7XG4gICAgICAgIC8vIElmIHRoZSB2YWx1ZSBpcyB0aGUgc2FtZSwgc2tpcCB0aGUgdW5uZWNlc3Nhcnkgc3RhdGUgdXBkYXRlLlxuICAgICAgICBpZiAocHJvdmlkZXJTdGF0ZS5zdG9yZVN0YXRlID09PSBuZXdTdG9yZVN0YXRlKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN0b3JlU3RhdGU6IG5ld1N0b3JlU3RhdGVcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH0pOyAvLyBBY3Rpb25zIG1pZ2h0IGhhdmUgYmVlbiBkaXNwYXRjaGVkIGJldHdlZW4gcmVuZGVyIGFuZCBtb3VudCAtIGhhbmRsZSB0aG9zZVxuXG4gICAgdmFyIHBvc3RNb3VudFN0b3JlU3RhdGUgPSBzdG9yZS5nZXRTdGF0ZSgpO1xuXG4gICAgaWYgKHBvc3RNb3VudFN0b3JlU3RhdGUgIT09IHRoaXMuc3RhdGUuc3RvcmVTdGF0ZSkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHN0b3JlU3RhdGU6IHBvc3RNb3VudFN0b3JlU3RhdGVcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBDb250ZXh0ID0gdGhpcy5wcm9wcy5jb250ZXh0IHx8IFJlYWN0UmVkdXhDb250ZXh0O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiB0aGlzLnN0YXRlXG4gICAgfSwgdGhpcy5wcm9wcy5jaGlsZHJlbik7XG4gIH07XG5cbiAgcmV0dXJuIFByb3ZpZGVyO1xufShDb21wb25lbnQpO1xuXG5Qcm92aWRlci5wcm9wVHlwZXMgPSB7XG4gIHN0b3JlOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHN1YnNjcmliZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBkaXNwYXRjaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBnZXRTdGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICB9KSxcbiAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5hbnlcbn07XG5leHBvcnQgZGVmYXVsdCBQcm92aWRlcjsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307XG4gIHZhciB0YXJnZXQgPSB7fTtcbiAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICB2YXIga2V5LCBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlO1xuICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsImltcG9ydCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCwgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSwgaXNDb250ZXh0Q29uc3VtZXIgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vQ29udGV4dCc7XG5cbnZhciBzdHJpbmdpZnlDb21wb25lbnQgPSBmdW5jdGlvbiBzdHJpbmdpZnlDb21wb25lbnQoQ29tcCkge1xuICB0cnkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShDb21wKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIFN0cmluZyhDb21wKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29ubmVjdEFkdmFuY2VkKFxuLypcbiAgc2VsZWN0b3JGYWN0b3J5IGlzIGEgZnVuYyB0aGF0IGlzIHJlc3BvbnNpYmxlIGZvciByZXR1cm5pbmcgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uIHVzZWQgdG9cbiAgY29tcHV0ZSBuZXcgcHJvcHMgZnJvbSBzdGF0ZSwgcHJvcHMsIGFuZCBkaXNwYXRjaC4gRm9yIGV4YW1wbGU6XG4gICAgIGV4cG9ydCBkZWZhdWx0IGNvbm5lY3RBZHZhbmNlZCgoZGlzcGF0Y2gsIG9wdGlvbnMpID0+IChzdGF0ZSwgcHJvcHMpID0+ICh7XG4gICAgICB0aGluZzogc3RhdGUudGhpbmdzW3Byb3BzLnRoaW5nSWRdLFxuICAgICAgc2F2ZVRoaW5nOiBmaWVsZHMgPT4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvcnMuc2F2ZVRoaW5nKHByb3BzLnRoaW5nSWQsIGZpZWxkcykpLFxuICAgIH0pKShZb3VyQ29tcG9uZW50KVxuICAgQWNjZXNzIHRvIGRpc3BhdGNoIGlzIHByb3ZpZGVkIHRvIHRoZSBmYWN0b3J5IHNvIHNlbGVjdG9yRmFjdG9yaWVzIGNhbiBiaW5kIGFjdGlvbkNyZWF0b3JzXG4gIG91dHNpZGUgb2YgdGhlaXIgc2VsZWN0b3IgYXMgYW4gb3B0aW1pemF0aW9uLiBPcHRpb25zIHBhc3NlZCB0byBjb25uZWN0QWR2YW5jZWQgYXJlIHBhc3NlZCB0b1xuICB0aGUgc2VsZWN0b3JGYWN0b3J5LCBhbG9uZyB3aXRoIGRpc3BsYXlOYW1lIGFuZCBXcmFwcGVkQ29tcG9uZW50LCBhcyB0aGUgc2Vjb25kIGFyZ3VtZW50LlxuICAgTm90ZSB0aGF0IHNlbGVjdG9yRmFjdG9yeSBpcyByZXNwb25zaWJsZSBmb3IgYWxsIGNhY2hpbmcvbWVtb2l6YXRpb24gb2YgaW5ib3VuZCBhbmQgb3V0Ym91bmRcbiAgcHJvcHMuIERvIG5vdCB1c2UgY29ubmVjdEFkdmFuY2VkIGRpcmVjdGx5IHdpdGhvdXQgbWVtb2l6aW5nIHJlc3VsdHMgYmV0d2VlbiBjYWxscyB0byB5b3VyXG4gIHNlbGVjdG9yLCBvdGhlcndpc2UgdGhlIENvbm5lY3QgY29tcG9uZW50IHdpbGwgcmUtcmVuZGVyIG9uIGV2ZXJ5IHN0YXRlIG9yIHByb3BzIGNoYW5nZS5cbiovXG5zZWxlY3RvckZhY3RvcnksIC8vIG9wdGlvbnMgb2JqZWN0OlxuX3JlZikge1xuICBpZiAoX3JlZiA9PT0gdm9pZCAwKSB7XG4gICAgX3JlZiA9IHt9O1xuICB9XG5cbiAgdmFyIF9yZWYyID0gX3JlZixcbiAgICAgIF9yZWYyJGdldERpc3BsYXlOYW1lID0gX3JlZjIuZ2V0RGlzcGxheU5hbWUsXG4gICAgICBnZXREaXNwbGF5TmFtZSA9IF9yZWYyJGdldERpc3BsYXlOYW1lID09PSB2b2lkIDAgPyBmdW5jdGlvbiAobmFtZSkge1xuICAgIHJldHVybiBcIkNvbm5lY3RBZHZhbmNlZChcIiArIG5hbWUgKyBcIilcIjtcbiAgfSA6IF9yZWYyJGdldERpc3BsYXlOYW1lLFxuICAgICAgX3JlZjIkbWV0aG9kTmFtZSA9IF9yZWYyLm1ldGhvZE5hbWUsXG4gICAgICBtZXRob2ROYW1lID0gX3JlZjIkbWV0aG9kTmFtZSA9PT0gdm9pZCAwID8gJ2Nvbm5lY3RBZHZhbmNlZCcgOiBfcmVmMiRtZXRob2ROYW1lLFxuICAgICAgX3JlZjIkcmVuZGVyQ291bnRQcm9wID0gX3JlZjIucmVuZGVyQ291bnRQcm9wLFxuICAgICAgcmVuZGVyQ291bnRQcm9wID0gX3JlZjIkcmVuZGVyQ291bnRQcm9wID09PSB2b2lkIDAgPyB1bmRlZmluZWQgOiBfcmVmMiRyZW5kZXJDb3VudFByb3AsXG4gICAgICBfcmVmMiRzaG91bGRIYW5kbGVTdGEgPSBfcmVmMi5zaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsXG4gICAgICBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMgPSBfcmVmMiRzaG91bGRIYW5kbGVTdGEgPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmMiRzaG91bGRIYW5kbGVTdGEsXG4gICAgICBfcmVmMiRzdG9yZUtleSA9IF9yZWYyLnN0b3JlS2V5LFxuICAgICAgc3RvcmVLZXkgPSBfcmVmMiRzdG9yZUtleSA9PT0gdm9pZCAwID8gJ3N0b3JlJyA6IF9yZWYyJHN0b3JlS2V5LFxuICAgICAgX3JlZjIkd2l0aFJlZiA9IF9yZWYyLndpdGhSZWYsXG4gICAgICB3aXRoUmVmID0gX3JlZjIkd2l0aFJlZiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmMiR3aXRoUmVmLFxuICAgICAgX3JlZjIkZm9yd2FyZFJlZiA9IF9yZWYyLmZvcndhcmRSZWYsXG4gICAgICBmb3J3YXJkUmVmID0gX3JlZjIkZm9yd2FyZFJlZiA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmMiRmb3J3YXJkUmVmLFxuICAgICAgX3JlZjIkY29udGV4dCA9IF9yZWYyLmNvbnRleHQsXG4gICAgICBjb250ZXh0ID0gX3JlZjIkY29udGV4dCA9PT0gdm9pZCAwID8gUmVhY3RSZWR1eENvbnRleHQgOiBfcmVmMiRjb250ZXh0LFxuICAgICAgY29ubmVjdE9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiZ2V0RGlzcGxheU5hbWVcIiwgXCJtZXRob2ROYW1lXCIsIFwicmVuZGVyQ291bnRQcm9wXCIsIFwic2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzXCIsIFwic3RvcmVLZXlcIiwgXCJ3aXRoUmVmXCIsIFwiZm9yd2FyZFJlZlwiLCBcImNvbnRleHRcIl0pO1xuXG4gIGludmFyaWFudChyZW5kZXJDb3VudFByb3AgPT09IHVuZGVmaW5lZCwgXCJyZW5kZXJDb3VudFByb3AgaXMgcmVtb3ZlZC4gcmVuZGVyIGNvdW50aW5nIGlzIGJ1aWx0IGludG8gdGhlIGxhdGVzdCBSZWFjdCBkZXYgdG9vbHMgcHJvZmlsaW5nIGV4dGVuc2lvblwiKTtcbiAgaW52YXJpYW50KCF3aXRoUmVmLCAnd2l0aFJlZiBpcyByZW1vdmVkLiBUbyBhY2Nlc3MgdGhlIHdyYXBwZWQgaW5zdGFuY2UsIHVzZSBhIHJlZiBvbiB0aGUgY29ubmVjdGVkIGNvbXBvbmVudCcpO1xuICB2YXIgY3VzdG9tU3RvcmVXYXJuaW5nTWVzc2FnZSA9ICdUbyB1c2UgYSBjdXN0b20gUmVkdXggc3RvcmUgZm9yIHNwZWNpZmljIGNvbXBvbmVudHMsICBjcmVhdGUgYSBjdXN0b20gUmVhY3QgY29udGV4dCB3aXRoICcgKyBcIlJlYWN0LmNyZWF0ZUNvbnRleHQoKSwgYW5kIHBhc3MgdGhlIGNvbnRleHQgb2JqZWN0IHRvIFJlYWN0IFJlZHV4J3MgUHJvdmlkZXIgYW5kIHNwZWNpZmljIGNvbXBvbmVudHNcIiArICcgbGlrZTogIDxQcm92aWRlciBjb250ZXh0PXtNeUNvbnRleHR9PjxDb25uZWN0ZWRDb21wb25lbnQgY29udGV4dD17TXlDb250ZXh0fSAvPjwvUHJvdmlkZXI+LiAnICsgJ1lvdSBtYXkgYWxzbyBwYXNzIGEge2NvbnRleHQgOiBNeUNvbnRleHR9IG9wdGlvbiB0byBjb25uZWN0JztcbiAgaW52YXJpYW50KHN0b3JlS2V5ID09PSAnc3RvcmUnLCAnc3RvcmVLZXkgaGFzIGJlZW4gcmVtb3ZlZCBhbmQgZG9lcyBub3QgZG8gYW55dGhpbmcuICcgKyBjdXN0b21TdG9yZVdhcm5pbmdNZXNzYWdlKTtcbiAgdmFyIENvbnRleHQgPSBjb250ZXh0O1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcFdpdGhDb25uZWN0KFdyYXBwZWRDb21wb25lbnQpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaW52YXJpYW50KGlzVmFsaWRFbGVtZW50VHlwZShXcmFwcGVkQ29tcG9uZW50KSwgXCJZb3UgbXVzdCBwYXNzIGEgY29tcG9uZW50IHRvIHRoZSBmdW5jdGlvbiByZXR1cm5lZCBieSBcIiArIChtZXRob2ROYW1lICsgXCIuIEluc3RlYWQgcmVjZWl2ZWQgXCIgKyBzdHJpbmdpZnlDb21wb25lbnQoV3JhcHBlZENvbXBvbmVudCkpKTtcbiAgICB9XG5cbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudE5hbWUgPSBXcmFwcGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IFdyYXBwZWRDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50JztcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBnZXREaXNwbGF5TmFtZSh3cmFwcGVkQ29tcG9uZW50TmFtZSk7XG5cbiAgICB2YXIgc2VsZWN0b3JGYWN0b3J5T3B0aW9ucyA9IF9leHRlbmRzKHt9LCBjb25uZWN0T3B0aW9ucywge1xuICAgICAgZ2V0RGlzcGxheU5hbWU6IGdldERpc3BsYXlOYW1lLFxuICAgICAgbWV0aG9kTmFtZTogbWV0aG9kTmFtZSxcbiAgICAgIHJlbmRlckNvdW50UHJvcDogcmVuZGVyQ291bnRQcm9wLFxuICAgICAgc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzOiBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsXG4gICAgICBzdG9yZUtleTogc3RvcmVLZXksXG4gICAgICBkaXNwbGF5TmFtZTogZGlzcGxheU5hbWUsXG4gICAgICB3cmFwcGVkQ29tcG9uZW50TmFtZTogd3JhcHBlZENvbXBvbmVudE5hbWUsXG4gICAgICBXcmFwcGVkQ29tcG9uZW50OiBXcmFwcGVkQ29tcG9uZW50XG4gICAgfSk7XG5cbiAgICB2YXIgcHVyZSA9IGNvbm5lY3RPcHRpb25zLnB1cmU7XG4gICAgdmFyIE91dGVyQmFzZUNvbXBvbmVudCA9IENvbXBvbmVudDtcblxuICAgIGlmIChwdXJlKSB7XG4gICAgICBPdXRlckJhc2VDb21wb25lbnQgPSBQdXJlQ29tcG9uZW50O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1ha2VEZXJpdmVkUHJvcHNTZWxlY3RvcigpIHtcbiAgICAgIHZhciBsYXN0UHJvcHM7XG4gICAgICB2YXIgbGFzdFN0YXRlO1xuICAgICAgdmFyIGxhc3REZXJpdmVkUHJvcHM7XG4gICAgICB2YXIgbGFzdFN0b3JlO1xuICAgICAgdmFyIGxhc3RTZWxlY3RvckZhY3RvcnlPcHRpb25zO1xuICAgICAgdmFyIHNvdXJjZVNlbGVjdG9yO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIHNlbGVjdERlcml2ZWRQcm9wcyhzdGF0ZSwgcHJvcHMsIHN0b3JlLCBzZWxlY3RvckZhY3RvcnlPcHRpb25zKSB7XG4gICAgICAgIGlmIChwdXJlICYmIGxhc3RQcm9wcyA9PT0gcHJvcHMgJiYgbGFzdFN0YXRlID09PSBzdGF0ZSkge1xuICAgICAgICAgIHJldHVybiBsYXN0RGVyaXZlZFByb3BzO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHN0b3JlICE9PSBsYXN0U3RvcmUgfHwgbGFzdFNlbGVjdG9yRmFjdG9yeU9wdGlvbnMgIT09IHNlbGVjdG9yRmFjdG9yeU9wdGlvbnMpIHtcbiAgICAgICAgICBsYXN0U3RvcmUgPSBzdG9yZTtcbiAgICAgICAgICBsYXN0U2VsZWN0b3JGYWN0b3J5T3B0aW9ucyA9IHNlbGVjdG9yRmFjdG9yeU9wdGlvbnM7XG4gICAgICAgICAgc291cmNlU2VsZWN0b3IgPSBzZWxlY3RvckZhY3Rvcnkoc3RvcmUuZGlzcGF0Y2gsIHNlbGVjdG9yRmFjdG9yeU9wdGlvbnMpO1xuICAgICAgICB9XG5cbiAgICAgICAgbGFzdFByb3BzID0gcHJvcHM7XG4gICAgICAgIGxhc3RTdGF0ZSA9IHN0YXRlO1xuICAgICAgICB2YXIgbmV4dFByb3BzID0gc291cmNlU2VsZWN0b3Ioc3RhdGUsIHByb3BzKTtcbiAgICAgICAgbGFzdERlcml2ZWRQcm9wcyA9IG5leHRQcm9wcztcbiAgICAgICAgcmV0dXJuIGxhc3REZXJpdmVkUHJvcHM7XG4gICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1ha2VDaGlsZEVsZW1lbnRTZWxlY3RvcigpIHtcbiAgICAgIHZhciBsYXN0Q2hpbGRQcm9wcywgbGFzdEZvcndhcmRSZWYsIGxhc3RDaGlsZEVsZW1lbnQsIGxhc3RDb21wb25lbnQ7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gc2VsZWN0Q2hpbGRFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIGNoaWxkUHJvcHMsIGZvcndhcmRSZWYpIHtcbiAgICAgICAgaWYgKGNoaWxkUHJvcHMgIT09IGxhc3RDaGlsZFByb3BzIHx8IGZvcndhcmRSZWYgIT09IGxhc3RGb3J3YXJkUmVmIHx8IGxhc3RDb21wb25lbnQgIT09IFdyYXBwZWRDb21wb25lbnQpIHtcbiAgICAgICAgICBsYXN0Q2hpbGRQcm9wcyA9IGNoaWxkUHJvcHM7XG4gICAgICAgICAgbGFzdEZvcndhcmRSZWYgPSBmb3J3YXJkUmVmO1xuICAgICAgICAgIGxhc3RDb21wb25lbnQgPSBXcmFwcGVkQ29tcG9uZW50O1xuICAgICAgICAgIGxhc3RDaGlsZEVsZW1lbnQgPSBSZWFjdC5jcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIF9leHRlbmRzKHt9LCBjaGlsZFByb3BzLCB7XG4gICAgICAgICAgICByZWY6IGZvcndhcmRSZWZcbiAgICAgICAgICB9KSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbGFzdENoaWxkRWxlbWVudDtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgdmFyIENvbm5lY3QgPVxuICAgIC8qI19fUFVSRV9fKi9cbiAgICBmdW5jdGlvbiAoX091dGVyQmFzZUNvbXBvbmVudCkge1xuICAgICAgX2luaGVyaXRzTG9vc2UoQ29ubmVjdCwgX091dGVyQmFzZUNvbXBvbmVudCk7XG5cbiAgICAgIGZ1bmN0aW9uIENvbm5lY3QocHJvcHMpIHtcbiAgICAgICAgdmFyIF90aGlzO1xuXG4gICAgICAgIF90aGlzID0gX091dGVyQmFzZUNvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgICAgICBpbnZhcmlhbnQoZm9yd2FyZFJlZiA/ICFwcm9wcy53cmFwcGVyUHJvcHNbc3RvcmVLZXldIDogIXByb3BzW3N0b3JlS2V5XSwgJ1Bhc3NpbmcgcmVkdXggc3RvcmUgaW4gcHJvcHMgaGFzIGJlZW4gcmVtb3ZlZCBhbmQgZG9lcyBub3QgZG8gYW55dGhpbmcuICcgKyBjdXN0b21TdG9yZVdhcm5pbmdNZXNzYWdlKTtcbiAgICAgICAgX3RoaXMuc2VsZWN0RGVyaXZlZFByb3BzID0gbWFrZURlcml2ZWRQcm9wc1NlbGVjdG9yKCk7XG4gICAgICAgIF90aGlzLnNlbGVjdENoaWxkRWxlbWVudCA9IG1ha2VDaGlsZEVsZW1lbnRTZWxlY3RvcigpO1xuICAgICAgICBfdGhpcy5pbmRpcmVjdFJlbmRlcldyYXBwZWRDb21wb25lbnQgPSBfdGhpcy5pbmRpcmVjdFJlbmRlcldyYXBwZWRDb21wb25lbnQuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICAgIH1cblxuICAgICAgdmFyIF9wcm90byA9IENvbm5lY3QucHJvdG90eXBlO1xuXG4gICAgICBfcHJvdG8uaW5kaXJlY3RSZW5kZXJXcmFwcGVkQ29tcG9uZW50ID0gZnVuY3Rpb24gaW5kaXJlY3RSZW5kZXJXcmFwcGVkQ29tcG9uZW50KHZhbHVlKSB7XG4gICAgICAgIC8vIGNhbGxpbmcgcmVuZGVyV3JhcHBlZENvbXBvbmVudCBvbiBwcm90b3R5cGUgZnJvbSBpbmRpcmVjdFJlbmRlcldyYXBwZWRDb21wb25lbnQgYm91bmQgdG8gYHRoaXNgXG4gICAgICAgIHJldHVybiB0aGlzLnJlbmRlcldyYXBwZWRDb21wb25lbnQodmFsdWUpO1xuICAgICAgfTtcblxuICAgICAgX3Byb3RvLnJlbmRlcldyYXBwZWRDb21wb25lbnQgPSBmdW5jdGlvbiByZW5kZXJXcmFwcGVkQ29tcG9uZW50KHZhbHVlKSB7XG4gICAgICAgIGludmFyaWFudCh2YWx1ZSwgXCJDb3VsZCBub3QgZmluZCBcXFwic3RvcmVcXFwiIGluIHRoZSBjb250ZXh0IG9mIFwiICsgKFwiXFxcIlwiICsgZGlzcGxheU5hbWUgKyBcIlxcXCIuIEVpdGhlciB3cmFwIHRoZSByb290IGNvbXBvbmVudCBpbiBhIDxQcm92aWRlcj4sIFwiKSArIFwib3IgcGFzcyBhIGN1c3RvbSBSZWFjdCBjb250ZXh0IHByb3ZpZGVyIHRvIDxQcm92aWRlcj4gYW5kIHRoZSBjb3JyZXNwb25kaW5nIFwiICsgKFwiUmVhY3QgY29udGV4dCBjb25zdW1lciB0byBcIiArIGRpc3BsYXlOYW1lICsgXCIgaW4gY29ubmVjdCBvcHRpb25zLlwiKSk7XG4gICAgICAgIHZhciBzdG9yZVN0YXRlID0gdmFsdWUuc3RvcmVTdGF0ZSxcbiAgICAgICAgICAgIHN0b3JlID0gdmFsdWUuc3RvcmU7XG4gICAgICAgIHZhciB3cmFwcGVyUHJvcHMgPSB0aGlzLnByb3BzO1xuICAgICAgICB2YXIgZm9yd2FyZGVkUmVmO1xuXG4gICAgICAgIGlmIChmb3J3YXJkUmVmKSB7XG4gICAgICAgICAgd3JhcHBlclByb3BzID0gdGhpcy5wcm9wcy53cmFwcGVyUHJvcHM7XG4gICAgICAgICAgZm9yd2FyZGVkUmVmID0gdGhpcy5wcm9wcy5mb3J3YXJkZWRSZWY7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZGVyaXZlZFByb3BzID0gdGhpcy5zZWxlY3REZXJpdmVkUHJvcHMoc3RvcmVTdGF0ZSwgd3JhcHBlclByb3BzLCBzdG9yZSwgc2VsZWN0b3JGYWN0b3J5T3B0aW9ucyk7XG4gICAgICAgIHJldHVybiB0aGlzLnNlbGVjdENoaWxkRWxlbWVudChXcmFwcGVkQ29tcG9uZW50LCBkZXJpdmVkUHJvcHMsIGZvcndhcmRlZFJlZik7XG4gICAgICB9O1xuXG4gICAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICB2YXIgQ29udGV4dFRvVXNlID0gdGhpcy5wcm9wcy5jb250ZXh0ICYmIHRoaXMucHJvcHMuY29udGV4dC5Db25zdW1lciAmJiBpc0NvbnRleHRDb25zdW1lcihSZWFjdC5jcmVhdGVFbGVtZW50KHRoaXMucHJvcHMuY29udGV4dC5Db25zdW1lciwgbnVsbCkpID8gdGhpcy5wcm9wcy5jb250ZXh0IDogQ29udGV4dDtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGV4dFRvVXNlLkNvbnN1bWVyLCBudWxsLCB0aGlzLmluZGlyZWN0UmVuZGVyV3JhcHBlZENvbXBvbmVudCk7XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gQ29ubmVjdDtcbiAgICB9KE91dGVyQmFzZUNvbXBvbmVudCk7XG5cbiAgICBDb25uZWN0LldyYXBwZWRDb21wb25lbnQgPSBXcmFwcGVkQ29tcG9uZW50O1xuICAgIENvbm5lY3QuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcblxuICAgIGlmIChmb3J3YXJkUmVmKSB7XG4gICAgICB2YXIgZm9yd2FyZGVkID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBmb3J3YXJkQ29ubmVjdFJlZihwcm9wcywgcmVmKSB7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbm5lY3QsIHtcbiAgICAgICAgICB3cmFwcGVyUHJvcHM6IHByb3BzLFxuICAgICAgICAgIGZvcndhcmRlZFJlZjogcmVmXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICBmb3J3YXJkZWQuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgICAgIGZvcndhcmRlZC5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgICAgIHJldHVybiBob2lzdFN0YXRpY3MoZm9yd2FyZGVkLCBXcmFwcGVkQ29tcG9uZW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4gaG9pc3RTdGF0aWNzKENvbm5lY3QsIFdyYXBwZWRDb21wb25lbnQpO1xuICB9O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIHNlbGY7XG59IiwidmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkgcmV0dXJuIHRydWU7XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXNBLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFoYXNPd24uY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn0iLCJpbXBvcnQgdmVyaWZ5UGxhaW5PYmplY3QgZnJvbSAnLi4vdXRpbHMvdmVyaWZ5UGxhaW5PYmplY3QnO1xuZXhwb3J0IGZ1bmN0aW9uIHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZ2V0Q29uc3RhbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRDb25zdGFudFNlbGVjdG9yKGRpc3BhdGNoLCBvcHRpb25zKSB7XG4gICAgdmFyIGNvbnN0YW50ID0gZ2V0Q29uc3RhbnQoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuXG4gICAgZnVuY3Rpb24gY29uc3RhbnRTZWxlY3RvcigpIHtcbiAgICAgIHJldHVybiBjb25zdGFudDtcbiAgICB9XG5cbiAgICBjb25zdGFudFNlbGVjdG9yLmRlcGVuZHNPbk93blByb3BzID0gZmFsc2U7XG4gICAgcmV0dXJuIGNvbnN0YW50U2VsZWN0b3I7XG4gIH07XG59IC8vIGRlcGVuZHNPbk93blByb3BzIGlzIHVzZWQgYnkgY3JlYXRlTWFwVG9Qcm9wc1Byb3h5IHRvIGRldGVybWluZSB3aGV0aGVyIHRvIHBhc3MgcHJvcHMgYXMgYXJnc1xuLy8gdG8gdGhlIG1hcFRvUHJvcHMgZnVuY3Rpb24gYmVpbmcgd3JhcHBlZC4gSXQgaXMgYWxzbyB1c2VkIGJ5IG1ha2VQdXJlUHJvcHNTZWxlY3RvciB0byBkZXRlcm1pbmVcbi8vIHdoZXRoZXIgbWFwVG9Qcm9wcyBuZWVkcyB0byBiZSBpbnZva2VkIHdoZW4gcHJvcHMgaGF2ZSBjaGFuZ2VkLlxuLy9cbi8vIEEgbGVuZ3RoIG9mIG9uZSBzaWduYWxzIHRoYXQgbWFwVG9Qcm9wcyBkb2VzIG5vdCBkZXBlbmQgb24gcHJvcHMgZnJvbSB0aGUgcGFyZW50IGNvbXBvbmVudC5cbi8vIEEgbGVuZ3RoIG9mIHplcm8gaXMgYXNzdW1lZCB0byBtZWFuIG1hcFRvUHJvcHMgaXMgZ2V0dGluZyBhcmdzIHZpYSBhcmd1bWVudHMgb3IgLi4uYXJncyBhbmRcbi8vIHRoZXJlZm9yZSBub3QgcmVwb3J0aW5nIGl0cyBsZW5ndGggYWNjdXJhdGVseS4uXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREZXBlbmRzT25Pd25Qcm9wcyhtYXBUb1Byb3BzKSB7XG4gIHJldHVybiBtYXBUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzICE9PSBudWxsICYmIG1hcFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMgIT09IHVuZGVmaW5lZCA/IEJvb2xlYW4obWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgOiBtYXBUb1Byb3BzLmxlbmd0aCAhPT0gMTtcbn0gLy8gVXNlZCBieSB3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbiBhbmQgd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24sXG4vLyB0aGlzIGZ1bmN0aW9uIHdyYXBzIG1hcFRvUHJvcHMgaW4gYSBwcm94eSBmdW5jdGlvbiB3aGljaCBkb2VzIHNldmVyYWwgdGhpbmdzOlxuLy9cbi8vICAqIERldGVjdHMgd2hldGhlciB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyBjYWxsZWQgZGVwZW5kcyBvbiBwcm9wcywgd2hpY2hcbi8vICAgIGlzIHVzZWQgYnkgc2VsZWN0b3JGYWN0b3J5IHRvIGRlY2lkZSBpZiBpdCBzaG91bGQgcmVpbnZva2Ugb24gcHJvcHMgY2hhbmdlcy5cbi8vXG4vLyAgKiBPbiBmaXJzdCBjYWxsLCBoYW5kbGVzIG1hcFRvUHJvcHMgaWYgcmV0dXJucyBhbm90aGVyIGZ1bmN0aW9uLCBhbmQgdHJlYXRzIHRoYXRcbi8vICAgIG5ldyBmdW5jdGlvbiBhcyB0aGUgdHJ1ZSBtYXBUb1Byb3BzIGZvciBzdWJzZXF1ZW50IGNhbGxzLlxuLy9cbi8vICAqIE9uIGZpcnN0IGNhbGwsIHZlcmlmaWVzIHRoZSBmaXJzdCByZXN1bHQgaXMgYSBwbGFpbiBvYmplY3QsIGluIG9yZGVyIHRvIHdhcm5cbi8vICAgIHRoZSBkZXZlbG9wZXIgdGhhdCB0aGVpciBtYXBUb1Byb3BzIGZ1bmN0aW9uIGlzIG5vdCByZXR1cm5pbmcgYSB2YWxpZCByZXN1bHQuXG4vL1xuXG5leHBvcnQgZnVuY3Rpb24gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcFRvUHJvcHMsIG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRQcm94eVNlbGVjdG9yKGRpc3BhdGNoLCBfcmVmKSB7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gX3JlZi5kaXNwbGF5TmFtZTtcblxuICAgIHZhciBwcm94eSA9IGZ1bmN0aW9uIG1hcFRvUHJvcHNQcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKSB7XG4gICAgICByZXR1cm4gcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPyBwcm94eS5tYXBUb1Byb3BzKHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIDogcHJveHkubWFwVG9Qcm9wcyhzdGF0ZU9yRGlzcGF0Y2gpO1xuICAgIH07IC8vIGFsbG93IGRldGVjdEZhY3RvcnlBbmRWZXJpZnkgdG8gZ2V0IG93blByb3BzXG5cblxuICAgIHByb3h5LmRlcGVuZHNPbk93blByb3BzID0gdHJ1ZTtcblxuICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBmdW5jdGlvbiBkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIHtcbiAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBtYXBUb1Byb3BzO1xuICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhtYXBUb1Byb3BzKTtcbiAgICAgIHZhciBwcm9wcyA9IHByb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpO1xuXG4gICAgICBpZiAodHlwZW9mIHByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBwcm9wcztcbiAgICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhwcm9wcyk7XG4gICAgICAgIHByb3BzID0gcHJveHkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB2ZXJpZnlQbGFpbk9iamVjdChwcm9wcywgZGlzcGxheU5hbWUsIG1ldGhvZE5hbWUpO1xuICAgICAgcmV0dXJuIHByb3BzO1xuICAgIH07XG5cbiAgICByZXR1cm4gcHJveHk7XG4gIH07XG59IiwiaW1wb3J0IHsgYmluZEFjdGlvbkNyZWF0b3JzIH0gZnJvbSAncmVkdXgnO1xuaW1wb3J0IHsgd3JhcE1hcFRvUHJvcHNDb25zdGFudCwgd3JhcE1hcFRvUHJvcHNGdW5jIH0gZnJvbSAnLi93cmFwTWFwVG9Qcm9wcyc7XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24obWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiB0eXBlb2YgbWFwRGlzcGF0Y2hUb1Byb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcERpc3BhdGNoVG9Qcm9wcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiAhbWFwRGlzcGF0Y2hUb1Byb3BzID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoZGlzcGF0Y2gpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZGlzcGF0Y2g6IGRpc3BhdGNoXG4gICAgfTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzT2JqZWN0KG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gbWFwRGlzcGF0Y2hUb1Byb3BzICYmIHR5cGVvZiBtYXBEaXNwYXRjaFRvUHJvcHMgPT09ICdvYmplY3QnID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoZGlzcGF0Y2gpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3JzKG1hcERpc3BhdGNoVG9Qcm9wcywgZGlzcGF0Y2gpO1xuICB9KSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbiwgd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzTWlzc2luZywgd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzT2JqZWN0XTsiLCJpbXBvcnQgeyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50LCB3cmFwTWFwVG9Qcm9wc0Z1bmMgfSBmcm9tICcuL3dyYXBNYXBUb1Byb3BzJztcbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbihtYXBTdGF0ZVRvUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtYXBTdGF0ZVRvUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwU3RhdGVUb1Byb3BzLCAnbWFwU3RhdGVUb1Byb3BzJykgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcFN0YXRlVG9Qcm9wc0lzTWlzc2luZyhtYXBTdGF0ZVRvUHJvcHMpIHtcbiAgcmV0dXJuICFtYXBTdGF0ZVRvUHJvcHMgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge307XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGRlZmF1bHQgW3doZW5NYXBTdGF0ZVRvUHJvcHNJc0Z1bmN0aW9uLCB3aGVuTWFwU3RhdGVUb1Byb3BzSXNNaXNzaW5nXTsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCB2ZXJpZnlQbGFpbk9iamVjdCBmcm9tICcuLi91dGlscy92ZXJpZnlQbGFpbk9iamVjdCc7XG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdE1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpIHtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBvd25Qcm9wcywgc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRNZXJnZVByb3BzUHJveHkoZGlzcGF0Y2gsIF9yZWYpIHtcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lLFxuICAgICAgICBwdXJlID0gX3JlZi5wdXJlLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZi5hcmVNZXJnZWRQcm9wc0VxdWFsO1xuICAgIHZhciBoYXNSdW5PbmNlID0gZmFsc2U7XG4gICAgdmFyIG1lcmdlZFByb3BzO1xuICAgIHJldHVybiBmdW5jdGlvbiBtZXJnZVByb3BzUHJveHkoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpIHtcbiAgICAgIHZhciBuZXh0TWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcblxuICAgICAgaWYgKGhhc1J1bk9uY2UpIHtcbiAgICAgICAgaWYgKCFwdXJlIHx8ICFhcmVNZXJnZWRQcm9wc0VxdWFsKG5leHRNZXJnZWRQcm9wcywgbWVyZ2VkUHJvcHMpKSBtZXJnZWRQcm9wcyA9IG5leHRNZXJnZWRQcm9wcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGhhc1J1bk9uY2UgPSB0cnVlO1xuICAgICAgICBtZXJnZWRQcm9wcyA9IG5leHRNZXJnZWRQcm9wcztcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHZlcmlmeVBsYWluT2JqZWN0KG1lcmdlZFByb3BzLCBkaXNwbGF5TmFtZSwgJ21lcmdlUHJvcHMnKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICAgIH07XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1lcmdlUHJvcHNJc0Z1bmN0aW9uKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtZXJnZVByb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NZXJnZVByb3BzSXNPbWl0dGVkKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuICFtZXJnZVByb3BzID8gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkZWZhdWx0TWVyZ2VQcm9wcztcbiAgfSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWVyZ2VQcm9wc0lzRnVuY3Rpb24sIHdoZW5NZXJnZVByb3BzSXNPbWl0dGVkXTsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCB2ZXJpZnlTdWJzZWxlY3RvcnMgZnJvbSAnLi92ZXJpZnlTdWJzZWxlY3RvcnMnO1xuZXhwb3J0IGZ1bmN0aW9uIGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3Ioc3RhdGUsIG93blByb3BzKSB7XG4gICAgcmV0dXJuIG1lcmdlUHJvcHMobWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyksIG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpLCBvd25Qcm9wcyk7XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoLCBfcmVmKSB7XG4gIHZhciBhcmVTdGF0ZXNFcXVhbCA9IF9yZWYuYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsID0gX3JlZi5hcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsID0gX3JlZi5hcmVTdGF0ZVByb3BzRXF1YWw7XG4gIHZhciBoYXNSdW5BdExlYXN0T25jZSA9IGZhbHNlO1xuICB2YXIgc3RhdGU7XG4gIHZhciBvd25Qcm9wcztcbiAgdmFyIHN0YXRlUHJvcHM7XG4gIHZhciBkaXNwYXRjaFByb3BzO1xuICB2YXIgbWVyZ2VkUHJvcHM7XG5cbiAgZnVuY3Rpb24gaGFuZGxlRmlyc3RDYWxsKGZpcnN0U3RhdGUsIGZpcnN0T3duUHJvcHMpIHtcbiAgICBzdGF0ZSA9IGZpcnN0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBmaXJzdE93blByb3BzO1xuICAgIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgbWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcbiAgICBoYXNSdW5BdExlYXN0T25jZSA9IHRydWU7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3UHJvcHNBbmROZXdTdGF0ZSgpIHtcbiAgICBzdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG4gICAgaWYgKG1hcERpc3BhdGNoVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgZGlzcGF0Y2hQcm9wcyA9IG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpO1xuICAgIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3UHJvcHMoKSB7XG4gICAgaWYgKG1hcFN0YXRlVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgc3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIGlmIChtYXBEaXNwYXRjaFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIGRpc3BhdGNoUHJvcHMgPSBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKTtcbiAgICBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld1N0YXRlKCkge1xuICAgIHZhciBuZXh0U3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIHZhciBzdGF0ZVByb3BzQ2hhbmdlZCA9ICFhcmVTdGF0ZVByb3BzRXF1YWwobmV4dFN0YXRlUHJvcHMsIHN0YXRlUHJvcHMpO1xuICAgIHN0YXRlUHJvcHMgPSBuZXh0U3RhdGVQcm9wcztcbiAgICBpZiAoc3RhdGVQcm9wc0NoYW5nZWQpIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlU3Vic2VxdWVudENhbGxzKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSB7XG4gICAgdmFyIHByb3BzQ2hhbmdlZCA9ICFhcmVPd25Qcm9wc0VxdWFsKG5leHRPd25Qcm9wcywgb3duUHJvcHMpO1xuICAgIHZhciBzdGF0ZUNoYW5nZWQgPSAhYXJlU3RhdGVzRXF1YWwobmV4dFN0YXRlLCBzdGF0ZSk7XG4gICAgc3RhdGUgPSBuZXh0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBuZXh0T3duUHJvcHM7XG4gICAgaWYgKHByb3BzQ2hhbmdlZCAmJiBzdGF0ZUNoYW5nZWQpIHJldHVybiBoYW5kbGVOZXdQcm9wc0FuZE5ld1N0YXRlKCk7XG4gICAgaWYgKHByb3BzQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1Byb3BzKCk7XG4gICAgaWYgKHN0YXRlQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1N0YXRlKCk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHB1cmVGaW5hbFByb3BzU2VsZWN0b3IobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpIHtcbiAgICByZXR1cm4gaGFzUnVuQXRMZWFzdE9uY2UgPyBoYW5kbGVTdWJzZXF1ZW50Q2FsbHMobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpIDogaGFuZGxlRmlyc3RDYWxsKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKTtcbiAgfTtcbn0gLy8gVE9ETzogQWRkIG1vcmUgY29tbWVudHNcbi8vIElmIHB1cmUgaXMgdHJ1ZSwgdGhlIHNlbGVjdG9yIHJldHVybmVkIGJ5IHNlbGVjdG9yRmFjdG9yeSB3aWxsIG1lbW9pemUgaXRzIHJlc3VsdHMsXG4vLyBhbGxvd2luZyBjb25uZWN0QWR2YW5jZWQncyBzaG91bGRDb21wb25lbnRVcGRhdGUgdG8gcmV0dXJuIGZhbHNlIGlmIGZpbmFsXG4vLyBwcm9wcyBoYXZlIG5vdCBjaGFuZ2VkLiBJZiBmYWxzZSwgdGhlIHNlbGVjdG9yIHdpbGwgYWx3YXlzIHJldHVybiBhIG5ld1xuLy8gb2JqZWN0IGFuZCBzaG91bGRDb21wb25lbnRVcGRhdGUgd2lsbCBhbHdheXMgcmV0dXJuIHRydWUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkoZGlzcGF0Y2gsIF9yZWYyKSB7XG4gIHZhciBpbml0TWFwU3RhdGVUb1Byb3BzID0gX3JlZjIuaW5pdE1hcFN0YXRlVG9Qcm9wcyxcbiAgICAgIGluaXRNYXBEaXNwYXRjaFRvUHJvcHMgPSBfcmVmMi5pbml0TWFwRGlzcGF0Y2hUb1Byb3BzLFxuICAgICAgaW5pdE1lcmdlUHJvcHMgPSBfcmVmMi5pbml0TWVyZ2VQcm9wcyxcbiAgICAgIG9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiaW5pdE1hcFN0YXRlVG9Qcm9wc1wiLCBcImluaXRNYXBEaXNwYXRjaFRvUHJvcHNcIiwgXCJpbml0TWVyZ2VQcm9wc1wiXSk7XG5cbiAgdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGluaXRNYXBTdGF0ZVRvUHJvcHMoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuICB2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3B0aW9ucyk7XG4gIHZhciBtZXJnZVByb3BzID0gaW5pdE1lcmdlUHJvcHMoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdmVyaWZ5U3Vic2VsZWN0b3JzKG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBvcHRpb25zLmRpc3BsYXlOYW1lKTtcbiAgfVxuXG4gIHZhciBzZWxlY3RvckZhY3RvcnkgPSBvcHRpb25zLnB1cmUgPyBwdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeSA6IGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3Rvcnk7XG4gIHJldHVybiBzZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoLCBvcHRpb25zKTtcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IGNvbm5lY3RBZHZhbmNlZCBmcm9tICcuLi9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZCc7XG5pbXBvcnQgc2hhbGxvd0VxdWFsIGZyb20gJy4uL3V0aWxzL3NoYWxsb3dFcXVhbCc7XG5pbXBvcnQgZGVmYXVsdE1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyBmcm9tICcuL21hcERpc3BhdGNoVG9Qcm9wcyc7XG5pbXBvcnQgZGVmYXVsdE1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyBmcm9tICcuL21hcFN0YXRlVG9Qcm9wcyc7XG5pbXBvcnQgZGVmYXVsdE1lcmdlUHJvcHNGYWN0b3JpZXMgZnJvbSAnLi9tZXJnZVByb3BzJztcbmltcG9ydCBkZWZhdWx0U2VsZWN0b3JGYWN0b3J5IGZyb20gJy4vc2VsZWN0b3JGYWN0b3J5Jztcbi8qXG4gIGNvbm5lY3QgaXMgYSBmYWNhZGUgb3ZlciBjb25uZWN0QWR2YW5jZWQuIEl0IHR1cm5zIGl0cyBhcmdzIGludG8gYSBjb21wYXRpYmxlXG4gIHNlbGVjdG9yRmFjdG9yeSwgd2hpY2ggaGFzIHRoZSBzaWduYXR1cmU6XG5cbiAgICAoZGlzcGF0Y2gsIG9wdGlvbnMpID0+IChuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykgPT4gbmV4dEZpbmFsUHJvcHNcbiAgXG4gIGNvbm5lY3QgcGFzc2VzIGl0cyBhcmdzIHRvIGNvbm5lY3RBZHZhbmNlZCBhcyBvcHRpb25zLCB3aGljaCB3aWxsIGluIHR1cm4gcGFzcyB0aGVtIHRvXG4gIHNlbGVjdG9yRmFjdG9yeSBlYWNoIHRpbWUgYSBDb25uZWN0IGNvbXBvbmVudCBpbnN0YW5jZSBpcyBpbnN0YW50aWF0ZWQgb3IgaG90IHJlbG9hZGVkLlxuXG4gIHNlbGVjdG9yRmFjdG9yeSByZXR1cm5zIGEgZmluYWwgcHJvcHMgc2VsZWN0b3IgZnJvbSBpdHMgbWFwU3RhdGVUb1Byb3BzLFxuICBtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLCBtZXJnZVByb3BzLFxuICBtZXJnZVByb3BzRmFjdG9yaWVzLCBhbmQgcHVyZSBhcmdzLlxuXG4gIFRoZSByZXN1bHRpbmcgZmluYWwgcHJvcHMgc2VsZWN0b3IgaXMgY2FsbGVkIGJ5IHRoZSBDb25uZWN0IGNvbXBvbmVudCBpbnN0YW5jZSB3aGVuZXZlclxuICBpdCByZWNlaXZlcyBuZXcgcHJvcHMgb3Igc3RvcmUgc3RhdGUuXG4gKi9cblxuZnVuY3Rpb24gbWF0Y2goYXJnLCBmYWN0b3JpZXMsIG5hbWUpIHtcbiAgZm9yICh2YXIgaSA9IGZhY3Rvcmllcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIHZhciByZXN1bHQgPSBmYWN0b3JpZXNbaV0oYXJnKTtcbiAgICBpZiAocmVzdWx0KSByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChkaXNwYXRjaCwgb3B0aW9ucykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdmFsdWUgb2YgdHlwZSBcIiArIHR5cGVvZiBhcmcgKyBcIiBmb3IgXCIgKyBuYW1lICsgXCIgYXJndW1lbnQgd2hlbiBjb25uZWN0aW5nIGNvbXBvbmVudCBcIiArIG9wdGlvbnMud3JhcHBlZENvbXBvbmVudE5hbWUgKyBcIi5cIik7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0cmljdEVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEgPT09IGI7XG59IC8vIGNyZWF0ZUNvbm5lY3Qgd2l0aCBkZWZhdWx0IGFyZ3MgYnVpbGRzIHRoZSAnb2ZmaWNpYWwnIGNvbm5lY3QgYmVoYXZpb3IuIENhbGxpbmcgaXQgd2l0aFxuLy8gZGlmZmVyZW50IG9wdGlvbnMgb3BlbnMgdXAgc29tZSB0ZXN0aW5nIGFuZCBleHRlbnNpYmlsaXR5IHNjZW5hcmlvc1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0KF90ZW1wKSB7XG4gIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBfcmVmJGNvbm5lY3RIT0MgPSBfcmVmLmNvbm5lY3RIT0MsXG4gICAgICBjb25uZWN0SE9DID0gX3JlZiRjb25uZWN0SE9DID09PSB2b2lkIDAgPyBjb25uZWN0QWR2YW5jZWQgOiBfcmVmJGNvbm5lY3RIT0MsXG4gICAgICBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YgPSBfcmVmLm1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWFwU3RhdGVUb1Byb3BzRiA9PT0gdm9pZCAwID8gZGVmYXVsdE1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyA6IF9yZWYkbWFwU3RhdGVUb1Byb3BzRixcbiAgICAgIF9yZWYkbWFwRGlzcGF0Y2hUb1BybyA9IF9yZWYubWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLFxuICAgICAgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzID0gX3JlZiRtYXBEaXNwYXRjaFRvUHJvID09PSB2b2lkIDAgPyBkZWZhdWx0TWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIDogX3JlZiRtYXBEaXNwYXRjaFRvUHJvLFxuICAgICAgX3JlZiRtZXJnZVByb3BzRmFjdG9yID0gX3JlZi5tZXJnZVByb3BzRmFjdG9yaWVzLFxuICAgICAgbWVyZ2VQcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWVyZ2VQcm9wc0ZhY3RvciA9PT0gdm9pZCAwID8gZGVmYXVsdE1lcmdlUHJvcHNGYWN0b3JpZXMgOiBfcmVmJG1lcmdlUHJvcHNGYWN0b3IsXG4gICAgICBfcmVmJHNlbGVjdG9yRmFjdG9yeSA9IF9yZWYuc2VsZWN0b3JGYWN0b3J5LFxuICAgICAgc2VsZWN0b3JGYWN0b3J5ID0gX3JlZiRzZWxlY3RvckZhY3RvcnkgPT09IHZvaWQgMCA/IGRlZmF1bHRTZWxlY3RvckZhY3RvcnkgOiBfcmVmJHNlbGVjdG9yRmFjdG9yeTtcblxuICByZXR1cm4gZnVuY3Rpb24gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgX3JlZjIpIHtcbiAgICBpZiAoX3JlZjIgPT09IHZvaWQgMCkge1xuICAgICAgX3JlZjIgPSB7fTtcbiAgICB9XG5cbiAgICB2YXIgX3JlZjMgPSBfcmVmMixcbiAgICAgICAgX3JlZjMkcHVyZSA9IF9yZWYzLnB1cmUsXG4gICAgICAgIHB1cmUgPSBfcmVmMyRwdXJlID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZjMkcHVyZSxcbiAgICAgICAgX3JlZjMkYXJlU3RhdGVzRXF1YWwgPSBfcmVmMy5hcmVTdGF0ZXNFcXVhbCxcbiAgICAgICAgYXJlU3RhdGVzRXF1YWwgPSBfcmVmMyRhcmVTdGF0ZXNFcXVhbCA9PT0gdm9pZCAwID8gc3RyaWN0RXF1YWwgOiBfcmVmMyRhcmVTdGF0ZXNFcXVhbCxcbiAgICAgICAgX3JlZjMkYXJlT3duUHJvcHNFcXVhID0gX3JlZjMuYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgICAgYXJlT3duUHJvcHNFcXVhbCA9IF9yZWYzJGFyZU93blByb3BzRXF1YSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlT3duUHJvcHNFcXVhLFxuICAgICAgICBfcmVmMyRhcmVTdGF0ZVByb3BzRXEgPSBfcmVmMy5hcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbCA9IF9yZWYzJGFyZVN0YXRlUHJvcHNFcSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlU3RhdGVQcm9wc0VxLFxuICAgICAgICBfcmVmMyRhcmVNZXJnZWRQcm9wc0UgPSBfcmVmMy5hcmVNZXJnZWRQcm9wc0VxdWFsLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZjMkYXJlTWVyZ2VkUHJvcHNFID09PSB2b2lkIDAgPyBzaGFsbG93RXF1YWwgOiBfcmVmMyRhcmVNZXJnZWRQcm9wc0UsXG4gICAgICAgIGV4dHJhT3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYzLCBbXCJwdXJlXCIsIFwiYXJlU3RhdGVzRXF1YWxcIiwgXCJhcmVPd25Qcm9wc0VxdWFsXCIsIFwiYXJlU3RhdGVQcm9wc0VxdWFsXCIsIFwiYXJlTWVyZ2VkUHJvcHNFcXVhbFwiXSk7XG5cbiAgICB2YXIgaW5pdE1hcFN0YXRlVG9Qcm9wcyA9IG1hdGNoKG1hcFN0YXRlVG9Qcm9wcywgbWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzLCAnbWFwU3RhdGVUb1Byb3BzJyk7XG4gICAgdmFyIGluaXRNYXBEaXNwYXRjaFRvUHJvcHMgPSBtYXRjaChtYXBEaXNwYXRjaFRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpO1xuICAgIHZhciBpbml0TWVyZ2VQcm9wcyA9IG1hdGNoKG1lcmdlUHJvcHMsIG1lcmdlUHJvcHNGYWN0b3JpZXMsICdtZXJnZVByb3BzJyk7XG4gICAgcmV0dXJuIGNvbm5lY3RIT0Moc2VsZWN0b3JGYWN0b3J5LCBfZXh0ZW5kcyh7XG4gICAgICAvLyB1c2VkIGluIGVycm9yIG1lc3NhZ2VzXG4gICAgICBtZXRob2ROYW1lOiAnY29ubmVjdCcsXG4gICAgICAvLyB1c2VkIHRvIGNvbXB1dGUgQ29ubmVjdCdzIGRpc3BsYXlOYW1lIGZyb20gdGhlIHdyYXBwZWQgY29tcG9uZW50J3MgZGlzcGxheU5hbWUuXG4gICAgICBnZXREaXNwbGF5TmFtZTogZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWUobmFtZSkge1xuICAgICAgICByZXR1cm4gXCJDb25uZWN0KFwiICsgbmFtZSArIFwiKVwiO1xuICAgICAgfSxcbiAgICAgIC8vIGlmIG1hcFN0YXRlVG9Qcm9wcyBpcyBmYWxzeSwgdGhlIENvbm5lY3QgY29tcG9uZW50IGRvZXNuJ3Qgc3Vic2NyaWJlIHRvIHN0b3JlIHN0YXRlIGNoYW5nZXNcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlczogQm9vbGVhbihtYXBTdGF0ZVRvUHJvcHMpLFxuICAgICAgLy8gcGFzc2VkIHRocm91Z2ggdG8gc2VsZWN0b3JGYWN0b3J5XG4gICAgICBpbml0TWFwU3RhdGVUb1Byb3BzOiBpbml0TWFwU3RhdGVUb1Byb3BzLFxuICAgICAgaW5pdE1hcERpc3BhdGNoVG9Qcm9wczogaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzOiBpbml0TWVyZ2VQcm9wcyxcbiAgICAgIHB1cmU6IHB1cmUsXG4gICAgICBhcmVTdGF0ZXNFcXVhbDogYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsOiBhcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsOiBhcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsOiBhcmVNZXJnZWRQcm9wc0VxdWFsXG4gICAgfSwgZXh0cmFPcHRpb25zKSk7XG4gIH07XG59XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDb25uZWN0KCk7IiwiaW1wb3J0IFByb3ZpZGVyIGZyb20gJy4vY29tcG9uZW50cy9Qcm92aWRlcic7XG5pbXBvcnQgY29ubmVjdEFkdmFuY2VkIGZyb20gJy4vY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL2NvbXBvbmVudHMvQ29udGV4dCc7XG5pbXBvcnQgY29ubmVjdCBmcm9tICcuL2Nvbm5lY3QvY29ubmVjdCc7XG5leHBvcnQgeyBQcm92aWRlciwgY29ubmVjdEFkdmFuY2VkLCBSZWFjdFJlZHV4Q29udGV4dCwgY29ubmVjdCB9OyIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIi8qIGdsb2JhbCB3aW5kb3cgKi9cbmltcG9ydCBwb255ZmlsbCBmcm9tICcuL3BvbnlmaWxsLmpzJztcblxudmFyIHJvb3Q7XG5cbmlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IHNlbGY7XG59IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSB3aW5kb3c7XG59IGVsc2UgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBnbG9iYWw7XG59IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBtb2R1bGU7XG59IGVsc2Uge1xuICByb290ID0gRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbn1cblxudmFyIHJlc3VsdCA9IHBvbnlmaWxsKHJvb3QpO1xuZXhwb3J0IGRlZmF1bHQgcmVzdWx0O1xuIiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsTW9kdWxlKSB7XG5cdGlmICghb3JpZ2luYWxNb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XG5cdFx0dmFyIG1vZHVsZSA9IE9iamVjdC5jcmVhdGUob3JpZ2luYWxNb2R1bGUpO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImV4cG9ydHNcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZVxuXHRcdH0pO1xuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xuXHR9XG5cdHJldHVybiBtb2R1bGU7XG59O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuICdAbWVkaWEgJyArIGl0ZW1bMl0gKyAneycgKyBjb250ZW50ICsgJ30nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IG1vZHVsZXNbaV07IC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcbiAgICAgIC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG4gICAgICAvLyB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG4gICAgICAvLyBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cbiAgICAgIGlmIChpdGVtWzBdID09IG51bGwgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgaWYgKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgaXRlbVsyXSA9ICcoJyArIGl0ZW1bMl0gKyAnKSBhbmQgKCcgKyBtZWRpYVF1ZXJ5ICsgJyknO1xuICAgICAgICB9XG5cbiAgICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuICByZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufSIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0LCBwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCl7XG4gICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gIH1cbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQsIHBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0LCBwYXJlbnQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEF0LmJlZm9yZSwgdGFyZ2V0KTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRpZihvcHRpb25zLmF0dHJzLm5vbmNlID09PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuXHRcdGlmIChub25jZSkge1xuXHRcdFx0b3B0aW9ucy5hdHRycy5ub25jZSA9IG5vbmNlO1xuXHRcdH1cblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGdldE5vbmNlKCkge1xuXHRpZiAodHlwZW9mIF9fd2VicGFja19ub25jZV9fID09PSAndW5kZWZpbmVkJykge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIF9fd2VicGFja19ub25jZV9fO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdCA/IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpIFxuXHRcdCA6IG9wdGlvbnMudHJhbnNmb3JtLmRlZmF1bHQob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN5bWJvbE9ic2VydmFibGVQb255ZmlsbChyb290KSB7XG5cdHZhciByZXN1bHQ7XG5cdHZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxuXHRpZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdGlmIChTeW1ib2wub2JzZXJ2YWJsZSkge1xuXHRcdFx0cmVzdWx0ID0gU3ltYm9sLm9ic2VydmFibGU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbCgnb2JzZXJ2YWJsZScpO1xuXHRcdFx0U3ltYm9sLm9ic2VydmFibGUgPSByZXN1bHQ7XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHJlc3VsdCA9ICdAQG9ic2VydmFibGUnO1xuXHR9XG5cblx0cmV0dXJuIHJlc3VsdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9pbXBsZW1lbnRhdGlvbiA9IHJlcXVpcmUoJy4vaW1wbGVtZW50YXRpb24nKTtcblxudmFyIF9pbXBsZW1lbnRhdGlvbjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pbXBsZW1lbnRhdGlvbik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVDb250ZXh0IHx8IF9pbXBsZW1lbnRhdGlvbjIuZGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0J1xuXG52YXIgaGFzV2luZG93ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG5cbmlmICghbW9kdWxlLmhvdCB8fCBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nIHx8ICFoYXNXaW5kb3cpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvcmVhY3QtaG90LWxvYWRlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgdmFyIGV2YWxBbGxvd2VkID0gZmFsc2U7XG4gIHRyeSB7XG4gICAgZXZhbCgnZXZhbEFsbG93ZWQgPSB0cnVlJyk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBldmFsIG5vdCBhbGxvd2VkIGR1ZSB0byBDU1BcbiAgfVxuXG4gIC8vIFJITCBuZWVkcyBzZXRQcm90b3R5cGVPZiB0byBvcGVyYXRlIENvbXBvbmVudCBpbmhlcml0YW5jZSwgYW5kIGV2YWwgdG8gcGF0Y2ggbWV0aG9kc1xuICB2YXIganNGZWF0dXJlc1ByZXNlbnQgPSAhIU9iamVjdC5zZXRQcm90b3R5cGVPZjtcblxuICBpZiAoIWpzRmVhdHVyZXNQcmVzZW50IHx8ICFldmFsQWxsb3dlZCkge1xuICAgIC8vIHdlIGFyZSBub3QgaW4gcHJvZCBtb2RlLCBidXQgUkhMIGNvdWxkIG5vdCBiZSBhY3RpdmF0ZWRcbiAgICBjb25zb2xlLndhcm4oJ1JlYWN0LUhvdC1Mb2FkZXIgaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGVudmlyb25tZW50LicpO1xuICAgIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L3JlYWN0LWhvdC1sb2FkZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbiAgfSBlbHNlIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHdpbmRvdy5yZWFjdEhvdExvYWRlckdsb2JhbCA9IHJlcXVpcmUoJy4vZGlzdC9yZWFjdC1ob3QtbG9hZGVyLmRldmVsb3BtZW50LmpzJyk7XG4gIH1cbn0iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSx5PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHo9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsYWE9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LGJhPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gY2EoYSxiLGQsYyxlLGcsaCxmKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bZCxjLGUsZyxoLGZdLG09MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW20rK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiBCKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZD1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0wO2M8YjtjKyspZCs9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7Y2EoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixkKX12YXIgQz17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRD17fTtcbmZ1bmN0aW9uIEUoYSxiLGQpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZHx8Q31FLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0UucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT9CKFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07RS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRigpe31GLnByb3RvdHlwZT1FLnByb3RvdHlwZTtmdW5jdGlvbiBHKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9dmFyIEg9Ry5wcm90b3R5cGU9bmV3IEY7XG5ILmNvbnN0cnVjdG9yPUc7ayhILEUucHJvdG90eXBlKTtILmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBJPXtjdXJyZW50Om51bGx9LEo9e2N1cnJlbnQ6bnVsbH0sSz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGQpe3ZhciBjPXZvaWQgMCxlPXt9LGc9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoYyBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGMpJiYhTC5oYXNPd25Qcm9wZXJ0eShjKSYmKGVbY109YltjXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWUuY2hpbGRyZW49ZDtlbHNlIGlmKDE8Zil7Zm9yKHZhciBsPUFycmF5KGYpLG09MDttPGY7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1sfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihjIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1lW2NdJiYoZVtjXT1mW2NdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmgscHJvcHM6ZSxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIGRhKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGQsYyl7aWYoUC5sZW5ndGgpe3ZhciBlPVAucG9wKCk7ZS5yZXN1bHQ9YTtlLmtleVByZWZpeD1iO2UuZnVuYz1kO2UuY29udGV4dD1jO2UuY291bnQ9MDtyZXR1cm4gZX1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpkLGNvbnRleHQ6Yyxjb3VudDowfX1cbmZ1bmN0aW9uIFIoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5QLmxlbmd0aCYmUC5wdXNoKGEpfVxuZnVuY3Rpb24gUyhhLGIsZCxjKXt2YXIgZT10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZXx8XCJib29sZWFuXCI9PT1lKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gZChjLGEsXCJcIj09PWI/XCIuXCIrVChhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaD0wO2g8YS5sZW5ndGg7aCsrKXtlPWFbaF07dmFyIGY9YitUKGUsaCk7Zys9UyhlLGYsZCxjKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUEmJmFbQV18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaD1cbjA7IShlPWEubmV4dCgpKS5kb25lOyllPWUudmFsdWUsZj1iK1QoZSxoKyspLGcrPVMoZSxmLGQsYyk7ZWxzZVwib2JqZWN0XCI9PT1lJiYoZD1cIlwiK2EsQihcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWQ/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZCxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVShhLGIsZCl7cmV0dXJuIG51bGw9PWE/MDpTKGEsXCJcIixiLGQpfWZ1bmN0aW9uIFQoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIGVhKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGZhKGEsYixkKXt2YXIgYz1hLnJlc3VsdCxlPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1YoYSxjLGQsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTihhKSYmKGE9ZGEoYSxlKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKStkKSksYy5wdXNoKGEpKX1mdW5jdGlvbiBWKGEsYixkLGMsZSl7dmFyIGc9XCJcIjtudWxsIT1kJiYoZz0oXCJcIitkKS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpO2I9UShiLGcsYyxlKTtVKGEsZmEsYik7UihiKX1mdW5jdGlvbiBXKCl7dmFyIGE9SS5jdXJyZW50O251bGw9PT1hP0IoXCIzMDdcIik6dm9pZCAwO3JldHVybiBhfVxudmFyIFg9e0NoaWxkcmVuOnttYXA6ZnVuY3Rpb24oYSxiLGQpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGM9W107VihhLGMsbnVsbCxiLGQpO3JldHVybiBjfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO2I9UShudWxsLG51bGwsYixkKTtVKGEsZWEsYik7UihiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFUoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtWKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7TihhKT92b2lkIDA6QihcIjE0M1wiKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RSxQdXJlQ29tcG9uZW50OkcsY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsXG5fY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX0sZm9yd2FyZFJlZjpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eSxyZW5kZXI6YX19LGxhenk6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOmJhLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fSxtZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOmFhLHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNhbGxiYWNrKGEsYil9LHVzZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNvbnRleHQoYSxiKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VFZmZlY3QoYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLFxuYixkKXtyZXR1cm4gVygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGQpfSx1c2VEZWJ1Z1ZhbHVlOmZ1bmN0aW9uKCl7fSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUxheW91dEVmZmVjdChhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VNZW1vKGEsYil9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGQpe3JldHVybiBXKCkudXNlUmVkdWNlcihhLGIsZCl9LHVzZVJlZjpmdW5jdGlvbihhKXtyZXR1cm4gVygpLnVzZVJlZihhKX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VTdGF0ZShhKX0sRnJhZ21lbnQ6cixTdHJpY3RNb2RlOnQsU3VzcGVuc2U6eixjcmVhdGVFbGVtZW50Ok0sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixkKXtudWxsPT09YXx8dm9pZCAwPT09YT9CKFwiMjY3XCIsYSk6dm9pZCAwO3ZhciBjPXZvaWQgMCxlPWsoe30sYS5wcm9wcyksZz1hLmtleSxoPWEucmVmLGY9YS5fb3duZXI7aWYobnVsbCE9XG5iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgbD12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYobD1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUsuY2FsbChiLGMpJiYhTC5oYXNPd25Qcm9wZXJ0eShjKSYmKGVbY109dm9pZCAwPT09YltjXSYmdm9pZCAwIT09bD9sW2NdOmJbY10pfWM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1jKWUuY2hpbGRyZW49ZDtlbHNlIGlmKDE8Yyl7bD1BcnJheShjKTtmb3IodmFyIG09MDttPGM7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1sfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOmZ9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpOLHZlcnNpb246XCIxNi44LjRcIixcbnVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlOngsdW5zdGFibGVfUHJvZmlsZXI6dSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpJLFJlYWN0Q3VycmVudE93bmVyOkosYXNzaWduOmt9fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHR8fFo7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBiYShhLGIsYyxkLGUsZixnLGgpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBsPVtjLGQsZSxmLGcsaF0saz0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGxbaysrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIHgoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtiYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWFhP3ZvaWQgMDp4KFwiMjI3XCIpO2Z1bmN0aW9uIGNhKGEsYixjLGQsZSxmLGcsaCxsKXt2YXIgaz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxrKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fVxudmFyIGRhPSExLGVhPW51bGwsZmE9ITEsaGE9bnVsbCxpYT17b25FcnJvcjpmdW5jdGlvbihhKXtkYT0hMDtlYT1hfX07ZnVuY3Rpb24gamEoYSxiLGMsZCxlLGYsZyxoLGwpe2RhPSExO2VhPW51bGw7Y2EuYXBwbHkoaWEsYXJndW1lbnRzKX1mdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsbCl7amEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGRhKXtpZihkYSl7dmFyIGs9ZWE7ZGE9ITE7ZWE9bnVsbH1lbHNlIHgoXCIxOThcIiksaz12b2lkIDA7ZmF8fChmYT0hMCxoYT1rKX19dmFyIGxhPW51bGwsbWE9e307XG5mdW5jdGlvbiBuYSgpe2lmKGxhKWZvcih2YXIgYSBpbiBtYSl7dmFyIGI9bWFbYV0sYz1sYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOngoXCI5NlwiLGEpO2lmKCFvYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDp4KFwiOTdcIixhKTtvYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3BhLmhhc093blByb3BlcnR5KGgpP3goXCI5OVwiLGgpOnZvaWQgMDtwYVtoXT1mO3ZhciBsPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYobCl7Zm9yKGUgaW4gbClsLmhhc093blByb3BlcnR5KGUpJiZxYShsW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8ocWEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDp4KFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gcWEoYSxiLGMpe3JhW2FdP3goXCIxMDBcIixhKTp2b2lkIDA7cmFbYV09YjtzYVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBvYT1bXSxwYT17fSxyYT17fSxzYT17fSx0YT1udWxsLHVhPW51bGwsdmE9bnVsbDtmdW5jdGlvbiB3YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9dmEoYyk7a2EoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB4YShhLGIpe251bGw9PWI/eChcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19XG5mdW5jdGlvbiB5YShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgemE9bnVsbDtmdW5jdGlvbiBBYShhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspd2EoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmd2EoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fVxudmFyIEJhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe2xhP3goXCIxMDFcIik6dm9pZCAwO2xhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO25hKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTttYS5oYXNPd25Qcm9wZXJ0eShjKSYmbWFbY109PT1kfHwobWFbY10/eChcIjEwMlwiLGMpOnZvaWQgMCxtYVtjXT1kLGI9ITApfWImJm5hKCl9fTtcbmZ1bmN0aW9uIENhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9dGEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/eChcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIERhKGEpe251bGwhPT1hJiYoemE9eGEoemEsYSkpO2E9emE7emE9bnVsbDtpZihhJiYoeWEoYSxBYSksemE/eChcIjk1XCIpOnZvaWQgMCxmYSkpdGhyb3cgYT1oYSxmYT0hMSxoYT1udWxsLGE7fXZhciBFYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxGYT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0VhLEdhPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrRWE7ZnVuY3Rpb24gSGEoYSl7aWYoYVtGYV0pcmV0dXJuIGFbRmFdO2Zvcig7IWFbRmFdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbRmFdO3JldHVybiA1PT09YS50YWd8fDY9PT1hLnRhZz9hOm51bGx9ZnVuY3Rpb24gSWEoYSl7YT1hW0ZhXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfVxuZnVuY3Rpb24gSmEoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3goXCIzM1wiKX1mdW5jdGlvbiBLYShhKXtyZXR1cm4gYVtHYV18fG51bGx9ZnVuY3Rpb24gTGEoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBNYShhLGIsYyl7aWYoYj1DYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfVxuZnVuY3Rpb24gTmEoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1MYShiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspTWEoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylNYShjW2JdLFwiYnViYmxlZFwiLGEpfX1mdW5jdGlvbiBPYShhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1DYShhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFBhKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmT2EoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfVxuZnVuY3Rpb24gUWEoYSl7eWEoYSxOYSl9dmFyIFJhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fCF3aW5kb3cuZG9jdW1lbnR8fCF3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7ZnVuY3Rpb24gU2EoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVGE9e2FuaW1hdGlvbmVuZDpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlNhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlNhKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVWE9e30sVmE9e307XG5SYSYmKFZhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFRhLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFRhLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFRhLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFRhLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gV2EoYSl7aWYoVWFbYV0pcmV0dXJuIFVhW2FdO2lmKCFUYVthXSlyZXR1cm4gYTt2YXIgYj1UYVthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBWYSlyZXR1cm4gVWFbYV09YltjXTtyZXR1cm4gYX1cbnZhciBYYT1XYShcImFuaW1hdGlvbmVuZFwiKSxZYT1XYShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxaYT1XYShcImFuaW1hdGlvbnN0YXJ0XCIpLCRhPVdhKFwidHJhbnNpdGlvbmVuZFwiKSxhYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksYmI9bnVsbCxjYj1udWxsLGRiPW51bGw7XG5mdW5jdGlvbiBlYigpe2lmKGRiKXJldHVybiBkYjt2YXIgYSxiPWNiLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGJiP2JiLnZhbHVlOmJiLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIGRiPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gZmIoKXtyZXR1cm4hMH1mdW5jdGlvbiBnYigpe3JldHVybiExfVxuZnVuY3Rpb24geShhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/ZmI6Z2I7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1nYjtyZXR1cm4gdGhpc31cbm4oeS5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1mYil9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1mYil9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1mYn0saXNQZXJzaXN0ZW50OmdiLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWdiO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7eS5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG55LmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2hiKGMpO3JldHVybiBjfTtoYih5KTtmdW5jdGlvbiBpYihhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1mdW5jdGlvbiBqYihhKXthIGluc3RhbmNlb2YgdGhpcz92b2lkIDA6eChcIjI3OVwiKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9XG5mdW5jdGlvbiBoYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1pYjthLnJlbGVhc2U9amJ9dmFyIGtiPXkuZXh0ZW5kKHtkYXRhOm51bGx9KSxsYj15LmV4dGVuZCh7ZGF0YTpudWxsfSksbWI9WzksMTMsMjcsMzJdLG5iPVJhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxvYj1udWxsO1JhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihvYj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHBiPVJhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhb2IscWI9UmEmJighbmJ8fG9iJiY4PG9iJiYxMT49b2IpLHJiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLHNiPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHRiPSExO1xuZnVuY3Rpb24gdWIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1tYi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHZiKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHdiPSExO2Z1bmN0aW9uIHhiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB2YihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7dGI9ITA7cmV0dXJuIHJiO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PXJiJiZ0Yj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiB5YihhLGIpe2lmKHdiKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFuYiYmdWIoYSxiKT8oYT1lYigpLGRiPWNiPWJiPW51bGwsd2I9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHFiJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciB6Yj17ZXZlbnRUeXBlczpzYixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZvaWQgMDt2YXIgZj12b2lkIDA7aWYobmIpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZT1zYi5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6ZT1zYi5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmU9c2IuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1lPXZvaWQgMH1lbHNlIHdiP3ViKGEsYykmJihlPXNiLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGU9c2IuY29tcG9zaXRpb25TdGFydCk7ZT8ocWImJlwia29cIiE9PWMubG9jYWxlJiYod2J8fGUhPT1zYi5jb21wb3NpdGlvblN0YXJ0P2U9PT1zYi5jb21wb3NpdGlvbkVuZCYmd2ImJihmPWViKCkpOihiYj1kLGNiPVwidmFsdWVcImluIGJiP2JiLnZhbHVlOmJiLnRleHRDb250ZW50LHdiPVxuITApKSxlPWtiLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1mOihmPXZiKGMpLG51bGwhPT1mJiYoZS5kYXRhPWYpKSxRYShlKSxmPWUpOmY9bnVsbDsoYT1wYj94YihhLGMpOnliKGEsYykpPyhiPWxiLmdldFBvb2xlZChzYi5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsUWEoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWY/YjpudWxsPT09Yj9mOltmLGJdfX0sQWI9bnVsbCxCYj1udWxsLENiPW51bGw7ZnVuY3Rpb24gRGIoYSl7aWYoYT11YShhKSl7XCJmdW5jdGlvblwiIT09dHlwZW9mIEFiP3goXCIyODBcIik6dm9pZCAwO3ZhciBiPXRhKGEuc3RhdGVOb2RlKTtBYihhLnN0YXRlTm9kZSxhLnR5cGUsYil9fWZ1bmN0aW9uIEViKGEpe0JiP0NiP0NiLnB1c2goYSk6Q2I9W2FdOkJiPWF9ZnVuY3Rpb24gRmIoKXtpZihCYil7dmFyIGE9QmIsYj1DYjtDYj1CYj1udWxsO0RiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylEYihiW2FdKX19XG5mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKGEsYixjKXtyZXR1cm4gYShiLGMpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj0hMTtmdW5jdGlvbiBLYihhLGIpe2lmKEpiKXJldHVybiBhKGIpO0piPSEwO3RyeXtyZXR1cm4gR2IoYSxiKX1maW5hbGx5e2lmKEpiPSExLG51bGwhPT1CYnx8bnVsbCE9PUNiKUliKCksRmIoKX19dmFyIExiPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIE1iKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhTGJbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxuZnVuY3Rpb24gTmIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIE9iKGEpe2lmKCFSYSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn1mdW5jdGlvbiBQYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gUWIoYSl7dmFyIGI9UGIoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFJiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1RYihhKSl9ZnVuY3Rpb24gU2IoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVBiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9dmFyIFRiPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1RiLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KFRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXI9e2N1cnJlbnQ6bnVsbH0pO1xudmFyIFViPS9eKC4qKVtcXFxcXFwvXS8sej1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLFZiPXo/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsV2I9ej9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LFhiPXo/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LFliPXo/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LFpiPXo/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LCRiPXo/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGFjPXo/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsYmM9ej9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLGNjPXo/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLGRjPXo/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGVjPXo/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxmYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGdjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBoYyhhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9Z2MmJmFbZ2NdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG5mdW5jdGlvbiBpYyhhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGJjOnJldHVyblwiQ29uY3VycmVudE1vZGVcIjtjYXNlIFhiOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIFdiOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBaYjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBZYjpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIGRjOnJldHVyblwiU3VzcGVuc2VcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgYWM6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSAkYjpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIGNjOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXG5cIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBlYzpyZXR1cm4gaWMoYS50eXBlKTtjYXNlIGZjOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gaWMoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gamMoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPWljKGEudHlwZSk7Yz1udWxsO2QmJihjPWljKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoVWIsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbnZhciBrYz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sbGM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxtYz17fSxuYz17fTtcbmZ1bmN0aW9uIG9jKGEpe2lmKGxjLmNhbGwobmMsYSkpcmV0dXJuITA7aWYobGMuY2FsbChtYyxhKSlyZXR1cm4hMTtpZihrYy50ZXN0KGEpKXJldHVybiBuY1thXT0hMDttY1thXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBwYyhhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHFjKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHBjKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gQyhhLGIsYyxkLGUpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWJ9dmFyIEQ9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwwLCExLGEsbnVsbCl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RFtiXT1uZXcgQyhiLDEsITEsYVsxXSxudWxsKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwyLCExLGEsbnVsbCl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMywhMCxhLG51bGwpfSk7XG5bXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw0LCExLGEsbnVsbCl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDYsITEsYSxudWxsKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7dmFyIHJjPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gc2MoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmMsXG5zYyk7RFtiXT1uZXcgQyhiLDEsITEsYSxudWxsKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOmhyZWYgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmMsc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmMsc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIil9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbmZ1bmN0aW9uIHRjKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KHFjKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9vYyhiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxuZnVuY3Rpb24gdWMoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHZjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIHdjKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXVjKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24geGMoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ0YyhhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24geWMoYSxiKXt4YyhhLGIpO3ZhciBjPXVjKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP3pjKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJnpjKGEsYi50eXBlLHVjKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gQWMoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gemMoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBCYz17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiBDYyhhLGIsYyl7YT15LmdldFBvb2xlZChCYy5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO0ViKGMpO1FhKGEpO3JldHVybiBhfXZhciBEYz1udWxsLEVjPW51bGw7ZnVuY3Rpb24gRmMoYSl7RGEoYSl9XG5mdW5jdGlvbiBHYyhhKXt2YXIgYj1KYShhKTtpZihTYihiKSlyZXR1cm4gYX1mdW5jdGlvbiBIYyhhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBJYz0hMTtSYSYmKEljPU9iKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO2Z1bmN0aW9uIEpjKCl7RGMmJihEYy5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixLYyksRWM9RGM9bnVsbCl9ZnVuY3Rpb24gS2MoYSl7XCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkdjKEVjKSYmKGE9Q2MoRWMsYSxOYihhKSksS2IoRmMsYSkpfWZ1bmN0aW9uIExjKGEsYixjKXtcImZvY3VzXCI9PT1hPyhKYygpLERjPWIsRWM9YyxEYy5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixLYykpOlwiYmx1clwiPT09YSYmSmMoKX1mdW5jdGlvbiBNYyhhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBHYyhFYyl9XG5mdW5jdGlvbiBOYyhhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIEdjKGIpfWZ1bmN0aW9uIE9jKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIEdjKGIpfVxudmFyIFBjPXtldmVudFR5cGVzOkJjLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6SWMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP0phKGIpOndpbmRvdyxmPXZvaWQgMCxnPXZvaWQgMCxoPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcInNlbGVjdFwiPT09aHx8XCJpbnB1dFwiPT09aCYmXCJmaWxlXCI9PT1lLnR5cGU/Zj1IYzpNYihlKT9JYz9mPU9jOihmPU1jLGc9TGMpOihoPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1oLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihmPU5jKTtpZihmJiYoZj1mKGEsYikpKXJldHVybiBDYyhmLGMsZCk7ZyYmZyhhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJnpjKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LFFjPXkuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxSYz17QWx0OlwiYWx0S2V5XCIsXG5Db250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBTYyhhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPVJjW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gVGMoKXtyZXR1cm4gU2N9XG52YXIgVWM9MCxWYz0wLFdjPSExLFhjPSExLFljPVFjLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpUYyxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1VYztVYz1hLnNjcmVlblg7cmV0dXJuIFdjP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooV2M9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1WYztWYz1hLnNjcmVlblk7cmV0dXJuIFhjP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooWGM9ITAsMCl9fSksWmM9WWMuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLCRjPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxhZD17ZXZlbnRUeXBlczokYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGY9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGUmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZiYmIWUpcmV0dXJuIG51bGw7ZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fGUucGFyZW50V2luZG93OndpbmRvdztmPyhmPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT9IYShiKTpudWxsKTpmPW51bGw7aWYoZj09PWIpcmV0dXJuIG51bGw7dmFyIGc9dm9pZCAwLGg9dm9pZCAwLGw9dm9pZCAwLGs9dm9pZCAwO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1hKWc9WWMsaD0kYy5tb3VzZUxlYXZlLGw9JGMubW91c2VFbnRlcixrPVwibW91c2VcIjtcbmVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWc9WmMsaD0kYy5wb2ludGVyTGVhdmUsbD0kYy5wb2ludGVyRW50ZXIsaz1cInBvaW50ZXJcIjt2YXIgbT1udWxsPT1mP2U6SmEoZik7ZT1udWxsPT1iP2U6SmEoYik7YT1nLmdldFBvb2xlZChoLGYsYyxkKTthLnR5cGU9aytcImxlYXZlXCI7YS50YXJnZXQ9bTthLnJlbGF0ZWRUYXJnZXQ9ZTtjPWcuZ2V0UG9vbGVkKGwsYixjLGQpO2MudHlwZT1rK1wiZW50ZXJcIjtjLnRhcmdldD1lO2MucmVsYXRlZFRhcmdldD1tO2Q9YjtpZihmJiZkKWE6e2I9ZjtlPWQ7az0wO2ZvcihnPWI7ZztnPUxhKGcpKWsrKztnPTA7Zm9yKGw9ZTtsO2w9TGEobCkpZysrO2Zvcig7MDxrLWc7KWI9TGEoYiksay0tO2Zvcig7MDxnLWs7KWU9TGEoZSksZy0tO2Zvcig7ay0tOyl7aWYoYj09PWV8fGI9PT1lLmFsdGVybmF0ZSlicmVhayBhO2I9TGEoYik7ZT1MYShlKX1iPW51bGx9ZWxzZSBiPW51bGw7ZT1iO2ZvcihiPVtdO2YmJmYhPT1lOyl7az1cbmYuYWx0ZXJuYXRlO2lmKG51bGwhPT1rJiZrPT09ZSlicmVhaztiLnB1c2goZik7Zj1MYShmKX1mb3IoZj1bXTtkJiZkIT09ZTspe2s9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWsmJms9PT1lKWJyZWFrO2YucHVzaChkKTtkPUxhKGQpfWZvcihkPTA7ZDxiLmxlbmd0aDtkKyspT2EoYltkXSxcImJ1YmJsZWRcIixhKTtmb3IoZD1mLmxlbmd0aDswPGQtLTspT2EoZltkXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuW2EsY119fTtmdW5jdGlvbiBiZChhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIGNkPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBkZChhLGIpe2lmKGJkKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighY2QuY2FsbChiLGNbZF0pfHwhYmQoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBlZChhKXt2YXIgYj1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXtpZigwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxO2Zvcig7Yi5yZXR1cm47KWlmKGI9Yi5yZXR1cm4sMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMX1yZXR1cm4gMz09PWIudGFnPzI6M31mdW5jdGlvbiBmZChhKXsyIT09ZWQoYSk/eChcIjE4OFwiKTp2b2lkIDB9XG5mdW5jdGlvbiBnZChhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYilyZXR1cm4gYj1lZChhKSwzPT09Yj94KFwiMTg4XCIpOnZvaWQgMCwxPT09Yj9udWxsOmE7Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXJldHVybiBmZChlKSxhO2lmKGc9PT1kKXJldHVybiBmZChlKSxiO2c9Zy5zaWJsaW5nfXgoXCIxODhcIil9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zz0hMTtmb3IodmFyIGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9Zz9cbnZvaWQgMDp4KFwiMTg5XCIpfX1jLmFsdGVybmF0ZSE9PWQ/eChcIjE5MFwiKTp2b2lkIDB9MyE9PWMudGFnP3goXCIxODhcIik6dm9pZCAwO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaGQoYSl7YT1nZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbnZhciBpZD15LmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksamQ9eS5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxrZD1RYy5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIGxkKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIG1kPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxuZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sb2Q9UWMuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPW1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPWxkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9uZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGMsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/bGQoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/bGQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxwZD1ZYy5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSkscWQ9UWMuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGN9KSxyZD15LmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxzZD1ZYy5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHRkPVtbXCJhYm9ydFwiLFwiYWJvcnRcIl0sW1hhLFwiYW5pbWF0aW9uRW5kXCJdLFtZYSxcImFuaW1hdGlvbkl0ZXJhdGlvblwiXSxbWmEsXCJhbmltYXRpb25TdGFydFwiXSxbXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCJdLFtcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiXSxbXCJkcmFnXCIsXCJkcmFnXCJdLFtcImRyYWdlbnRlclwiLFwiZHJhZ0VudGVyXCJdLFtcImRyYWdleGl0XCIsXCJkcmFnRXhpdFwiXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiXSxbXCJkcmFnb3ZlclwiLFwiZHJhZ092ZXJcIl0sW1wiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCJdLFtcImVtcHRpZWRcIixcImVtcHRpZWRcIl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIl0sXG5bXCJlbmRlZFwiLFwiZW5kZWRcIl0sW1wiZXJyb3JcIixcImVycm9yXCJdLFtcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJsb2FkXCIsXCJsb2FkXCJdLFtcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIl0sW1wibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCJdLFtcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCJdLFtcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCJdLFtcIm1vdXNlbW92ZVwiLFwibW91c2VNb3ZlXCJdLFtcIm1vdXNlb3V0XCIsXCJtb3VzZU91dFwiXSxbXCJtb3VzZW92ZXJcIixcIm1vdXNlT3ZlclwiXSxbXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCJdLFtcInBvaW50ZXJtb3ZlXCIsXCJwb2ludGVyTW92ZVwiXSxbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyT3V0XCJdLFtcInBvaW50ZXJvdmVyXCIsXCJwb2ludGVyT3ZlclwiXSxbXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIl0sW1wic2Nyb2xsXCIsXCJzY3JvbGxcIl0sW1wic2Vla2luZ1wiLFwic2Vla2luZ1wiXSxbXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCJdLFxuW1wic3VzcGVuZFwiLFwic3VzcGVuZFwiXSxbXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCJdLFtcInRvZ2dsZVwiLFwidG9nZ2xlXCJdLFtcInRvdWNobW92ZVwiLFwidG91Y2hNb3ZlXCJdLFskYSxcInRyYW5zaXRpb25FbmRcIl0sW1wid2FpdGluZ1wiLFwid2FpdGluZ1wiXSxbXCJ3aGVlbFwiLFwid2hlZWxcIl1dLHVkPXt9LHZkPXt9O2Z1bmN0aW9uIHdkKGEsYil7dmFyIGM9YVswXTthPWFbMV07dmFyIGQ9XCJvblwiKyhhWzBdLnRvVXBwZXJDYXNlKCkrYS5zbGljZSgxKSk7Yj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZCxjYXB0dXJlZDpkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2NdLGlzSW50ZXJhY3RpdmU6Yn07dWRbYV09Yjt2ZFtjXT1ifVxuW1tcImJsdXJcIixcImJsdXJcIl0sW1wiY2FuY2VsXCIsXCJjYW5jZWxcIl0sW1wiY2xpY2tcIixcImNsaWNrXCJdLFtcImNsb3NlXCIsXCJjbG9zZVwiXSxbXCJjb250ZXh0bWVudVwiLFwiY29udGV4dE1lbnVcIl0sW1wiY29weVwiLFwiY29weVwiXSxbXCJjdXRcIixcImN1dFwiXSxbXCJhdXhjbGlja1wiLFwiYXV4Q2xpY2tcIl0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCJdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIl0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIl0sW1wiZHJvcFwiLFwiZHJvcFwiXSxbXCJmb2N1c1wiLFwiZm9jdXNcIl0sW1wiaW5wdXRcIixcImlucHV0XCJdLFtcImludmFsaWRcIixcImludmFsaWRcIl0sW1wia2V5ZG93blwiLFwia2V5RG93blwiXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIl0sW1wia2V5dXBcIixcImtleVVwXCJdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCJdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIl0sW1wicGFzdGVcIixcInBhc3RlXCJdLFtcInBhdXNlXCIsXCJwYXVzZVwiXSxbXCJwbGF5XCIsXCJwbGF5XCJdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIl0sXG5bXCJwb2ludGVyZG93blwiLFwicG9pbnRlckRvd25cIl0sW1wicG9pbnRlcnVwXCIsXCJwb2ludGVyVXBcIl0sW1wicmF0ZWNoYW5nZVwiLFwicmF0ZUNoYW5nZVwiXSxbXCJyZXNldFwiLFwicmVzZXRcIl0sW1wic2Vla2VkXCIsXCJzZWVrZWRcIl0sW1wic3VibWl0XCIsXCJzdWJtaXRcIl0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCJdLFtcInRvdWNoZW5kXCIsXCJ0b3VjaEVuZFwiXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCJdLFtcInZvbHVtZWNoYW5nZVwiLFwidm9sdW1lQ2hhbmdlXCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3dkKGEsITApfSk7dGQuZm9yRWFjaChmdW5jdGlvbihhKXt3ZChhLCExKX0pO1xudmFyIHhkPXtldmVudFR5cGVzOnVkLGlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZTpmdW5jdGlvbihhKXthPXZkW2FdO3JldHVybiB2b2lkIDAhPT1hJiYhMD09PWEuaXNJbnRlcmFjdGl2ZX0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12ZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PWxkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1vZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9a2Q7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1ZYzticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxucGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT1xZDticmVhaztjYXNlIFhhOmNhc2UgWWE6Y2FzZSBaYTphPWlkO2JyZWFrO2Nhc2UgJGE6YT1yZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1RYzticmVhaztjYXNlIFwid2hlZWxcIjphPXNkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9amQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1aYzticmVhaztkZWZhdWx0OmE9eX1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1FhKGIpO3JldHVybiBifX0seWQ9eGQuaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlLFxuemQ9W107ZnVuY3Rpb24gQWQoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZDtmb3IoZD1jO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighZClicmVhazthLmFuY2VzdG9ycy5wdXNoKGMpO2M9SGEoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9TmIoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTtmb3IodmFyIGY9YS5uYXRpdmVFdmVudCxnPW51bGwsaD0wO2g8b2EubGVuZ3RoO2grKyl7dmFyIGw9b2FbaF07bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUpKSYmKGc9eGEoZyxsKSl9RGEoZyl9fXZhciBCZD0hMDtcbmZ1bmN0aW9uIEUoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oeWQoYSk/Q2Q6RGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCExKX1mdW5jdGlvbiBFZChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPSh5ZChhKT9DZDpEZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApfWZ1bmN0aW9uIENkKGEsYil7SGIoRGQsYSxiKX1cbmZ1bmN0aW9uIERkKGEsYil7aWYoQmQpe3ZhciBjPU5iKGIpO2M9SGEoYyk7bnVsbD09PWN8fFwibnVtYmVyXCIhPT10eXBlb2YgYy50YWd8fDI9PT1lZChjKXx8KGM9bnVsbCk7aWYoemQubGVuZ3RoKXt2YXIgZD16ZC5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXtLYihBZCxhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPnpkLmxlbmd0aCYmemQucHVzaChhKX19fXZhciBGZD17fSxHZD0wLEhkPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtcbmZ1bmN0aW9uIElkKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLEhkKXx8KGFbSGRdPUdkKyssRmRbYVtIZF1dPXt9KTtyZXR1cm4gRmRbYVtIZF1dfWZ1bmN0aW9uIEpkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiBLZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBMZChhLGIpe3ZhciBjPUtkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUtkKGMpfX1mdW5jdGlvbiBNZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP01kKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIE5kKCl7Zm9yKHZhciBhPXdpbmRvdyxiPUpkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7YT1iLmNvbnRlbnREb2N1bWVudC5kZWZhdWx0Vmlld31jYXRjaChjKXticmVha31iPUpkKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIE9kKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG5mdW5jdGlvbiBQZCgpe3ZhciBhPU5kKCk7aWYoT2QoYSkpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGEpdmFyIGI9e3N0YXJ0OmEuc2VsZWN0aW9uU3RhcnQsZW5kOmEuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2I9KGI9YS5vd25lckRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBjPWIuZ2V0U2VsZWN0aW9uJiZiLmdldFNlbGVjdGlvbigpO2lmKGMmJjAhPT1jLnJhbmdlQ291bnQpe2I9Yy5hbmNob3JOb2RlO3ZhciBkPWMuYW5jaG9yT2Zmc2V0LGU9Yy5mb2N1c05vZGU7Yz1jLmZvY3VzT2Zmc2V0O3RyeXtiLm5vZGVUeXBlLGUubm9kZVR5cGV9Y2F0Y2goQSl7Yj1udWxsO2JyZWFrIGF9dmFyIGY9MCxnPS0xLGg9LTEsbD0wLGs9MCxtPWEscD1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHQ7Oyl7bSE9PWJ8fDAhPT1kJiYzIT09bS5ub2RlVHlwZXx8KGc9ZitkKTttIT09ZXx8MCE9PWMmJjMhPT1tLm5vZGVUeXBlfHwoaD1mK2MpOzM9PT1tLm5vZGVUeXBlJiYoZis9bS5ub2RlVmFsdWUubGVuZ3RoKTtcbmlmKG51bGw9PT0odD1tLmZpcnN0Q2hpbGQpKWJyZWFrO3A9bTttPXR9Zm9yKDs7KXtpZihtPT09YSlicmVhayBiO3A9PT1iJiYrK2w9PT1kJiYoZz1mKTtwPT09ZSYmKytrPT09YyYmKGg9Zik7aWYobnVsbCE9PSh0PW0ubmV4dFNpYmxpbmcpKWJyZWFrO209cDtwPW0ucGFyZW50Tm9kZX1tPXR9Yj0tMT09PWd8fC0xPT09aD9udWxsOntzdGFydDpnLGVuZDpofX1lbHNlIGI9bnVsbH1iPWJ8fHtzdGFydDowLGVuZDowfX1lbHNlIGI9bnVsbDtyZXR1cm57Zm9jdXNlZEVsZW06YSxzZWxlY3Rpb25SYW5nZTpifX1cbmZ1bmN0aW9uIFFkKGEpe3ZhciBiPU5kKCksYz1hLmZvY3VzZWRFbGVtLGQ9YS5zZWxlY3Rpb25SYW5nZTtpZihiIT09YyYmYyYmYy5vd25lckRvY3VtZW50JiZNZChjLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGMpKXtpZihudWxsIT09ZCYmT2QoYykpaWYoYj1kLnN0YXJ0LGE9ZC5lbmQsdm9pZCAwPT09YSYmKGE9YiksXCJzZWxlY3Rpb25TdGFydFwiaW4gYyljLnNlbGVjdGlvblN0YXJ0PWIsYy5zZWxlY3Rpb25FbmQ9TWF0aC5taW4oYSxjLnZhbHVlLmxlbmd0aCk7ZWxzZSBpZihhPShiPWMub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZiLmRlZmF1bHRWaWV3fHx3aW5kb3csYS5nZXRTZWxlY3Rpb24pe2E9YS5nZXRTZWxlY3Rpb24oKTt2YXIgZT1jLnRleHRDb250ZW50Lmxlbmd0aCxmPU1hdGgubWluKGQuc3RhcnQsZSk7ZD12b2lkIDA9PT1kLmVuZD9mOk1hdGgubWluKGQuZW5kLGUpOyFhLmV4dGVuZCYmZj5kJiYoZT1kLGQ9ZixmPWUpO2U9TGQoYyxmKTt2YXIgZz1MZChjLFxuZCk7ZSYmZyYmKDEhPT1hLnJhbmdlQ291bnR8fGEuYW5jaG9yTm9kZSE9PWUubm9kZXx8YS5hbmNob3JPZmZzZXQhPT1lLm9mZnNldHx8YS5mb2N1c05vZGUhPT1nLm5vZGV8fGEuZm9jdXNPZmZzZXQhPT1nLm9mZnNldCkmJihiPWIuY3JlYXRlUmFuZ2UoKSxiLnNldFN0YXJ0KGUubm9kZSxlLm9mZnNldCksYS5yZW1vdmVBbGxSYW5nZXMoKSxmPmQ/KGEuYWRkUmFuZ2UoYiksYS5leHRlbmQoZy5ub2RlLGcub2Zmc2V0KSk6KGIuc2V0RW5kKGcubm9kZSxnLm9mZnNldCksYS5hZGRSYW5nZShiKSkpfWI9W107Zm9yKGE9YzthPWEucGFyZW50Tm9kZTspMT09PWEubm9kZVR5cGUmJmIucHVzaCh7ZWxlbWVudDphLGxlZnQ6YS5zY3JvbGxMZWZ0LHRvcDphLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmZvY3VzJiZjLmZvY3VzKCk7Zm9yKGM9MDtjPGIubGVuZ3RoO2MrKylhPWJbY10sYS5lbGVtZW50LnNjcm9sbExlZnQ9YS5sZWZ0LGEuZWxlbWVudC5zY3JvbGxUb3A9YS50b3B9fVxudmFyIFJkPVJhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsU2Q9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LFRkPW51bGwsVWQ9bnVsbCxWZD1udWxsLFdkPSExO1xuZnVuY3Rpb24gWGQoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZihXZHx8bnVsbD09VGR8fFRkIT09SmQoYykpcmV0dXJuIG51bGw7Yz1UZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZPZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBWZCYmZGQoVmQsYyk/bnVsbDooVmQ9YyxhPXkuZ2V0UG9vbGVkKFNkLnNlbGVjdCxVZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PVRkLFFhKGEpLGEpfVxudmFyIFlkPXtldmVudFR5cGVzOlNkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPUlkKGUpO2Y9c2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aWYoIWUuaGFzT3duUHJvcGVydHkoaCl8fCFlW2hdKXtlPSExO2JyZWFrIGF9fWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9KYShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKE1iKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKVRkPWUsVWQ9YixWZD1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6VmQ9VWQ9VGQ9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6V2Q9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiBXZD0hMSxYZChjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihSZClicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIFhkKGMsZCl9cmV0dXJuIG51bGx9fTtCYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3RhPUthO3VhPUlhO3ZhPUphO0JhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46eGQsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmFkLENoYW5nZUV2ZW50UGx1Z2luOlBjLFNlbGVjdEV2ZW50UGx1Z2luOllkLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46emJ9KTtmdW5jdGlvbiBaZChhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1cbmZ1bmN0aW9uICRkKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9WmQoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIGFlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit1YyhjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gYmUoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3goXCI5MVwiKTp2b2lkIDA7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gY2UoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz94KFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6eChcIjkzXCIpLGI9YlswXSksYz1iKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6dWMoYyl9fVxuZnVuY3Rpb24gZGUoYSxiKXt2YXIgYz11YyhiLnZhbHVlKSxkPXVjKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gZWUoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIGZlPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGdlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gaGUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2dlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIGllPXZvaWQgMCxqZT1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1mZS5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtpZT1pZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpZS5pbm5lckhUTUw9XCI8c3ZnPlwiK2IrXCI8L3N2Zz5cIjtmb3IoYj1pZS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBrZShhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIGxlPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LG1lPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhsZSkuZm9yRWFjaChmdW5jdGlvbihhKXttZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2xlW2JdPWxlW2FdfSl9KTtmdW5jdGlvbiBuZShhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8bGUuaGFzT3duUHJvcGVydHkoYSkmJmxlW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIG9lKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPW5lKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHBlPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBxZShhLGIpe2ImJihwZVthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/eChcIjEzN1wiLGEsXCJcIik6dm9pZCAwKSxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiYobnVsbCE9Yi5jaGlsZHJlbj94KFwiNjBcIik6dm9pZCAwLFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dm9pZCAwOngoXCI2MVwiKSksbnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlP3goXCI2MlwiLFwiXCIpOnZvaWQgMCl9XG5mdW5jdGlvbiByZShhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19XG5mdW5jdGlvbiBzZShhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1JZChhKTtiPXNhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXt2YXIgZT1iW2RdO2lmKCFjLmhhc093blByb3BlcnR5KGUpfHwhY1tlXSl7c3dpdGNoKGUpe2Nhc2UgXCJzY3JvbGxcIjpFZChcInNjcm9sbFwiLGEpO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6RWQoXCJmb2N1c1wiLGEpO0VkKFwiYmx1clwiLGEpO2MuYmx1cj0hMDtjLmZvY3VzPSEwO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpPYihlKSYmRWQoZSxhKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YWIuaW5kZXhPZihlKSYmRShlLGEpfWNbZV09ITB9fX1mdW5jdGlvbiB0ZSgpe312YXIgdWU9bnVsbCx2ZT1udWxsO1xuZnVuY3Rpb24gd2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfWZ1bmN0aW9uIHhlKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH1cbnZhciB5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDAsQWU9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEJlPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s7XG5mdW5jdGlvbiBDZShhLGIsYyxkLGUpe2FbR2FdPWU7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJnhjKGEsZSk7cmUoYyxkKTtkPXJlKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/b2UoYSxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP2plKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9rZShhLGgpOnRjKGEsZyxoLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjp5YyhhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmRlKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/YWUoYSwhIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP2FlKGEsISFlLm11bHRpcGxlLGUuZGVmYXVsdFZhbHVlLFxuITApOmFlKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1mdW5jdGlvbiBEZShhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIEVlKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1uZXcgU2V0O3ZhciBGZT1bXSxHZT0tMTtmdW5jdGlvbiBGKGEpezA+R2V8fChhLmN1cnJlbnQ9RmVbR2VdLEZlW0dlXT1udWxsLEdlLS0pfWZ1bmN0aW9uIEcoYSxiKXtHZSsrO0ZlW0dlXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEhlPXt9LEg9e2N1cnJlbnQ6SGV9LEk9e2N1cnJlbnQ6ITF9LEllPUhlO1xuZnVuY3Rpb24gSmUoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBIZTt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBKKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gS2UoYSl7RihJLGEpO0YoSCxhKX1mdW5jdGlvbiBMZShhKXtGKEksYSk7RihILGEpfVxuZnVuY3Rpb24gTWUoYSxiLGMpe0guY3VycmVudCE9PUhlP3goXCIxNjhcIik6dm9pZCAwO0coSCxiLGEpO0coSSxjLGEpfWZ1bmN0aW9uIE5lKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZCllIGluIGE/dm9pZCAwOngoXCIxMDhcIixpYyhiKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIG4oe30sYyxkKX1mdW5jdGlvbiBPZShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEhlO0llPUguY3VycmVudDtHKEgsYixhKTtHKEksSS5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24gUGUoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2Q/dm9pZCAwOngoXCIxNjlcIik7Yz8oYj1OZShhLGIsSWUpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YixGKEksYSksRihILGEpLEcoSCxiLGEpKTpGKEksYSk7RyhJLGMsYSl9dmFyIFFlPW51bGwsUmU9bnVsbDtmdW5jdGlvbiBTZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fVxuZnVuY3Rpb24gVGUoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7UWU9U2UoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO1JlPVNlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBVZShhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuY29udGV4dERlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBLKGEsYixjLGQpe3JldHVybiBuZXcgVWUoYSxiLGMsZCl9XG5mdW5jdGlvbiBWZShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFdlKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBWZShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Y2MpcmV0dXJuIDExO2lmKGE9PT1lYylyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBYZShhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPUsoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2MuY29udGV4dERlcGVuZGVuY2llcz1hLmNvbnRleHREZXBlbmRlbmNpZXM7Yy5zaWJsaW5nPWEuc2libGluZztcbmMuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFllKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlWZShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBYYjpyZXR1cm4gWmUoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBiYzpyZXR1cm4gJGUoYyxlfDMsZixiKTtjYXNlIFliOnJldHVybiAkZShjLGV8MixmLGIpO2Nhc2UgWmI6cmV0dXJuIGE9SygxMixjLGIsZXw0KSxhLmVsZW1lbnRUeXBlPVpiLGEudHlwZT1aYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGRjOnJldHVybiBhPUsoMTMsYyxiLGUpLGEuZWxlbWVudFR5cGU9ZGMsYS50eXBlPWRjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSAkYjpnPTEwO2JyZWFrIGE7Y2FzZSBhYzpnPTk7YnJlYWsgYTtjYXNlIGNjOmc9MTE7YnJlYWsgYTtjYXNlIGVjOmc9XG4xNDticmVhayBhO2Nhc2UgZmM6Zz0xNjtkPW51bGw7YnJlYWsgYX14KFwiMTMwXCIsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpfWI9SyhnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIFplKGEsYixjLGQpe2E9Syg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gJGUoYSxiLGMsZCl7YT1LKDgsYSxkLGIpO2I9MD09PShiJjEpP1liOmJjO2EuZWxlbWVudFR5cGU9YjthLnR5cGU9YjthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gYWYoYSxiLGMpe2E9Syg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBiZihhLGIsYyl7Yj1LKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifWZ1bmN0aW9uIGNmKGEsYil7YS5kaWRFcnJvcj0hMTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7MD09PWM/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9YjpjPGI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWI6YS5sYXRlc3RQZW5kaW5nVGltZT5iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1iKTtkZihiLGEpfVxuZnVuY3Rpb24gZWYoYSxiKXthLmRpZEVycm9yPSExO2lmKDA9PT1iKWEuZWFybGllc3RQZW5kaW5nVGltZT0wLGEubGF0ZXN0UGVuZGluZ1RpbWU9MCxhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wO2Vsc2V7YjxhLmxhdGVzdFBpbmdlZFRpbWUmJihhLmxhdGVzdFBpbmdlZFRpbWU9MCk7dmFyIGM9YS5sYXRlc3RQZW5kaW5nVGltZTswIT09YyYmKGM+Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT0wOmEuZWFybGllc3RQZW5kaW5nVGltZT5iJiYoYS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWUpKTtjPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lOzA9PT1jP2NmKGEsYik6YjxhLmxhdGVzdFN1c3BlbmRlZFRpbWU/KGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTAsY2YoYSxiKSk6XG5iPmMmJmNmKGEsYil9ZGYoMCxhKX1mdW5jdGlvbiBmZihhLGIpe2EuZGlkRXJyb3I9ITE7YS5sYXRlc3RQaW5nZWRUaW1lPj1iJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZSxkPWEubGF0ZXN0UGVuZGluZ1RpbWU7Yz09PWI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWQ9PT1iP2EubGF0ZXN0UGVuZGluZ1RpbWU9MDpkOmQ9PT1iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1jKTtjPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2Q9YS5sYXRlc3RTdXNwZW5kZWRUaW1lOzA9PT1jP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWEubGF0ZXN0U3VzcGVuZGVkVGltZT1iOmM8Yj9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1iOmQ+YiYmKGEubGF0ZXN0U3VzcGVuZGVkVGltZT1iKTtkZihiLGEpfVxuZnVuY3Rpb24gZ2YoYSxiKXt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7YT1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtjPmImJihiPWMpO2E+YiYmKGI9YSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZGYoYSxiKXt2YXIgYz1iLmVhcmxpZXN0U3VzcGVuZGVkVGltZSxkPWIubGF0ZXN0U3VzcGVuZGVkVGltZSxlPWIuZWFybGllc3RQZW5kaW5nVGltZSxmPWIubGF0ZXN0UGluZ2VkVGltZTtlPTAhPT1lP2U6ZjswPT09ZSYmKDA9PT1hfHxkPGEpJiYoZT1kKTthPWU7MCE9PWEmJmM+YSYmKGE9Yyk7Yi5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1lO2IuZXhwaXJhdGlvblRpbWU9YX1mdW5jdGlvbiBMKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifVxuZnVuY3Rpb24gaGYoYSl7dmFyIGI9YS5fcmVzdWx0O3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYjtjYXNlIDI6dGhyb3cgYjtjYXNlIDA6dGhyb3cgYjtkZWZhdWx0OmEuX3N0YXR1cz0wO2I9YS5fY3RvcjtiPWIoKTtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pO3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYS5fcmVzdWx0O2Nhc2UgMjp0aHJvdyBhLl9yZXN1bHQ7fWEuX3Jlc3VsdD1iO3Rocm93IGI7fX12YXIgamY9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBrZihhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciB0Zj17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWVkKGEpOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWxmKCk7ZD1tZihkLGEpO3ZhciBlPW5mKGQpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtvZigpO3BmKGEsZSk7cWYoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9bGYoKTtkPW1mKGQsYSk7dmFyIGU9bmYoZCk7ZS50YWc9cmY7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO29mKCk7cGYoYSxlKTtxZihhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1sZigpO2M9bWYoYyxhKTt2YXIgZD1uZihjKTtkLnRhZz1cbnNmO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtvZigpO3BmKGEsZCk7cWYoYSxjKX19O2Z1bmN0aW9uIHVmKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWRkKGMsZCl8fCFkZChlLGYpOiEwfVxuZnVuY3Rpb24gdmYoYSxiLGMpe3ZhciBkPSExLGU9SGU7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9TShmKTooZT1KKGIpP0llOkguY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0plKGEsZSk6SGUpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj10ZjthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiB3ZihhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmdGYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiB4ZihhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPWpmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9TShmKTooZj1KKGIpP0llOkguY3VycmVudCxlLmNvbnRleHQ9SmUoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoeWYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKGtmKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJnRmLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKHlmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgemY9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIEFmKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjt2YXIgZD12b2lkIDA7YyYmKDEhPT1jLnRhZz94KFwiMzA5XCIpOnZvaWQgMCxkPWMuc3RhdGVOb2RlKTtkP3ZvaWQgMDp4KFwiMTQ3XCIsYSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1qZiYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifVwic3RyaW5nXCIhPT10eXBlb2YgYT94KFwiMjg0XCIpOnZvaWQgMDtjLl9vd25lcj92b2lkIDA6eChcIjI5MFwiLGEpfXJldHVybiBhfVxuZnVuY3Rpb24gQmYoYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJngoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIENmKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9WGUoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1hZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9QWYoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVllKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPUFmKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9YmYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9WmUoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHAoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWFmKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBjPVllKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPUFmKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSBXYjpyZXR1cm4gYj1iZihiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoemYoYil8fFxuaGMoYikpcmV0dXJuIGI9WmUoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7QmYoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB0KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09WGI/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmwoYSxiLGMsZCk6bnVsbDtjYXNlIFdiOnJldHVybiBjLmtleT09PWU/ayhhLGIsYyxkKTpudWxsfWlmKHpmKGMpfHxoYyhjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7QmYoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBBKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgVmI6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PVhiP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6bChiLGEsZCxlKTtjYXNlIFdiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxrKGIsYSxkLGUpfWlmKHpmKGQpfHxoYyhkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7QmYoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB2KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLG09bnVsbCxxPWcsdT1nPTAsQj1udWxsO251bGwhPT1xJiZ1PGgubGVuZ3RoO3UrKyl7cS5pbmRleD51PyhCPXEscT1udWxsKTpCPXEuc2libGluZzt2YXIgdz10KGUscSxoW3VdLGspO2lmKG51bGw9PT13KXtudWxsPT09cSYmKHE9Qik7YnJlYWt9YSYmXG5xJiZudWxsPT09dy5hbHRlcm5hdGUmJmIoZSxxKTtnPWYodyxnLHUpO251bGw9PT1tP2w9dzptLnNpYmxpbmc9dzttPXc7cT1CfWlmKHU9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHEpLGw7aWYobnVsbD09PXEpe2Zvcig7dTxoLmxlbmd0aDt1KyspaWYocT1wKGUsaFt1XSxrKSlnPWYocSxnLHUpLG51bGw9PT1tP2w9cTptLnNpYmxpbmc9cSxtPXE7cmV0dXJuIGx9Zm9yKHE9ZChlLHEpO3U8aC5sZW5ndGg7dSsrKWlmKEI9QShxLGUsdSxoW3VdLGspKWEmJm51bGwhPT1CLmFsdGVybmF0ZSYmcS5kZWxldGUobnVsbD09PUIua2V5P3U6Qi5rZXkpLGc9ZihCLGcsdSksbnVsbD09PW0/bD1COm0uc2libGluZz1CLG09QjthJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIFIoZSxnLGgsayl7dmFyIGw9aGMoaCk7XCJmdW5jdGlvblwiIT09dHlwZW9mIGw/eChcIjE1MFwiKTp2b2lkIDA7aD1sLmNhbGwoaCk7bnVsbD09aD94KFwiMTUxXCIpOnZvaWQgMDtcbmZvcih2YXIgbT1sPW51bGwscT1nLHU9Zz0wLEI9bnVsbCx3PWgubmV4dCgpO251bGwhPT1xJiYhdy5kb25lO3UrKyx3PWgubmV4dCgpKXtxLmluZGV4PnU/KEI9cSxxPW51bGwpOkI9cS5zaWJsaW5nO3ZhciB2PXQoZSxxLHcudmFsdWUsayk7aWYobnVsbD09PXYpe3F8fChxPUIpO2JyZWFrfWEmJnEmJm51bGw9PT12LmFsdGVybmF0ZSYmYihlLHEpO2c9Zih2LGcsdSk7bnVsbD09PW0/bD12Om0uc2libGluZz12O209djtxPUJ9aWYody5kb25lKXJldHVybiBjKGUscSksbDtpZihudWxsPT09cSl7Zm9yKDshdy5kb25lO3UrKyx3PWgubmV4dCgpKXc9cChlLHcudmFsdWUsayksbnVsbCE9PXcmJihnPWYodyxnLHUpLG51bGw9PT1tP2w9dzptLnNpYmxpbmc9dyxtPXcpO3JldHVybiBsfWZvcihxPWQoZSxxKTshdy5kb25lO3UrKyx3PWgubmV4dCgpKXc9QShxLGUsdSx3LnZhbHVlLGspLG51bGwhPT13JiYoYSYmbnVsbCE9PXcuYWx0ZXJuYXRlJiZxLmRlbGV0ZShudWxsPT09dy5rZXk/dTpcbncua2V5KSxnPWYodyxnLHUpLG51bGw9PT1tP2w9dzptLnNpYmxpbmc9dyxtPXcpO2EmJnEuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PVhiJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFZiOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bClpZig3PT09ay50YWc/Zi50eXBlPT09WGI6ay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09WGI/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPUFmKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9XG5rLnNpYmxpbmd9Zi50eXBlPT09WGI/KGQ9WmUoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVllKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPUFmKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSBXYjphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWJmKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVxuXCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1hZihmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZih6ZihmKSlyZXR1cm4gdihhLGQsZixoKTtpZihoYyhmKSlyZXR1cm4gUihhLGQsZixoKTtsJiZCZihhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOmg9YS50eXBlLHgoXCIxNTJcIixoLmRpc3BsYXlOYW1lfHxoLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciBEZj1DZighMCksRWY9Q2YoITEpLEZmPXt9LE49e2N1cnJlbnQ6RmZ9LEdmPXtjdXJyZW50OkZmfSxIZj17Y3VycmVudDpGZn07ZnVuY3Rpb24gSWYoYSl7YT09PUZmP3goXCIxNzRcIik6dm9pZCAwO3JldHVybiBhfVxuZnVuY3Rpb24gSmYoYSxiKXtHKEhmLGIsYSk7RyhHZixhLGEpO0coTixGZixhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpoZShudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9aGUoYixjKX1GKE4sYSk7RyhOLGIsYSl9ZnVuY3Rpb24gS2YoYSl7RihOLGEpO0YoR2YsYSk7RihIZixhKX1mdW5jdGlvbiBMZihhKXtJZihIZi5jdXJyZW50KTt2YXIgYj1JZihOLmN1cnJlbnQpO3ZhciBjPWhlKGIsYS50eXBlKTtiIT09YyYmKEcoR2YsYSxhKSxHKE4sYyxhKSl9ZnVuY3Rpb24gTWYoYSl7R2YuY3VycmVudD09PWEmJihGKE4sYSksRihHZixhKSl9XG52YXIgTmY9MCxPZj0yLFBmPTQsUWY9OCxSZj0xNixTZj0zMixUZj02NCxVZj0xMjgsVmY9VGIuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixXZj0wLFhmPW51bGwsTz1udWxsLFA9bnVsbCxZZj1udWxsLFE9bnVsbCxaZj1udWxsLCRmPTAsYWc9bnVsbCxiZz0wLGNnPSExLGRnPW51bGwsZWc9MDtmdW5jdGlvbiBmZygpe3goXCIzMDdcIil9ZnVuY3Rpb24gZ2coYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighYmQoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIGhnKGEsYixjLGQsZSxmKXtXZj1mO1hmPWI7UD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtWZi5jdXJyZW50PW51bGw9PT1QP2lnOmpnO2I9YyhkLGUpO2lmKGNnKXtkbyBjZz0hMSxlZys9MSxQPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsLFpmPVlmLGFnPVE9Tz1udWxsLFZmLmN1cnJlbnQ9amcsYj1jKGQsZSk7d2hpbGUoY2cpO2RnPW51bGw7ZWc9MH1WZi5jdXJyZW50PWtnO2E9WGY7YS5tZW1vaXplZFN0YXRlPVlmO2EuZXhwaXJhdGlvblRpbWU9JGY7YS51cGRhdGVRdWV1ZT1hZzthLmVmZmVjdFRhZ3w9Ymc7YT1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtXZj0wO1pmPVE9WWY9UD1PPVhmPW51bGw7JGY9MDthZz1udWxsO2JnPTA7YT94KFwiMzAwXCIpOnZvaWQgMDtyZXR1cm4gYn1mdW5jdGlvbiBsZygpe1ZmLmN1cnJlbnQ9a2c7V2Y9MDtaZj1RPVlmPVA9Tz1YZj1udWxsOyRmPTA7YWc9bnVsbDtiZz0wO2NnPSExO2RnPW51bGw7ZWc9MH1cbmZ1bmN0aW9uIG1nKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxxdWV1ZTpudWxsLGJhc2VVcGRhdGU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1RP1lmPVE9YTpRPVEubmV4dD1hO3JldHVybiBRfWZ1bmN0aW9uIG5nKCl7aWYobnVsbCE9PVpmKVE9WmYsWmY9US5uZXh0LE89UCxQPW51bGwhPT1PP08ubmV4dDpudWxsO2Vsc2V7bnVsbD09PVA/eChcIjMxMFwiKTp2b2lkIDA7Tz1QO3ZhciBhPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUscXVldWU6Ty5xdWV1ZSxiYXNlVXBkYXRlOk8uYmFzZVVwZGF0ZSxuZXh0Om51bGx9O1E9bnVsbD09PVE/WWY9YTpRLm5leHQ9YTtQPU8ubmV4dH1yZXR1cm4gUX1mdW5jdGlvbiBvZyhhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIHBnKGEpe3ZhciBiPW5nKCksYz1iLnF1ZXVlO251bGw9PT1jP3goXCIzMTFcIik6dm9pZCAwO2lmKDA8ZWcpe3ZhciBkPWMuZGlzcGF0Y2g7aWYobnVsbCE9PWRnKXt2YXIgZT1kZy5nZXQoYyk7aWYodm9pZCAwIT09ZSl7ZGcuZGVsZXRlKGMpO3ZhciBmPWIubWVtb2l6ZWRTdGF0ZTtkbyBmPWEoZixlLmFjdGlvbiksZT1lLm5leHQ7d2hpbGUobnVsbCE9PWUpO2JkKGYsYi5tZW1vaXplZFN0YXRlKXx8KHFnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9PT1jLmxhc3QmJihiLmJhc2VTdGF0ZT1mKTtjLmVhZ2VyUmVkdWNlcj1hO2MuZWFnZXJTdGF0ZT1mO3JldHVybltmLGRdfX1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGRdfWQ9Yy5sYXN0O3ZhciBnPWIuYmFzZVVwZGF0ZTtmPWIuYmFzZVN0YXRlO251bGwhPT1nPyhudWxsIT09ZCYmKGQubmV4dD1udWxsKSxkPWcubmV4dCk6ZD1udWxsIT09ZD9kLm5leHQ6bnVsbDtpZihudWxsIT09ZCl7dmFyIGg9ZT1udWxsLFxubD1kLGs9ITE7ZG97dmFyIG09bC5leHBpcmF0aW9uVGltZTttPFdmPyhrfHwoaz0hMCxoPWcsZT1mKSxtPiRmJiYoJGY9bSkpOmY9bC5lYWdlclJlZHVjZXI9PT1hP2wuZWFnZXJTdGF0ZTphKGYsbC5hY3Rpb24pO2c9bDtsPWwubmV4dH13aGlsZShudWxsIT09bCYmbCE9PWQpO2t8fChoPWcsZT1mKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPWg7Yi5iYXNlU3RhdGU9ZTtjLmVhZ2VyUmVkdWNlcj1hO2MuZWFnZXJTdGF0ZT1mfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiByZyhhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07bnVsbD09PWFnPyhhZz17bGFzdEVmZmVjdDpudWxsfSxhZy5sYXN0RWZmZWN0PWEubmV4dD1hKTooYj1hZy5sYXN0RWZmZWN0LG51bGw9PT1iP2FnLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGM9Yi5uZXh0LGIubmV4dD1hLGEubmV4dD1jLGFnLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIHNnKGEsYixjLGQpe3ZhciBlPW1nKCk7Ymd8PWE7ZS5tZW1vaXplZFN0YXRlPXJnKGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gdGcoYSxiLGMsZCl7dmFyIGU9bmcoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZnZyhkLGcuZGVwcykpe3JnKE5mLGMsZixkKTtyZXR1cm59fWJnfD1hO2UubWVtb2l6ZWRTdGF0ZT1yZyhiLGMsZixkKX1mdW5jdGlvbiB1ZyhhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIHZnKCl7fVxuZnVuY3Rpb24gd2coYSxiLGMpezI1PmVnP3ZvaWQgMDp4KFwiMzAxXCIpO3ZhciBkPWEuYWx0ZXJuYXRlO2lmKGE9PT1YZnx8bnVsbCE9PWQmJmQ9PT1YZilpZihjZz0hMCxhPXtleHBpcmF0aW9uVGltZTpXZixhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxudWxsPT09ZGcmJihkZz1uZXcgTWFwKSxjPWRnLmdldChiKSx2b2lkIDA9PT1jKWRnLnNldChiLGEpO2Vsc2V7Zm9yKGI9YztudWxsIT09Yi5uZXh0OyliPWIubmV4dDtiLm5leHQ9YX1lbHNle29mKCk7dmFyIGU9bGYoKTtlPW1mKGUsYSk7dmFyIGY9e2V4cGlyYXRpb25UaW1lOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sZz1iLmxhc3Q7aWYobnVsbD09PWcpZi5uZXh0PWY7ZWxzZXt2YXIgaD1nLm5leHQ7bnVsbCE9PWgmJihmLm5leHQ9aCk7Zy5uZXh0PWZ9Yi5sYXN0PWY7aWYoMD09PWEuZXhwaXJhdGlvblRpbWUmJihudWxsPT09XG5kfHwwPT09ZC5leHBpcmF0aW9uVGltZSkmJihkPWIuZWFnZXJSZWR1Y2VyLG51bGwhPT1kKSl0cnl7dmFyIGw9Yi5lYWdlclN0YXRlLGs9ZChsLGMpO2YuZWFnZXJSZWR1Y2VyPWQ7Zi5lYWdlclN0YXRlPWs7aWYoYmQoayxsKSlyZXR1cm59Y2F0Y2gobSl7fWZpbmFsbHl7fXFmKGEsZSl9fVxudmFyIGtnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZnLHVzZUNvbnRleHQ6ZmcsdXNlRWZmZWN0OmZnLHVzZUltcGVyYXRpdmVIYW5kbGU6ZmcsdXNlTGF5b3V0RWZmZWN0OmZnLHVzZU1lbW86ZmcsdXNlUmVkdWNlcjpmZyx1c2VSZWY6ZmcsdXNlU3RhdGU6ZmcsdXNlRGVidWdWYWx1ZTpmZ30saWc9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXttZygpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0Ok0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHNnKDUxNixVZnxUZixhLGIpfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gc2coNCxQZnxTZix1Zy5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHNnKDQsUGZ8U2YsYSxiKX0sXG51c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9bWcoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9bWcoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsZWFnZXJSZWR1Y2VyOmEsZWFnZXJTdGF0ZTpifTthPWEuZGlzcGF0Y2g9d2cuYmluZChudWxsLFhmLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1tZygpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXt2YXIgYj1tZygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsZWFnZXJSZWR1Y2VyOm9nLFxuZWFnZXJTdGF0ZTphfTthPWEuZGlzcGF0Y2g9d2cuYmluZChudWxsLFhmLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19LHVzZURlYnVnVmFsdWU6dmd9LGpnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7dmFyIGM9bmcoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJmdnKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VDb250ZXh0Ok0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRnKDUxNixVZnxUZixhLGIpfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gdGcoNCxQZnxTZix1Zy5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRnKDQsUGZ8U2YsYSxiKX0sXG51c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9bmcoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJmdnKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOnBnLHVzZVJlZjpmdW5jdGlvbigpe3JldHVybiBuZygpLm1lbW9pemVkU3RhdGV9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBwZyhvZyxhKX0sdXNlRGVidWdWYWx1ZTp2Z30seGc9bnVsbCx5Zz1udWxsLHpnPSExO1xuZnVuY3Rpb24gQWcoYSxiKXt2YXIgYz1LKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gQmcoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIENnKGEpe2lmKHpnKXt2YXIgYj15ZztpZihiKXt2YXIgYz1iO2lmKCFCZyhhLGIpKXtiPURlKGMpO2lmKCFifHwhQmcoYSxiKSl7YS5lZmZlY3RUYWd8PTI7emc9ITE7eGc9YTtyZXR1cm59QWcoeGcsYyl9eGc9YTt5Zz1FZShiKX1lbHNlIGEuZWZmZWN0VGFnfD0yLHpnPSExLHhnPWF9fWZ1bmN0aW9uIERnKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTghPT1hLnRhZzspYT1hLnJldHVybjt4Zz1hfWZ1bmN0aW9uIEVnKGEpe2lmKGEhPT14ZylyZXR1cm4hMTtpZighemcpcmV0dXJuIERnKGEpLHpnPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYheGUoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPXlnO2I7KUFnKGEsYiksYj1EZShiKTtEZyhhKTt5Zz14Zz9EZShhLnN0YXRlTm9kZSk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBGZygpe3lnPXhnPW51bGw7emc9ITF9XG52YXIgR2c9VGIuUmVhY3RDdXJyZW50T3duZXIscWc9ITE7ZnVuY3Rpb24gUyhhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP0VmKGIsbnVsbCxjLGQpOkRmKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIEhnKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtJZyhiLGUpO2Q9aGcoYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSxKZyhhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UyhhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIEtnKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhVmUoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsTGcoYSxiLGcsZCxlLGYpO2E9WWUoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpkZCxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBKZyhhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1YZShnLGQsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gTGcoYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmZGQoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmJiYocWc9ITEsZTxmKT9KZyhhLGIsZik6TWcoYSxiLGMsZCxmKX1mdW5jdGlvbiBOZyhhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIE1nKGEsYixjLGQsZSl7dmFyIGY9SihjKT9JZTpILmN1cnJlbnQ7Zj1KZShiLGYpO0lnKGIsZSk7Yz1oZyhhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFxZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLEpnKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtTKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gT2coYSxiLGMsZCxlKXtpZihKKGMpKXt2YXIgZj0hMDtPZShiKX1lbHNlIGY9ITE7SWcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLHZmKGIsYyxkLGUpLHhmKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBsPWcuY29udGV4dCxrPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPU0oayk6KGs9SihjKT9JZTpILmN1cnJlbnQsaz1KZShiLGspKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGwhPT1rKSYmd2YoYixnLGQsayk7UGc9ITE7dmFyIHQ9Yi5tZW1vaXplZFN0YXRlO2w9Zy5zdGF0ZT10O3ZhciBBPWIudXBkYXRlUXVldWU7bnVsbCE9PUEmJih5ZihiLEEsZCxnLGUpLGw9Yi5tZW1vaXplZFN0YXRlKTtoIT09ZHx8dCE9PWx8fEkuY3VycmVudHx8UGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoa2YoYixjLG0sZCksbD1iLm1lbW9pemVkU3RhdGUpLChoPVBnfHx1ZihiLGMsaCxkLHQsbCxrKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1sKSxnLnByb3BzPWQsZy5zdGF0ZT1sLGcuY29udGV4dD1rLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpMKGIudHlwZSxoKSxsPWcuY29udGV4dCxrPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPU0oayk6KGs9SihjKT9JZTpILmN1cnJlbnQsaz1KZShiLGspKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChwPVwiZnVuY3Rpb25cIj09PVxudHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8bCE9PWspJiZ3ZihiLGcsZCxrKSxQZz0hMSxsPWIubWVtb2l6ZWRTdGF0ZSx0PWcuc3RhdGU9bCxBPWIudXBkYXRlUXVldWUsbnVsbCE9PUEmJih5ZihiLEEsZCxnLGUpLHQ9Yi5tZW1vaXplZFN0YXRlKSxoIT09ZHx8bCE9PXR8fEkuY3VycmVudHx8UGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoa2YoYixjLG0sZCksdD1iLm1lbW9pemVkU3RhdGUpLChtPVBnfHx1ZihiLGMsaCxkLGwsdCxrKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCx0LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQsdCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9XG50KSxnLnByb3BzPWQsZy5zdGF0ZT10LGcuY29udGV4dD1rLGQ9bSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBRZyhhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBRZyhhLGIsYyxkLGUsZil7TmcoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJlBlKGIsYywhMSksSmcoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7R2cuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9RGYoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1EZihiLG51bGwsaCxmKSk6UyhhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZQZShiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIFJnKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/TWUoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmTWUoYSxiLmNvbnRleHQsITEpO0pmKGEsYi5jb250YWluZXJJbmZvKX1cbmZ1bmN0aW9uIFNnKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPWIubWVtb2l6ZWRTdGF0ZTtpZigwPT09KGIuZWZmZWN0VGFnJjY0KSl7Zj1udWxsO3ZhciBnPSExfWVsc2UgZj17dGltZWRPdXRBdDpudWxsIT09Zj9mLnRpbWVkT3V0QXQ6MH0sZz0hMCxiLmVmZmVjdFRhZyY9LTY1O2lmKG51bGw9PT1hKWlmKGcpe3ZhciBoPWUuZmFsbGJhY2s7YT1aZShudWxsLGQsMCxudWxsKTswPT09KGIubW9kZSYxKSYmKGEuY2hpbGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQpO2Q9WmUoaCxkLGMsbnVsbCk7YS5zaWJsaW5nPWQ7Yz1hO2MucmV0dXJuPWQucmV0dXJuPWJ9ZWxzZSBjPWQ9RWYoYixudWxsLGUuY2hpbGRyZW4sYyk7ZWxzZSBudWxsIT09YS5tZW1vaXplZFN0YXRlPyhkPWEuY2hpbGQsaD1kLnNpYmxpbmcsZz8oYz1lLmZhbGxiYWNrLGU9WGUoZCxkLnBlbmRpbmdQcm9wcywwKSwwPT09KGIubW9kZSYxKSYmKGc9bnVsbCE9PVxuYi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09ZC5jaGlsZCYmKGUuY2hpbGQ9ZykpLGQ9ZS5zaWJsaW5nPVhlKGgsYyxoLmV4cGlyYXRpb25UaW1lKSxjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6Yz1kPURmKGIsZC5jaGlsZCxlLmNoaWxkcmVuLGMpKTooaD1hLmNoaWxkLGc/KGc9ZS5mYWxsYmFjayxlPVplKG51bGwsZCwwLG51bGwpLGUuY2hpbGQ9aCwwPT09KGIubW9kZSYxKSYmKGUuY2hpbGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQpLGQ9ZS5zaWJsaW5nPVplKGcsZCxjLG51bGwpLGQuZWZmZWN0VGFnfD0yLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpkPWM9RGYoYixoLGUuY2hpbGRyZW4sYykpLGIuc3RhdGVOb2RlPWEuc3RhdGVOb2RlO2IubWVtb2l6ZWRTdGF0ZT1mO2IuY2hpbGQ9YztyZXR1cm4gZH1cbmZ1bmN0aW9uIEpnKGEsYixjKXtudWxsIT09YSYmKGIuY29udGV4dERlcGVuZGVuY2llcz1hLmNvbnRleHREZXBlbmRlbmNpZXMpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD94KFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9WGUoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9WGUoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gVGcoYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fEkuY3VycmVudClxZz0hMDtlbHNle2lmKGQ8Yyl7cWc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6UmcoYik7RmcoKTticmVhaztjYXNlIDU6TGYoYik7YnJlYWs7Y2FzZSAxOkooYi50eXBlKSYmT2UoYik7YnJlYWs7Y2FzZSA0OkpmKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpVZyhiLGIubWVtb2l6ZWRQcm9wcy52YWx1ZSk7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtpZigwIT09ZCYmZD49YylyZXR1cm4gU2coYSxiLGMpO2I9SmcoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH19cmV0dXJuIEpnKGEsYixjKX19ZWxzZSBxZz0hMTtiLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1cbmIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7dmFyIGU9SmUoYixILmN1cnJlbnQpO0lnKGIsYyk7ZT1oZyhudWxsLGIsZCxhLGUsYyk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2xnKCk7aWYoSihkKSl7dmFyIGY9ITA7T2UoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJmtmKGIsZCxnLGEpO2UudXBkYXRlcj10ZjtiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO3hmKGIsZCxhLGMpO2I9UWcobnVsbCxiLGQsITAsZixcbmMpfWVsc2UgYi50YWc9MCxTKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7Zj1iLnBlbmRpbmdQcm9wczthPWhmKGUpO2IudHlwZT1hO2U9Yi50YWc9V2UoYSk7Zj1MKGEsZik7Zz12b2lkIDA7c3dpdGNoKGUpe2Nhc2UgMDpnPU1nKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxOmc9T2cobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDExOmc9SGcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE0Omc9S2cobnVsbCxiLGEsTChhLnR5cGUsZiksZCxjKTticmVhaztkZWZhdWx0OngoXCIzMDZcIixhLFwiXCIpfXJldHVybiBnO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLE1nKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLFxuZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkwoZCxlKSxPZyhhLGIsZCxlLGMpO2Nhc2UgMzpSZyhiKTtkPWIudXBkYXRlUXVldWU7bnVsbD09PWQ/eChcIjI4MlwiKTp2b2lkIDA7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt5ZihiLGQsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKUZnKCksYj1KZyhhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGU9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmUuaHlkcmF0ZSl5Zz1FZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSx4Zz1iLGU9emc9ITA7ZT8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD1FZihiLG51bGwsZCxjKSk6KFMoYSxiLGQsYyksRmcoKSk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gTGYoYiksbnVsbD09PWEmJkNnKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxcbmc9ZS5jaGlsZHJlbix4ZShkLGUpP2c9bnVsbDpudWxsIT09ZiYmeGUoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksTmcoYSxiKSwxIT09YyYmYi5tb2RlJjEmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLGI9bnVsbCk6KFMoYSxiLGcsYyksYj1iLmNoaWxkKSxiO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJkNnKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gU2coYSxiLGMpO2Nhc2UgNDpyZXR1cm4gSmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9RGYoYixudWxsLGQsYyk6UyhhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkwoZCxlKSxIZyhhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7VWcoYixmKTtpZihudWxsIT09Zyl7dmFyIGg9Zy52YWx1ZTtmPWJkKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MDtpZigwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFJLmN1cnJlbnQpe2I9SmcoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGw9aC5jb250ZXh0RGVwZW5kZW5jaWVzO2lmKG51bGwhPT1sKXtnPWguY2hpbGQ7Zm9yKHZhciBrPWwuZmlyc3Q7bnVsbCE9PWs7KXtpZihrLmNvbnRleHQ9PT1kJiYwIT09XG4oay5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGs9bmYoYyksay50YWc9c2YscGYoaCxrKSk7aC5leHBpcmF0aW9uVGltZTxjJiYoaC5leHBpcmF0aW9uVGltZT1jKTtrPWguYWx0ZXJuYXRlO251bGwhPT1rJiZrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2s9Yztmb3IodmFyIG09aC5yZXR1cm47bnVsbCE9PW07KXt2YXIgcD1tLmFsdGVybmF0ZTtpZihtLmNoaWxkRXhwaXJhdGlvblRpbWU8ayltLmNoaWxkRXhwaXJhdGlvblRpbWU9ayxudWxsIT09cCYmcC5jaGlsZEV4cGlyYXRpb25UaW1lPGsmJihwLmNoaWxkRXhwaXJhdGlvblRpbWU9ayk7ZWxzZSBpZihudWxsIT09cCYmcC5jaGlsZEV4cGlyYXRpb25UaW1lPGspcC5jaGlsZEV4cGlyYXRpb25UaW1lPWs7ZWxzZSBicmVhazttPW0ucmV0dXJufWwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9az1rLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9cbm51bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfX1TKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLElnKGIsYyksZT1NKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxTKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1MKGUsYi5wZW5kaW5nUHJvcHMpLGY9TChlLnR5cGUsZiksS2coYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIExnKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PVxuZD9lOkwoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxKKGQpPyhhPSEwLE9lKGIpKTphPSExLElnKGIsYyksdmYoYixkLGUsYykseGYoYixkLGUsYyksUWcobnVsbCxiLGQsITAsYSxjKX14KFwiMTU2XCIpfXZhciBWZz17Y3VycmVudDpudWxsfSxXZz1udWxsLFhnPW51bGwsWWc9bnVsbDtmdW5jdGlvbiBVZyhhLGIpe3ZhciBjPWEudHlwZS5fY29udGV4dDtHKFZnLGMuX2N1cnJlbnRWYWx1ZSxhKTtjLl9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBaZyhhKXt2YXIgYj1WZy5jdXJyZW50O0YoVmcsYSk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBJZyhhLGIpe1dnPWE7WWc9WGc9bnVsbDt2YXIgYz1hLmNvbnRleHREZXBlbmRlbmNpZXM7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU+PWImJihxZz0hMCk7YS5jb250ZXh0RGVwZW5kZW5jaWVzPW51bGx9XG5mdW5jdGlvbiBNKGEsYil7aWYoWWchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKVlnPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O251bGw9PT1YZz8obnVsbD09PVdnP3goXCIzMDhcIik6dm9pZCAwLFhnPWIsV2cuY29udGV4dERlcGVuZGVuY2llcz17Zmlyc3Q6YixleHBpcmF0aW9uVGltZTowfSk6WGc9WGcubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyICRnPTAscmY9MSxzZj0yLGFoPTMsUGc9ITE7ZnVuY3Rpb24gYmgoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLGZpcnN0VXBkYXRlOm51bGwsbGFzdFVwZGF0ZTpudWxsLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fVxuZnVuY3Rpb24gY2goYSl7cmV0dXJue2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdFVwZGF0ZTphLmZpcnN0VXBkYXRlLGxhc3RVcGRhdGU6YS5sYXN0VXBkYXRlLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fWZ1bmN0aW9uIG5mKGEpe3JldHVybntleHBpcmF0aW9uVGltZTphLHRhZzokZyxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGwsbmV4dEVmZmVjdDpudWxsfX1mdW5jdGlvbiBkaChhLGIpe251bGw9PT1hLmxhc3RVcGRhdGU/YS5maXJzdFVwZGF0ZT1hLmxhc3RVcGRhdGU9YjooYS5sYXN0VXBkYXRlLm5leHQ9YixhLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBwZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKG51bGw9PT1jKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO3ZhciBlPW51bGw7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9YmgoYS5tZW1vaXplZFN0YXRlKSl9ZWxzZSBkPWEudXBkYXRlUXVldWUsZT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1kP251bGw9PT1lPyhkPWEudXBkYXRlUXVldWU9YmgoYS5tZW1vaXplZFN0YXRlKSxlPWMudXBkYXRlUXVldWU9YmgoYy5tZW1vaXplZFN0YXRlKSk6ZD1hLnVwZGF0ZVF1ZXVlPWNoKGUpOm51bGw9PT1lJiYoZT1jLnVwZGF0ZVF1ZXVlPWNoKGQpKTtudWxsPT09ZXx8ZD09PWU/ZGgoZCxiKTpudWxsPT09ZC5sYXN0VXBkYXRlfHxudWxsPT09ZS5sYXN0VXBkYXRlPyhkaChkLGIpLGRoKGUsYikpOihkaChkLGIpLGUubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIGVoKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZTtjPW51bGw9PT1jP2EudXBkYXRlUXVldWU9YmgoYS5tZW1vaXplZFN0YXRlKTpmaChhLGMpO251bGw9PT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT9jLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yy5sYXN0Q2FwdHVyZWRVcGRhdGU9YjooYy5sYXN0Q2FwdHVyZWRVcGRhdGUubmV4dD1iLGMubGFzdENhcHR1cmVkVXBkYXRlPWIpfWZ1bmN0aW9uIGZoKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmI9PT1jLnVwZGF0ZVF1ZXVlJiYoYj1hLnVwZGF0ZVF1ZXVlPWNoKGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGdoKGEsYixjLGQsZSxmKXtzd2l0Y2goYy50YWcpe2Nhc2UgcmY6cmV0dXJuIGE9Yy5wYXlsb2FkLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtjYXNlIGFoOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0yMDQ5fDY0O2Nhc2UgJGc6YT1jLnBheWxvYWQ7ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7aWYobnVsbD09PWV8fHZvaWQgMD09PWUpYnJlYWs7cmV0dXJuIG4oe30sZCxlKTtjYXNlIHNmOlBnPSEwfXJldHVybiBkfVxuZnVuY3Rpb24geWYoYSxiLGMsZCxlKXtQZz0hMTtiPWZoKGEsYik7Zm9yKHZhciBmPWIuYmFzZVN0YXRlLGc9bnVsbCxoPTAsbD1iLmZpcnN0VXBkYXRlLGs9ZjtudWxsIT09bDspe3ZhciBtPWwuZXhwaXJhdGlvblRpbWU7bTxlPyhudWxsPT09ZyYmKGc9bCxmPWspLGg8bSYmKGg9bSkpOihrPWdoKGEsYixsLGssYyxkKSxudWxsIT09bC5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixsLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWw6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0RWZmZWN0PWwpKSk7bD1sLm5leHR9bT1udWxsO2ZvcihsPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09bDspe3ZhciBwPWwuZXhwaXJhdGlvblRpbWU7cDxlPyhudWxsPT09bSYmKG09bCxudWxsPT09ZyYmKGY9aykpLGg8cCYmKGg9cCkpOihrPWdoKGEsYixsLGssYyxkKSxudWxsIT09bC5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD1cbjMyLGwubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bDooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1sLGIubGFzdENhcHR1cmVkRWZmZWN0PWwpKSk7bD1sLm5leHR9bnVsbD09PWcmJihiLmxhc3RVcGRhdGU9bnVsbCk7bnVsbD09PW0/Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbDphLmVmZmVjdFRhZ3w9MzI7bnVsbD09PWcmJm51bGw9PT1tJiYoZj1rKTtiLmJhc2VTdGF0ZT1mO2IuZmlyc3RVcGRhdGU9ZztiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9bTthLmV4cGlyYXRpb25UaW1lPWg7YS5tZW1vaXplZFN0YXRlPWt9XG5mdW5jdGlvbiBoaChhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7aWgoYi5maXJzdEVmZmVjdCxjKTtiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO2loKGIuZmlyc3RDYXB0dXJlZEVmZmVjdCxjKTtiLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bnVsbH1mdW5jdGlvbiBpaChhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmNhbGxiYWNrO2lmKG51bGwhPT1jKXthLmNhbGxiYWNrPW51bGw7dmFyIGQ9YjtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMTkxXCIsYyk6dm9pZCAwO2MuY2FsbChkKX1hPWEubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBqaChhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmpjKGIpfX1mdW5jdGlvbiBraChhKXthLmVmZmVjdFRhZ3w9NH12YXIgbGg9dm9pZCAwLG1oPXZvaWQgMCxuaD12b2lkIDAsb2g9dm9pZCAwO2xoPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTttaD1mdW5jdGlvbigpe307XG5uaD1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7SWYoTi5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9dmMoZyxmKTtkPXZjKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj0kZChnLGYpO2Q9JGQoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1iZShnLGYpO2Q9YmUoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz10ZSl9cWUoYyxkKTtnPWM9dm9pZCAwO3ZhciBoPW51bGw7Zm9yKGMgaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShjKSYmZi5oYXNPd25Qcm9wZXJ0eShjKSYmbnVsbCE9ZltjXSlpZihcInN0eWxlXCI9PT1cbmMpe3ZhciBsPWZbY107Zm9yKGcgaW4gbClsLmhhc093blByb3BlcnR5KGcpJiYoaHx8KGg9e30pLGhbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWMmJlwiY2hpbGRyZW5cIiE9PWMmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmXCJhdXRvRm9jdXNcIiE9PWMmJihyYS5oYXNPd25Qcm9wZXJ0eShjKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goYyxudWxsKSk7Zm9yKGMgaW4gZCl7dmFyIGs9ZFtjXTtsPW51bGwhPWY/ZltjXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShjKSYmayE9PWwmJihudWxsIT1rfHxudWxsIT1sKSlpZihcInN0eWxlXCI9PT1jKWlmKGwpe2ZvcihnIGluIGwpIWwuaGFzT3duUHJvcGVydHkoZyl8fGsmJmsuaGFzT3duUHJvcGVydHkoZyl8fChofHwoaD17fSksaFtnXT1cIlwiKTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJmxbZ10hPT1rW2ddJiYoaHx8XG4oaD17fSksaFtnXT1rW2ddKX1lbHNlIGh8fChhfHwoYT1bXSksYS5wdXNoKGMsaCkpLGg9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Yz8oaz1rP2suX19odG1sOnZvaWQgMCxsPWw/bC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmwhPT1rJiYoYT1hfHxbXSkucHVzaChjLFwiXCIraykpOlwiY2hpbGRyZW5cIj09PWM/bD09PWt8fFwic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoYT1hfHxbXSkucHVzaChjLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiYocmEuaGFzT3duUHJvcGVydHkoYyk/KG51bGwhPWsmJnNlKGUsYyksYXx8bD09PWt8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goYyxrKSl9aCYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGgpO2U9YTsoYi51cGRhdGVRdWV1ZT1lKSYma2goYil9fTtvaD1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYma2goYil9O1xudmFyIHBoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIHFoKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9amMoYykpO251bGwhPT1jJiZpYyhjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZpYyhhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiByaChhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtzaChhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiB0aChhLGIsYyl7Yz1jLnVwZGF0ZVF1ZXVlO2M9bnVsbCE9PWM/Yy5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWMpe3ZhciBkPWM9Yy5uZXh0O2Rve2lmKChkLnRhZyZhKSE9PU5mKXt2YXIgZT1kLmRlc3Ryb3k7ZC5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1lJiZlKCl9KGQudGFnJmIpIT09TmYmJihlPWQuY3JlYXRlLGQuZGVzdHJveT1lKCkpO2Q9ZC5uZXh0fXdoaWxlKGQhPT1jKX19XG5mdW5jdGlvbiB1aChhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9bmUoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMTM9PT1jLnRhZyYmbnVsbCE9PWMubWVtb2l6ZWRTdGF0ZSl7ZD1jLmNoaWxkLnNpYmxpbmc7ZC5yZXR1cm49YztjPWQ7Y29udGludWV9ZWxzZSBpZihudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxcbmMucmV0dXJuPT09YSlyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIHZoKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBSZSYmUmUoYSk7c3dpdGNoKGEudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YiYmKGI9Yi5sYXN0RWZmZWN0LG51bGwhPT1iKSl7dmFyIGM9Yj1iLm5leHQ7ZG97dmFyIGQ9Yy5kZXN0cm95O2lmKHZvaWQgMCE9PWQpe3ZhciBlPWE7dHJ5e2QoKX1jYXRjaChmKXtzaChlLGYpfX1jPWMubmV4dH13aGlsZShjIT09Yil9YnJlYWs7Y2FzZSAxOnJoKGEpO2I9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtzaChhLGYpfWJyZWFrO2Nhc2UgNTpyaChhKTticmVhaztjYXNlIDQ6d2goYSl9fVxuZnVuY3Rpb24geGgoYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiB5aChhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZih4aChiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59eChcIjE2MFwiKTtjPXZvaWQgMH12YXIgZD1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpiPWMuc3RhdGVOb2RlO2Q9ITE7YnJlYWs7Y2FzZSAzOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OngoXCIxNjFcIil9Yy5lZmZlY3RUYWcmMTYmJihrZShiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8eGgoYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmXG4yKWNvbnRpbnVlIGI7aWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXtpZig1PT09ZS50YWd8fDY9PT1lLnRhZylpZihjKWlmKGQpe3ZhciBmPWIsZz1lLnN0YXRlTm9kZSxoPWM7OD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLGgpOmYuaW5zZXJ0QmVmb3JlKGcsaCl9ZWxzZSBiLmluc2VydEJlZm9yZShlLnN0YXRlTm9kZSxjKTtlbHNlIGQ/KGc9YixoPWUuc3RhdGVOb2RlLDg9PT1nLm5vZGVUeXBlPyhmPWcucGFyZW50Tm9kZSxmLmluc2VydEJlZm9yZShoLGcpKTooZj1nLGYuYXBwZW5kQ2hpbGQoaCkpLGc9Zy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1nJiZ2b2lkIDAhPT1nfHxudWxsIT09Zi5vbmNsaWNrfHwoZi5vbmNsaWNrPXRlKSk6Yi5hcHBlbmRDaGlsZChlLnN0YXRlTm9kZSk7XG5lbHNlIGlmKDQhPT1lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gd2goYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iLnJldHVybjthOmZvcig7Oyl7bnVsbD09PWM/eChcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6ZD1jLnN0YXRlTm9kZTtlPSExO2JyZWFrIGE7Y2FzZSAzOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGE7Y2FzZSA0OmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGF9Yz1jLnJldHVybn1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXthOmZvcih2YXIgZj1iLGc9Zjs7KWlmKHZoKGcpLG51bGwhPT1nLmNoaWxkJiY0IT09Zy50YWcpZy5jaGlsZC5yZXR1cm49ZyxnPWcuY2hpbGQ7ZWxzZXtpZihnPT09ZilicmVhaztmb3IoO251bGw9PT1nLnNpYmxpbmc7KXtpZihudWxsPT09Zy5yZXR1cm58fGcucmV0dXJuPT09ZilicmVhayBhO2c9Zy5yZXR1cm59Zy5zaWJsaW5nLnJldHVybj1nLnJldHVybjtnPWcuc2libGluZ31lP1xuKGY9ZCxnPWIuc3RhdGVOb2RlLDg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnKTpmLnJlbW92ZUNoaWxkKGcpKTpkLnJlbW92ZUNoaWxkKGIuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1iLnRhZyl7aWYobnVsbCE9PWIuY2hpbGQpe2Q9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKHZoKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm47Yj1iLnJldHVybjs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1cbmZ1bmN0aW9uIHpoKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6dGgoUGYsUWYsYik7YnJlYWs7Y2FzZSAxOmJyZWFrO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHM7YT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDt2YXIgZT1iLnR5cGUsZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtudWxsIT09ZiYmQ2UoYyxmLGUsYSxkLGIpfWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2MlwiKTp2b2lkIDA7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmM9Yi5tZW1vaXplZFN0YXRlO2Q9dm9pZCAwO2E9YjtudWxsPT09Yz9kPSExOihkPSEwLGE9Yi5jaGlsZCwwPT09Yy50aW1lZE91dEF0JiYoYy50aW1lZE91dEF0PWxmKCkpKTtudWxsIT09YSYmdWgoYSxkKTtjPVxuYi51cGRhdGVRdWV1ZTtpZihudWxsIT09Yyl7Yi51cGRhdGVRdWV1ZT1udWxsO3ZhciBnPWIuc3RhdGVOb2RlO251bGw9PT1nJiYoZz1iLnN0YXRlTm9kZT1uZXcgcGgpO2MuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYz1BaC5iaW5kKG51bGwsYixhKTtnLmhhcyhhKXx8KGcuYWRkKGEpLGEudGhlbihjLGMpKX0pfWJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp4KFwiMTYzXCIpfX12YXIgQmg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gQ2goYSxiLGMpe2M9bmYoYyk7Yy50YWc9YWg7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe0RoKGQpO3FoKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gRWgoYSxiLGMpe2M9bmYoYyk7Yy50YWc9YWg7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PUZoP0ZoPW5ldyBTZXQoW3RoaXNdKTpGaC5hZGQodGhpcykpO3ZhciBjPWIudmFsdWUsZT1iLnN0YWNrO3FoKGEsYik7dGhpcy5jb21wb25lbnREaWRDYXRjaChjLHtjb21wb25lbnRTdGFjazpudWxsIT09ZT9lOlwiXCJ9KX0pO3JldHVybiBjfVxuZnVuY3Rpb24gR2goYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6SihhLnR5cGUpJiZLZShhKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAzOnJldHVybiBLZihhKSxMZShhKSxiPWEuZWZmZWN0VGFnLDAhPT0oYiY2NCk/eChcIjI4NVwiKTp2b2lkIDAsYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhO2Nhc2UgNTpyZXR1cm4gTWYoYSksbnVsbDtjYXNlIDEzOnJldHVybiBiPWEuZWZmZWN0VGFnLGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgMTg6cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBLZihhKSxudWxsO2Nhc2UgMTA6cmV0dXJuIFpnKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgSGg9VGIuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixJaD1UYi5SZWFjdEN1cnJlbnRPd25lcixKaD0xMDczNzQxODIyLEtoPSExLFQ9bnVsbCxMaD1udWxsLFU9MCxNaD0tMSxOaD0hMSxWPW51bGwsT2g9ITEsUGg9bnVsbCxRaD1udWxsLFJoPW51bGwsRmg9bnVsbDtmdW5jdGlvbiBTaCgpe2lmKG51bGwhPT1UKWZvcih2YXIgYT1ULnJldHVybjtudWxsIT09YTspe3ZhciBiPWE7c3dpdGNoKGIudGFnKXtjYXNlIDE6dmFyIGM9Yi50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1jJiZ2b2lkIDAhPT1jJiZLZShiKTticmVhaztjYXNlIDM6S2YoYik7TGUoYik7YnJlYWs7Y2FzZSA1Ok1mKGIpO2JyZWFrO2Nhc2UgNDpLZihiKTticmVhaztjYXNlIDEwOlpnKGIpfWE9YS5yZXR1cm59TGg9bnVsbDtVPTA7TWg9LTE7Tmg9ITE7VD1udWxsfVxuZnVuY3Rpb24gVGgoKXtmb3IoO251bGwhPT1WOyl7dmFyIGE9Vi5lZmZlY3RUYWc7YSYxNiYma2UoVi5zdGF0ZU5vZGUsXCJcIik7aWYoYSYxMjgpe3ZhciBiPVYuYWx0ZXJuYXRlO251bGwhPT1iJiYoYj1iLnJlZixudWxsIT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IobnVsbCk6Yi5jdXJyZW50PW51bGwpKX1zd2l0Y2goYSYxNCl7Y2FzZSAyOnloKFYpO1YuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6eWgoVik7Vi5lZmZlY3RUYWcmPS0zO3poKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgNDp6aChWLmFsdGVybmF0ZSxWKTticmVhaztjYXNlIDg6YT1WLHdoKGEpLGEucmV0dXJuPW51bGwsYS5jaGlsZD1udWxsLGEubWVtb2l6ZWRTdGF0ZT1udWxsLGEudXBkYXRlUXVldWU9bnVsbCxhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYS5yZXR1cm49bnVsbCxhLmNoaWxkPW51bGwsYS5tZW1vaXplZFN0YXRlPW51bGwsYS51cGRhdGVRdWV1ZT1udWxsKX1WPVYubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBVaCgpe2Zvcig7bnVsbCE9PVY7KXtpZihWLmVmZmVjdFRhZyYyNTYpYTp7dmFyIGE9Vi5hbHRlcm5hdGUsYj1WO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aChPZixOZixiKTticmVhayBhO2Nhc2UgMTppZihiLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOkwoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1icmVhayBhO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrIGE7ZGVmYXVsdDp4KFwiMTYzXCIpfX1WPVYubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBWaChhLGIpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYz1WLmVmZmVjdFRhZztpZihjJjM2KXt2YXIgZD1WLmFsdGVybmF0ZSxlPVYsZj1iO3N3aXRjaChlLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aChSZixTZixlKTticmVhaztjYXNlIDE6dmFyIGc9ZS5zdGF0ZU5vZGU7aWYoZS5lZmZlY3RUYWcmNClpZihudWxsPT09ZClnLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgaD1lLmVsZW1lbnRUeXBlPT09ZS50eXBlP2QubWVtb2l6ZWRQcm9wczpMKGUudHlwZSxkLm1lbW9pemVkUHJvcHMpO2cuY29tcG9uZW50RGlkVXBkYXRlKGgsZC5tZW1vaXplZFN0YXRlLGcuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfWQ9ZS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmaGgoZSxkLGcsZik7YnJlYWs7Y2FzZSAzOmQ9ZS51cGRhdGVRdWV1ZTtpZihudWxsIT09ZCl7Zz1udWxsO2lmKG51bGwhPT1lLmNoaWxkKXN3aXRjaChlLmNoaWxkLnRhZyl7Y2FzZSA1Omc9XG5lLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6Zz1lLmNoaWxkLnN0YXRlTm9kZX1oaChlLGQsZyxmKX1icmVhaztjYXNlIDU6Zj1lLnN0YXRlTm9kZTtudWxsPT09ZCYmZS5lZmZlY3RUYWcmNCYmd2UoZS50eXBlLGUubWVtb2l6ZWRQcm9wcykmJmYuZm9jdXMoKTticmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzpicmVhaztjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6eChcIjE2M1wiKX19YyYxMjgmJihlPVYucmVmLG51bGwhPT1lJiYoZj1WLnN0YXRlTm9kZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9lKGYpOmUuY3VycmVudD1mKSk7YyY1MTImJihQaD1hKTtWPVYubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBXaChhLGIpe1JoPVFoPVBoPW51bGw7dmFyIGM9VztXPSEwO2Rve2lmKGIuZWZmZWN0VGFnJjUxMil7dmFyIGQ9ITEsZT12b2lkIDA7dHJ5e3ZhciBmPWI7dGgoVWYsTmYsZik7dGgoTmYsVGYsZil9Y2F0Y2goZyl7ZD0hMCxlPWd9ZCYmc2goYixlKX1iPWIubmV4dEVmZmVjdH13aGlsZShudWxsIT09Yik7Vz1jO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmWGgoYSxjKTtYfHxXfHxZaCgxMDczNzQxODIzLCExKX1mdW5jdGlvbiBvZigpe251bGwhPT1RaCYmQmUoUWgpO251bGwhPT1SaCYmUmgoKX1cbmZ1bmN0aW9uIFpoKGEsYil7T2g9S2g9ITA7YS5jdXJyZW50PT09Yj94KFwiMTc3XCIpOnZvaWQgMDt2YXIgYz1hLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTswPT09Yz94KFwiMjYxXCIpOnZvaWQgMDthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBkPWIuZXhwaXJhdGlvblRpbWUsZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU7ZWYoYSxlPmQ/ZTpkKTtJaC5jdXJyZW50PW51bGw7ZD12b2lkIDA7MTxiLmVmZmVjdFRhZz9udWxsIT09Yi5sYXN0RWZmZWN0PyhiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iLGQ9Yi5maXJzdEVmZmVjdCk6ZD1iOmQ9Yi5maXJzdEVmZmVjdDt1ZT1CZDt2ZT1QZCgpO0JkPSExO2ZvcihWPWQ7bnVsbCE9PVY7KXtlPSExO3ZhciBmPXZvaWQgMDt0cnl7VWgoKX1jYXRjaChoKXtlPSEwLGY9aH1lJiYobnVsbD09PVY/eChcIjE3OFwiKTp2b2lkIDAsc2goVixmKSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7XG5mPXZvaWQgMDt0cnl7VGgoKX1jYXRjaChoKXtlPSEwLGY9aH1lJiYobnVsbD09PVY/eChcIjE3OFwiKTp2b2lkIDAsc2goVixmKSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9UWQodmUpO3ZlPW51bGw7QmQ9ISF1ZTt1ZT1udWxsO2EuY3VycmVudD1iO2ZvcihWPWQ7bnVsbCE9PVY7KXtlPSExO2Y9dm9pZCAwO3RyeXtWaChhLGMpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1pZihudWxsIT09ZCYmbnVsbCE9PVBoKXt2YXIgZz1XaC5iaW5kKG51bGwsYSxkKTtRaD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIEFlKGcpfSk7Umg9Z31LaD1PaD0hMTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgUWUmJlFlKGIuc3RhdGVOb2RlKTtjPWIuZXhwaXJhdGlvblRpbWU7Yj1iLmNoaWxkRXhwaXJhdGlvblRpbWU7Yj1cbmI+Yz9iOmM7MD09PWImJihGaD1udWxsKTskaChhLGIpfVxuZnVuY3Rpb24gYWkoYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmMTAyNCkpe1Q9YTthOnt2YXIgZT1iO2I9YTt2YXIgZj1VO3ZhciBnPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgMTY6YnJlYWs7Y2FzZSAxNTpjYXNlIDA6YnJlYWs7Y2FzZSAxOkooYi50eXBlKSYmS2UoYik7YnJlYWs7Y2FzZSAzOktmKGIpO0xlKGIpO2c9Yi5zdGF0ZU5vZGU7Zy5wZW5kaW5nQ29udGV4dCYmKGcuY29udGV4dD1nLnBlbmRpbmdDb250ZXh0LGcucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWV8fG51bGw9PT1lLmNoaWxkKUVnKGIpLGIuZWZmZWN0VGFnJj0tMzttaChiKTticmVhaztjYXNlIDU6TWYoYik7dmFyIGg9SWYoSGYuY3VycmVudCk7Zj1iLnR5cGU7aWYobnVsbCE9PWUmJm51bGwhPWIuc3RhdGVOb2RlKW5oKGUsYixmLGcsaCksZS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD1cbjEyOCk7ZWxzZSBpZihnKXt2YXIgbD1JZihOLmN1cnJlbnQpO2lmKEVnKGIpKXtnPWI7ZT1nLnN0YXRlTm9kZTt2YXIgaz1nLnR5cGUsbT1nLm1lbW9pemVkUHJvcHMscD1oO2VbRmFdPWc7ZVtHYV09bTtmPXZvaWQgMDtoPWs7c3dpdGNoKGgpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RShcImxvYWRcIixlKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3Ioaz0wO2s8YWIubGVuZ3RoO2srKylFKGFiW2tdLGUpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpFKFwiZXJyb3JcIixlKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpFKFwiZXJyb3JcIixlKTtFKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RShcInJlc2V0XCIsZSk7RShcInN1Ym1pdFwiLGUpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RShcInRvZ2dsZVwiLGUpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOndjKGUsbSk7RShcImludmFsaWRcIixlKTtzZShwLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmUuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O0UoXCJpbnZhbGlkXCIsZSk7c2UocCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmNlKGUsbSksRShcImludmFsaWRcIixlKSxzZShwLFwib25DaGFuZ2VcIil9cWUoaCxtKTtrPW51bGw7Zm9yKGYgaW4gbSltLmhhc093blByb3BlcnR5KGYpJiYobD1tW2ZdLFwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBsP2UudGV4dENvbnRlbnQhPT1sJiYoaz1bXCJjaGlsZHJlblwiLGxdKTpcIm51bWJlclwiPT09dHlwZW9mIGwmJmUudGV4dENvbnRlbnQhPT1cIlwiK2wmJihrPVtcImNoaWxkcmVuXCIsXCJcIitsXSk6cmEuaGFzT3duUHJvcGVydHkoZikmJm51bGwhPWwmJnNlKHAsZikpO3N3aXRjaChoKXtjYXNlIFwiaW5wdXRcIjpSYihlKTtBYyhlLG0sITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlJiKGUpO2VlKGUsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLm9uQ2xpY2smJlxuKGUub25jbGljaz10ZSl9Zj1rO2cudXBkYXRlUXVldWU9ZjtnPW51bGwhPT1mPyEwOiExO2cmJmtoKGIpfWVsc2V7bT1iO2U9ZjtwPWc7az05PT09aC5ub2RlVHlwZT9oOmgub3duZXJEb2N1bWVudDtsPT09ZmUuaHRtbCYmKGw9Z2UoZSkpO2w9PT1mZS5odG1sP1wic2NyaXB0XCI9PT1lPyhlPWsuY3JlYXRlRWxlbWVudChcImRpdlwiKSxlLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGs9ZS5yZW1vdmVDaGlsZChlLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIHAuaXM/az1rLmNyZWF0ZUVsZW1lbnQoZSx7aXM6cC5pc30pOihrPWsuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmcC5tdWx0aXBsZSYmKGsubXVsdGlwbGU9ITApKTprPWsuY3JlYXRlRWxlbWVudE5TKGwsZSk7ZT1rO2VbRmFdPW07ZVtHYV09ZztsaChlLGIsITEsITEpO3A9ZTtrPWY7bT1nO3ZhciB0PWgsQT1yZShrLG0pO3N3aXRjaChrKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkUoXCJsb2FkXCIsXG5wKTtoPW07YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGFiLmxlbmd0aDtoKyspRShhYltoXSxwKTtoPW07YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkUoXCJlcnJvclwiLHApO2g9bTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpFKFwiZXJyb3JcIixwKTtFKFwibG9hZFwiLHApO2g9bTticmVhaztjYXNlIFwiZm9ybVwiOkUoXCJyZXNldFwiLHApO0UoXCJzdWJtaXRcIixwKTtoPW07YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpFKFwidG9nZ2xlXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOndjKHAsbSk7aD12YyhwLG0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPSRkKHAsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnAuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtoPW4oe30sbSx7dmFsdWU6dm9pZCAwfSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2UocCxcbm0pO2g9YmUocCxtKTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9bX1xZShrLGgpO2w9dm9pZCAwO3ZhciB2PWssUj1wLHU9aDtmb3IobCBpbiB1KWlmKHUuaGFzT3duUHJvcGVydHkobCkpe3ZhciBxPXVbbF07XCJzdHlsZVwiPT09bD9vZShSLHEpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWw/KHE9cT9xLl9faHRtbDp2b2lkIDAsbnVsbCE9cSYmamUoUixxKSk6XCJjaGlsZHJlblwiPT09bD9cInN0cmluZ1wiPT09dHlwZW9mIHE/KFwidGV4dGFyZWFcIiE9PXZ8fFwiXCIhPT1xKSYma2UoUixxKTpcIm51bWJlclwiPT09dHlwZW9mIHEmJmtlKFIsXCJcIitxKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYocmEuaGFzT3duUHJvcGVydHkobCk/bnVsbCE9cSYmc2UodCxsKTpudWxsIT1xJiZ0YyhSLGwscSxBKSl9c3dpdGNoKGspe2Nhc2UgXCJpbnB1dFwiOlJiKHApO1xuQWMocCxtLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpSYihwKTtlZShwLG0pO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1tLnZhbHVlJiZwLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIit1YyhtLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmg9cDtoLm11bHRpcGxlPSEhbS5tdWx0aXBsZTtwPW0udmFsdWU7bnVsbCE9cD9hZShoLCEhbS5tdWx0aXBsZSxwLCExKTpudWxsIT1tLmRlZmF1bHRWYWx1ZSYmYWUoaCwhIW0ubXVsdGlwbGUsbS5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKHAub25jbGljaz10ZSl9KGc9d2UoZixnKSkmJmtoKGIpO2Iuc3RhdGVOb2RlPWV9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2NlwiKTp2b2lkIDA7YnJlYWs7Y2FzZSA2OmUmJm51bGwhPWIuc3RhdGVOb2RlP29oKGUsYixlLm1lbW9pemVkUHJvcHMsZyk6KFwic3RyaW5nXCIhPT1cbnR5cGVvZiBnJiYobnVsbD09PWIuc3RhdGVOb2RlP3goXCIxNjZcIik6dm9pZCAwKSxlPUlmKEhmLmN1cnJlbnQpLElmKE4uY3VycmVudCksRWcoYik/KGc9YixmPWcuc3RhdGVOb2RlLGU9Zy5tZW1vaXplZFByb3BzLGZbRmFdPWcsKGc9Zi5ub2RlVmFsdWUhPT1lKSYma2goYikpOihmPWIsZz0oOT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGcpLGdbRmFdPWIsZi5zdGF0ZU5vZGU9ZykpO2JyZWFrO2Nhc2UgMTE6YnJlYWs7Y2FzZSAxMzpnPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSl7Yi5leHBpcmF0aW9uVGltZT1mO1Q9YjticmVhayBhfWc9bnVsbCE9PWc7Zj1udWxsIT09ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmIWcmJmYmJihlPWUuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGg9Yi5maXJzdEVmZmVjdCxudWxsIT09aD8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1oKTooYi5maXJzdEVmZmVjdD1cbmIubGFzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSk7aWYoZ3x8ZiliLmVmZmVjdFRhZ3w9NDticmVhaztjYXNlIDc6YnJlYWs7Y2FzZSA4OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSA0OktmKGIpO21oKGIpO2JyZWFrO2Nhc2UgMTA6WmcoYik7YnJlYWs7Y2FzZSA5OmJyZWFrO2Nhc2UgMTQ6YnJlYWs7Y2FzZSAxNzpKKGIudHlwZSkmJktlKGIpO2JyZWFrO2Nhc2UgMTg6YnJlYWs7ZGVmYXVsdDp4KFwiMTU2XCIpfVQ9bnVsbH1iPWE7aWYoMT09PVV8fDEhPT1iLmNoaWxkRXhwaXJhdGlvblRpbWUpe2c9MDtmb3IoZj1iLmNoaWxkO251bGwhPT1mOyllPWYuZXhwaXJhdGlvblRpbWUsaD1mLmNoaWxkRXhwaXJhdGlvblRpbWUsZT5nJiYoZz1lKSxoPmcmJihnPWgpLGY9Zi5zaWJsaW5nO2IuY2hpbGRFeHBpcmF0aW9uVGltZT1nfWlmKG51bGwhPT1UKXJldHVybiBUO251bGwhPT1jJiYwPT09KGMuZWZmZWN0VGFnJjEwMjQpJiYobnVsbD09PWMuZmlyc3RFZmZlY3QmJlxuKGMuZmlyc3RFZmZlY3Q9YS5maXJzdEVmZmVjdCksbnVsbCE9PWEubGFzdEVmZmVjdCYmKG51bGwhPT1jLmxhc3RFZmZlY3QmJihjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxjLmxhc3RFZmZlY3Q9YS5sYXN0RWZmZWN0KSwxPGEuZWZmZWN0VGFnJiYobnVsbCE9PWMubGFzdEVmZmVjdD9jLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hOmMuZmlyc3RFZmZlY3Q9YSxjLmxhc3RFZmZlY3Q9YSkpfWVsc2V7YT1HaChhLFUpO2lmKG51bGwhPT1hKXJldHVybiBhLmVmZmVjdFRhZyY9MTAyMyxhO251bGwhPT1jJiYoYy5maXJzdEVmZmVjdD1jLmxhc3RFZmZlY3Q9bnVsbCxjLmVmZmVjdFRhZ3w9MTAyNCl9aWYobnVsbCE9PWQpcmV0dXJuIGQ7aWYobnVsbCE9PWMpYT1jO2Vsc2UgYnJlYWt9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBiaShhKXt2YXIgYj1UZyhhLmFsdGVybmF0ZSxhLFUpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9YWkoYSkpO0loLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIGNpKGEsYil7S2g/eChcIjI0M1wiKTp2b2lkIDA7b2YoKTtLaD0hMDt2YXIgYz1IaC5jdXJyZW50O0hoLmN1cnJlbnQ9a2c7dmFyIGQ9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjtpZihkIT09VXx8YSE9PUxofHxudWxsPT09VClTaCgpLExoPWEsVT1kLFQ9WGUoTGguY3VycmVudCxudWxsLFUpLGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGU9ITE7ZG97dHJ5e2lmKGIpZm9yKDtudWxsIT09VCYmIWRpKCk7KVQ9YmkoVCk7ZWxzZSBmb3IoO251bGwhPT1UOylUPWJpKFQpfWNhdGNoKHUpe2lmKFlnPVhnPVdnPW51bGwsbGcoKSxudWxsPT09VCllPSEwLERoKHUpO2Vsc2V7bnVsbD09PVQ/eChcIjI3MVwiKTp2b2lkIDA7dmFyIGY9VCxnPWYucmV0dXJuO2lmKG51bGw9PT1nKWU9ITAsRGgodSk7ZWxzZXthOnt2YXIgaD1hLGw9ZyxrPWYsbT11O2c9VTtrLmVmZmVjdFRhZ3w9MTAyNDtrLmZpcnN0RWZmZWN0PWsubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1cbm0mJlwib2JqZWN0XCI9PT10eXBlb2YgbSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIG0udGhlbil7dmFyIHA9bTttPWw7dmFyIHQ9LTEsQT0tMTtkb3tpZigxMz09PW0udGFnKXt2YXIgdj1tLmFsdGVybmF0ZTtpZihudWxsIT09diYmKHY9di5tZW1vaXplZFN0YXRlLG51bGwhPT12KSl7QT0xMCooMTA3Mzc0MTgyMi12LnRpbWVkT3V0QXQpO2JyZWFrfXY9bS5wZW5kaW5nUHJvcHMubWF4RHVyYXRpb247aWYoXCJudW1iZXJcIj09PXR5cGVvZiB2KWlmKDA+PXYpdD0wO2Vsc2UgaWYoLTE9PT10fHx2PHQpdD12fW09bS5yZXR1cm59d2hpbGUobnVsbCE9PW0pO209bDtkb3tpZih2PTEzPT09bS50YWcpdj12b2lkIDA9PT1tLm1lbW9pemVkUHJvcHMuZmFsbGJhY2s/ITE6bnVsbD09PW0ubWVtb2l6ZWRTdGF0ZTtpZih2KXtsPW0udXBkYXRlUXVldWU7bnVsbD09PWw/KGw9bmV3IFNldCxsLmFkZChwKSxtLnVwZGF0ZVF1ZXVlPWwpOmwuYWRkKHApO2lmKDA9PT0obS5tb2RlJjEpKXttLmVmZmVjdFRhZ3w9XG42NDtrLmVmZmVjdFRhZyY9LTE5NTc7MT09PWsudGFnJiYobnVsbD09PWsuYWx0ZXJuYXRlP2sudGFnPTE3OihnPW5mKDEwNzM3NDE4MjMpLGcudGFnPXNmLHBmKGssZykpKTtrLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7YnJlYWsgYX1rPWg7bD1nO3ZhciBSPWsucGluZ0NhY2hlO251bGw9PT1SPyhSPWsucGluZ0NhY2hlPW5ldyBCaCx2PW5ldyBTZXQsUi5zZXQocCx2KSk6KHY9Ui5nZXQocCksdm9pZCAwPT09diYmKHY9bmV3IFNldCxSLnNldChwLHYpKSk7di5oYXMobCl8fCh2LmFkZChsKSxrPWVpLmJpbmQobnVsbCxrLHAsbCkscC50aGVuKGssaykpOy0xPT09dD9oPTEwNzM3NDE4MjM6KC0xPT09QSYmKEE9MTAqKDEwNzM3NDE4MjItZ2YoaCxnKSktNUUzKSxoPUErdCk7MDw9aCYmTWg8aCYmKE1oPWgpO20uZWZmZWN0VGFnfD0yMDQ4O20uZXhwaXJhdGlvblRpbWU9ZzticmVhayBhfW09bS5yZXR1cm59d2hpbGUobnVsbCE9PW0pO209RXJyb3IoKGljKGsudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXG5cIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK2pjKGspKX1OaD0hMDttPWpoKG0sayk7aD1sO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmguZWZmZWN0VGFnfD0yMDQ4O2guZXhwaXJhdGlvblRpbWU9ZztnPUNoKGgsbSxnKTtlaChoLGcpO2JyZWFrIGE7Y2FzZSAxOmlmKHQ9bSxBPWgudHlwZSxrPWguc3RhdGVOb2RlLDA9PT0oaC5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEEuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09ayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGsuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Rmh8fCFGaC5oYXMoaykpKSl7aC5lZmZlY3RUYWd8PTIwNDg7XG5oLmV4cGlyYXRpb25UaW1lPWc7Zz1FaChoLHQsZyk7ZWgoaCxnKTticmVhayBhfX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKX1UPWFpKGYpO2NvbnRpbnVlfX19YnJlYWt9d2hpbGUoMSk7S2g9ITE7SGguY3VycmVudD1jO1lnPVhnPVdnPW51bGw7bGcoKTtpZihlKUxoPW51bGwsYS5maW5pc2hlZFdvcms9bnVsbDtlbHNlIGlmKG51bGwhPT1UKWEuZmluaXNoZWRXb3JrPW51bGw7ZWxzZXtjPWEuY3VycmVudC5hbHRlcm5hdGU7bnVsbD09PWM/eChcIjI4MVwiKTp2b2lkIDA7TGg9bnVsbDtpZihOaCl7ZT1hLmxhdGVzdFBlbmRpbmdUaW1lO2Y9YS5sYXRlc3RTdXNwZW5kZWRUaW1lO2c9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDAhPT1lJiZlPGR8fDAhPT1mJiZmPGR8fDAhPT1nJiZnPGQpe2ZmKGEsZCk7ZmkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwtMSk7cmV0dXJufWlmKCFhLmRpZEVycm9yJiZiKXthLmRpZEVycm9yPSEwO2Q9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1kO1xuYj1hLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7ZmkoYSxjLGQsYiwtMSk7cmV0dXJufX1iJiYtMSE9PU1oPyhmZihhLGQpLGI9MTAqKDEwNzM3NDE4MjItZ2YoYSxkKSksYjxNaCYmKE1oPWIpLGI9MTAqKDEwNzM3NDE4MjItbGYoKSksYj1NaC1iLGZpKGEsYyxkLGEuZXhwaXJhdGlvblRpbWUsMD5iPzA6YikpOihhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1kLGEuZmluaXNoZWRXb3JrPWMpfX1cbmZ1bmN0aW9uIHNoKGEsYil7Zm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7c3dpdGNoKGMudGFnKXtjYXNlIDE6dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PUZofHwhRmguaGFzKGQpKSl7YT1qaChiLGEpO2E9RWgoYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7cWYoYywxMDczNzQxODIzKTtyZXR1cm59YnJlYWs7Y2FzZSAzOmE9amgoYixhKTthPUNoKGMsYSwxMDczNzQxODIzKTtwZihjLGEpO3FmKGMsMTA3Mzc0MTgyMyk7cmV0dXJufWM9Yy5yZXR1cm59Mz09PWEudGFnJiYoYz1qaChiLGEpLGM9Q2goYSxjLDEwNzM3NDE4MjMpLHBmKGEsYykscWYoYSwxMDczNzQxODIzKSl9XG5mdW5jdGlvbiBtZihhLGIpe3ZhciBjPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwoKSxkPXZvaWQgMDtpZigwPT09KGIubW9kZSYxKSlkPTEwNzM3NDE4MjM7ZWxzZSBpZihLaCYmIU9oKWQ9VTtlbHNle3N3aXRjaChjKXtjYXNlIHIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk6ZD0xMDczNzQxODIzO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eTpkPTEwNzM3NDE4MjItMTAqKCgoMTA3Mzc0MTgyMi1hKzE1KS8xMHwwKSsxKTticmVhaztjYXNlIHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk6ZD0xMDczNzQxODIyLTI1KigoKDEwNzM3NDE4MjItYSs1MDApLzI1fDApKzEpO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Mb3dQcmlvcml0eTpjYXNlIHIudW5zdGFibGVfSWRsZVByaW9yaXR5OmQ9MTticmVhaztkZWZhdWx0OngoXCIzMTNcIil9bnVsbCE9PUxoJiZkPT09VSYmLS1kfWM9PT1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5JiZcbigwPT09Z2l8fGQ8Z2kpJiYoZ2k9ZCk7cmV0dXJuIGR9ZnVuY3Rpb24gZWkoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtpZihudWxsIT09TGgmJlU9PT1jKUxoPW51bGw7ZWxzZSBpZihiPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXRlc3RTdXNwZW5kZWRUaW1lLDAhPT1iJiZjPD1iJiZjPj1kKXthLmRpZEVycm9yPSExO2I9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDA9PT1ifHxiPmMpYS5sYXRlc3RQaW5nZWRUaW1lPWM7ZGYoYyxhKTtjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJlhoKGEsYyl9fWZ1bmN0aW9uIEFoKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9bGYoKTtiPW1mKGIsYSk7YT1oaShhLGIpO251bGwhPT1hJiYoY2YoYSxiKSxiPWEuZXhwaXJhdGlvblRpbWUsMCE9PWImJlhoKGEsYikpfVxuZnVuY3Rpb24gaGkoYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1yZXR1cm4gZX1cbmZ1bmN0aW9uIHFmKGEsYil7YT1oaShhLGIpO251bGwhPT1hJiYoIUtoJiYwIT09VSYmYj5VJiZTaCgpLGNmKGEsYiksS2gmJiFPaCYmTGg9PT1hfHxYaChhLGEuZXhwaXJhdGlvblRpbWUpLGlpPmppJiYoaWk9MCx4KFwiMTg1XCIpKSl9ZnVuY3Rpb24ga2koYSxiLGMsZCxlKXtyZXR1cm4gci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9dmFyIGxpPW51bGwsWT1udWxsLG1pPTAsbmk9dm9pZCAwLFc9ITEsb2k9bnVsbCxaPTAsZ2k9MCxwaT0hMSxxaT1udWxsLFg9ITEscmk9ITEsc2k9bnVsbCx0aT1yLnVuc3RhYmxlX25vdygpLHVpPTEwNzM3NDE4MjItKHRpLzEwfDApLHZpPXVpLGppPTUwLGlpPTAsd2k9bnVsbDtmdW5jdGlvbiB4aSgpe3VpPTEwNzM3NDE4MjItKChyLnVuc3RhYmxlX25vdygpLXRpKS8xMHwwKX1cbmZ1bmN0aW9uIHlpKGEsYil7aWYoMCE9PW1pKXtpZihiPG1pKXJldHVybjtudWxsIT09bmkmJnIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2sobmkpfW1pPWI7YT1yLnVuc3RhYmxlX25vdygpLXRpO25pPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayh6aSx7dGltZW91dDoxMCooMTA3Mzc0MTgyMi1iKS1hfSl9ZnVuY3Rpb24gZmkoYSxiLGMsZCxlKXthLmV4cGlyYXRpb25UaW1lPWQ7MCE9PWV8fGRpKCk/MDxlJiYoYS50aW1lb3V0SGFuZGxlPXllKEFpLmJpbmQobnVsbCxhLGIsYyksZSkpOihhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jLGEuZmluaXNoZWRXb3JrPWIpfWZ1bmN0aW9uIEFpKGEsYixjKXthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jO2EuZmluaXNoZWRXb3JrPWI7eGkoKTt2aT11aTtCaShhLGMpfWZ1bmN0aW9uICRoKGEsYil7YS5leHBpcmF0aW9uVGltZT1iO2EuZmluaXNoZWRXb3JrPW51bGx9XG5mdW5jdGlvbiBsZigpe2lmKFcpcmV0dXJuIHZpO0NpKCk7aWYoMD09PVp8fDE9PT1aKXhpKCksdmk9dWk7cmV0dXJuIHZpfWZ1bmN0aW9uIFhoKGEsYil7bnVsbD09PWEubmV4dFNjaGVkdWxlZFJvb3Q/KGEuZXhwaXJhdGlvblRpbWU9YixudWxsPT09WT8obGk9WT1hLGEubmV4dFNjaGVkdWxlZFJvb3Q9YSk6KFk9WS5uZXh0U2NoZWR1bGVkUm9vdD1hLFkubmV4dFNjaGVkdWxlZFJvb3Q9bGkpKTpiPmEuZXhwaXJhdGlvblRpbWUmJihhLmV4cGlyYXRpb25UaW1lPWIpO1d8fChYP3JpJiYob2k9YSxaPTEwNzM3NDE4MjMsRGkoYSwxMDczNzQxODIzLCExKSk6MTA3Mzc0MTgyMz09PWI/WWgoMTA3Mzc0MTgyMywhMSk6eWkoYSxiKSl9XG5mdW5jdGlvbiBDaSgpe3ZhciBhPTAsYj1udWxsO2lmKG51bGwhPT1ZKWZvcih2YXIgYz1ZLGQ9bGk7bnVsbCE9PWQ7KXt2YXIgZT1kLmV4cGlyYXRpb25UaW1lO2lmKDA9PT1lKXtudWxsPT09Y3x8bnVsbD09PVk/eChcIjI0NFwiKTp2b2lkIDA7aWYoZD09PWQubmV4dFNjaGVkdWxlZFJvb3Qpe2xpPVk9ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgaWYoZD09PWxpKWxpPWU9ZC5uZXh0U2NoZWR1bGVkUm9vdCxZLm5leHRTY2hlZHVsZWRSb290PWUsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Vsc2UgaWYoZD09PVkpe1k9YztZLm5leHRTY2hlZHVsZWRSb290PWxpO2QubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGMubmV4dFNjaGVkdWxlZFJvb3Q9ZC5uZXh0U2NoZWR1bGVkUm9vdCxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZD1jLm5leHRTY2hlZHVsZWRSb290fWVsc2V7ZT5hJiYoYT1lLGI9ZCk7aWYoZD09PVkpYnJlYWs7aWYoMTA3Mzc0MTgyMz09PVxuYSlicmVhaztjPWQ7ZD1kLm5leHRTY2hlZHVsZWRSb290fX1vaT1iO1o9YX12YXIgRWk9ITE7ZnVuY3Rpb24gZGkoKXtyZXR1cm4gRWk/ITA6ci51bnN0YWJsZV9zaG91bGRZaWVsZCgpP0VpPSEwOiExfWZ1bmN0aW9uIHppKCl7dHJ5e2lmKCFkaSgpJiZudWxsIT09bGkpe3hpKCk7dmFyIGE9bGk7ZG97dmFyIGI9YS5leHBpcmF0aW9uVGltZTswIT09YiYmdWk8PWImJihhLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPXVpKTthPWEubmV4dFNjaGVkdWxlZFJvb3R9d2hpbGUoYSE9PWxpKX1ZaCgwLCEwKX1maW5hbGx5e0VpPSExfX1cbmZ1bmN0aW9uIFloKGEsYil7Q2koKTtpZihiKWZvcih4aSgpLHZpPXVpO251bGwhPT1vaSYmMCE9PVomJmE8PVomJiEoRWkmJnVpPlopOylEaShvaSxaLHVpPlopLENpKCkseGkoKSx2aT11aTtlbHNlIGZvcig7bnVsbCE9PW9pJiYwIT09WiYmYTw9WjspRGkob2ksWiwhMSksQ2koKTtiJiYobWk9MCxuaT1udWxsKTswIT09WiYmeWkob2ksWik7aWk9MDt3aT1udWxsO2lmKG51bGwhPT1zaSlmb3IoYT1zaSxzaT1udWxsLGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTt0cnl7Yy5fb25Db21wbGV0ZSgpfWNhdGNoKGQpe3BpfHwocGk9ITAscWk9ZCl9fWlmKHBpKXRocm93IGE9cWkscWk9bnVsbCxwaT0hMSxhO31mdW5jdGlvbiBCaShhLGIpe1c/eChcIjI1M1wiKTp2b2lkIDA7b2k9YTtaPWI7RGkoYSxiLCExKTtZaCgxMDczNzQxODIzLCExKX1cbmZ1bmN0aW9uIERpKGEsYixjKXtXP3goXCIyNDVcIik6dm9pZCAwO1c9ITA7aWYoYyl7dmFyIGQ9YS5maW5pc2hlZFdvcms7bnVsbCE9PWQ/RmkoYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSx6ZShkKSksY2koYSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiYoZGkoKT9hLmZpbmlzaGVkV29yaz1kOkZpKGEsZCxiKSkpfWVsc2UgZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZD9GaShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLHplKGQpKSxjaShhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJkZpKGEsZCxiKSk7Vz0hMX1cbmZ1bmN0aW9uIEZpKGEsYixjKXt2YXIgZD1hLmZpcnN0QmF0Y2g7aWYobnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1jJiYobnVsbD09PXNpP3NpPVtkXTpzaS5wdXNoKGQpLGQuX2RlZmVyKSl7YS5maW5pc2hlZFdvcms9YjthLmV4cGlyYXRpb25UaW1lPTA7cmV0dXJufWEuZmluaXNoZWRXb3JrPW51bGw7YT09PXdpP2lpKys6KHdpPWEsaWk9MCk7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxmdW5jdGlvbigpe1poKGEsYil9KX1mdW5jdGlvbiBEaChhKXtudWxsPT09b2k/eChcIjI0NlwiKTp2b2lkIDA7b2kuZXhwaXJhdGlvblRpbWU9MDtwaXx8KHBpPSEwLHFpPWEpfWZ1bmN0aW9uIEdpKGEsYil7dmFyIGM9WDtYPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhYPWMpfHxXfHxZaCgxMDczNzQxODIzLCExKX19XG5mdW5jdGlvbiBIaShhLGIpe2lmKFgmJiFyaSl7cmk9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7cmk9ITF9fXJldHVybiBhKGIpfWZ1bmN0aW9uIElpKGEsYixjKXtYfHxXfHwwPT09Z2l8fChZaChnaSwhMSksZ2k9MCk7dmFyIGQ9WDtYPSEwO3RyeXtyZXR1cm4gci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxmdW5jdGlvbigpe3JldHVybiBhKGIsYyl9KX1maW5hbGx5eyhYPWQpfHxXfHxZaCgxMDczNzQxODIzLCExKX19XG5mdW5jdGlvbiBKaShhLGIsYyxkLGUpe3ZhciBmPWIuY3VycmVudDthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6ezI9PT1lZChjKSYmMT09PWMudGFnP3ZvaWQgMDp4KFwiMTcwXCIpO3ZhciBnPWM7ZG97c3dpdGNoKGcudGFnKXtjYXNlIDM6Zz1nLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEooZy50eXBlKSl7Zz1nLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1nPWcucmV0dXJufXdoaWxlKG51bGwhPT1nKTt4KFwiMTcxXCIpO2c9dm9pZCAwfWlmKDE9PT1jLnRhZyl7dmFyIGg9Yy50eXBlO2lmKEooaCkpe2M9TmUoYyxoLGcpO2JyZWFrIGF9fWM9Z31lbHNlIGM9SGU7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1lO2U9bmYoZCk7ZS5wYXlsb2FkPXtlbGVtZW50OmF9O2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJihlLmNhbGxiYWNrPWIpO1xub2YoKTtwZihmLGUpO3FmKGYsZCk7cmV0dXJuIGR9ZnVuY3Rpb24gS2koYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9bGYoKTtlPW1mKGYsZSk7cmV0dXJuIEppKGEsYixjLGUsZCl9ZnVuY3Rpb24gTGkoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBNaShhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOldiLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuQWI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjp5YyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9S2EoZCk7ZT92b2lkIDA6eChcIjkwXCIpO1NiKGQpO3ljKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpkZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmYWUoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtcbmZ1bmN0aW9uIE5pKGEpe3ZhciBiPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1sZigpKzUwMCkvMjV8MCkrMSk7Yj49SmgmJihiPUpoLTEpO3RoaXMuX2V4cGlyYXRpb25UaW1lPUpoPWI7dGhpcy5fcm9vdD1hO3RoaXMuX2NhbGxiYWNrcz10aGlzLl9uZXh0PW51bGw7dGhpcy5faGFzQ2hpbGRyZW49dGhpcy5fZGlkQ29tcGxldGU9ITE7dGhpcy5fY2hpbGRyZW49bnVsbDt0aGlzLl9kZWZlcj0hMH1OaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDp4KFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcgT2k7SmkoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1xuTmkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuTmkucHJvdG90eXBlLmNvbW1pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxiPWEuZmlyc3RCYXRjaDt0aGlzLl9kZWZlciYmbnVsbCE9PWI/dm9pZCAwOngoXCIyNTFcIik7aWYodGhpcy5faGFzQ2hpbGRyZW4pe3ZhciBjPXRoaXMuX2V4cGlyYXRpb25UaW1lO2lmKGIhPT10aGlzKXt0aGlzLl9oYXNDaGlsZHJlbiYmKGM9dGhpcy5fZXhwaXJhdGlvblRpbWU9Yi5fZXhwaXJhdGlvblRpbWUsdGhpcy5yZW5kZXIodGhpcy5fY2hpbGRyZW4pKTtmb3IodmFyIGQ9bnVsbCxlPWI7ZSE9PXRoaXM7KWQ9ZSxlPWUuX25leHQ7bnVsbD09PWQ/eChcIjI1MVwiKTp2b2lkIDA7ZC5fbmV4dD1lLl9uZXh0O3RoaXMuX25leHQ9YjthLmZpcnN0QmF0Y2g9dGhpc310aGlzLl9kZWZlcj0hMTtCaShhLGMpO2I9dGhpcy5fbmV4dDt0aGlzLl9uZXh0PW51bGw7Yj1hLmZpcnN0QmF0Y2g9YjtudWxsIT09YiYmYi5faGFzQ2hpbGRyZW4mJmIucmVuZGVyKGIuX2NoaWxkcmVuKX1lbHNlIHRoaXMuX25leHQ9XG5udWxsLHRoaXMuX2RlZmVyPSExfTtOaS5wcm90b3R5cGUuX29uQ29tcGxldGU9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tcGxldGUpe3RoaXMuX2RpZENvbXBsZXRlPSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKykoMCxhW2JdKSgpfX07ZnVuY3Rpb24gT2koKXt0aGlzLl9jYWxsYmFja3M9bnVsbDt0aGlzLl9kaWRDb21taXQ9ITE7dGhpcy5fb25Db21taXQ9dGhpcy5fb25Db21taXQuYmluZCh0aGlzKX1PaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21taXQpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuT2kucHJvdG90eXBlLl9vbkNvbW1pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21taXQpe3RoaXMuX2RpZENvbW1pdD0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/eChcIjE5MVwiLGMpOnZvaWQgMDtjKCl9fX07XG5mdW5jdGlvbiBQaShhLGIsYyl7Yj1LKDMsbnVsbCxudWxsLGI/MzowKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLHBpbmdDYWNoZTpudWxsLGVhcmxpZXN0UGVuZGluZ1RpbWU6MCxsYXRlc3RQZW5kaW5nVGltZTowLGVhcmxpZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RQaW5nZWRUaW1lOjAsZGlkRXJyb3I6ITEscGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOjAsZmluaXNoZWRXb3JrOm51bGwsdGltZW91dEhhbmRsZTotMSxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMsbmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT246MCxleHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTt0aGlzLl9pbnRlcm5hbFJvb3Q9Yi5zdGF0ZU5vZGU9YX1cblBpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcgT2k7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO0tpKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07UGkucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9bmV3IE9pO2E9dm9pZCAwPT09YT9udWxsOmE7bnVsbCE9PWEmJmMudGhlbihhKTtLaShudWxsLGIsbnVsbCxjLl9vbkNvbW1pdCk7cmV0dXJuIGN9O1BpLnByb3RvdHlwZS5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuX2ludGVybmFsUm9vdCxlPW5ldyBPaTtjPXZvaWQgMD09PWM/bnVsbDpjO251bGwhPT1jJiZlLnRoZW4oYyk7S2koYixkLGEsZS5fb25Db21taXQpO3JldHVybiBlfTtcblBpLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBOaSh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIFFpKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1HYj1HaTtIYj1JaTtJYj1mdW5jdGlvbigpe1d8fDA9PT1naXx8KFloKGdpLCExKSxnaT0wKX07XG5mdW5jdGlvbiBSaShhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IFBpKGEsITEsYil9XG5mdW5jdGlvbiBTaShhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGc9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9TGkoZi5faW50ZXJuYWxSb290KTtnLmNhbGwoYSl9fW51bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1SaShjLGQpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1MaShmLl9pbnRlcm5hbFJvb3QpO2guY2FsbChhKX19SGkoZnVuY3Rpb24oKXtudWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfSl9cmV0dXJuIExpKGYuX2ludGVybmFsUm9vdCl9XG5mdW5jdGlvbiBUaShhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO1FpKGIpP3ZvaWQgMDp4KFwiMjAwXCIpO3JldHVybiBNaShhLGIsbnVsbCxjKX1cbnZhciBWaT17Y3JlYXRlUG9ydGFsOlRpLGZpbmRET01Ob2RlOmZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZvaWQgMD09PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXI/eChcIjE4OFwiKTp4KFwiMjY4XCIsT2JqZWN0LmtleXMoYSkpKTthPWhkKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIFNpKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe1FpKGIpP3ZvaWQgMDp4KFwiMjAwXCIpO3JldHVybiBTaShudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7UWkoYyk/dm9pZCAwOngoXCIyMDBcIik7bnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyP1xueChcIjM4XCIpOnZvaWQgMDtyZXR1cm4gU2koYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7UWkoYSk/dm9pZCAwOngoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhIaShmdW5jdGlvbigpe1NpKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIFRpLmFwcGx5KHZvaWQgMCxhcmd1bWVudHMpfSx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczpHaSx1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXM6SWksZmx1c2hTeW5jOmZ1bmN0aW9uKGEsYil7Vz94KFwiMTg3XCIpOnZvaWQgMDt2YXIgYz1YO1g9ITA7dHJ5e3JldHVybiBraShhLGIpfWZpbmFsbHl7WD1jLFloKDEwNzM3NDE4MjMsITEpfX0sdW5zdGFibGVfY3JlYXRlUm9vdDpVaSx1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQ6ZnVuY3Rpb24oYSl7dmFyIGI9XG5YO1g9ITA7dHJ5e2tpKGEpfWZpbmFsbHl7KFg9Yil8fFd8fFloKDEwNzM3NDE4MjMsITEpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbSWEsSmEsS2EsQmEuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lLHBhLFFhLGZ1bmN0aW9uKGEpe3lhKGEsUGEpfSxFYixGYixEZCxEYV19fTtmdW5jdGlvbiBVaShhLGIpe1FpKGEpP3ZvaWQgMDp4KFwiMjk5XCIsXCJ1bnN0YWJsZV9jcmVhdGVSb290XCIpO3JldHVybiBuZXcgUGkoYSwhMCxudWxsIT1iJiYhMD09PWIuaHlkcmF0ZSl9XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gVGUobih7fSxhLHtvdmVycmlkZVByb3BzOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6VGIuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWhkKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9fSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOkhhLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuOC40XCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7dmFyIFdpPXtkZWZhdWx0OlZpfSxYaT1XaSYmVml8fFdpO21vZHVsZS5leHBvcnRzPVhpLmRlZmF1bHR8fFhpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xMy40XG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGQ9bnVsbCxlPSExLGc9MyxrPS0xLGw9LTEsbT0hMSxuPSExO2Z1bmN0aW9uIHAoKXtpZighbSl7dmFyIGE9ZC5leHBpcmF0aW9uVGltZTtuP3EoKTpuPSEwO3IodCxhKX19XG5mdW5jdGlvbiB1KCl7dmFyIGE9ZCxiPWQubmV4dDtpZihkPT09YilkPW51bGw7ZWxzZXt2YXIgYz1kLnByZXZpb3VzO2Q9Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGw7Yz1hLmNhbGxiYWNrO2I9YS5leHBpcmF0aW9uVGltZTthPWEucHJpb3JpdHlMZXZlbDt2YXIgZj1nLFE9bDtnPWE7bD1iO3RyeXt2YXIgaD1jKCl9ZmluYWxseXtnPWYsbD1RfWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBoKWlmKGg9e2NhbGxiYWNrOmgscHJpb3JpdHlMZXZlbDphLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9LG51bGw9PT1kKWQ9aC5uZXh0PWgucHJldmlvdXM9aDtlbHNle2M9bnVsbDthPWQ7ZG97aWYoYS5leHBpcmF0aW9uVGltZT49Yil7Yz1hO2JyZWFrfWE9YS5uZXh0fXdoaWxlKGEhPT1kKTtudWxsPT09Yz9jPWQ6Yz09PWQmJihkPWgscCgpKTtiPWMucHJldmlvdXM7Yi5uZXh0PWMucHJldmlvdXM9aDtoLm5leHQ9YztoLnByZXZpb3VzPVxuYn19ZnVuY3Rpb24gdigpe2lmKC0xPT09ayYmbnVsbCE9PWQmJjE9PT1kLnByaW9yaXR5TGV2ZWwpe209ITA7dHJ5e2RvIHUoKTt3aGlsZShudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl9ZmluYWxseXttPSExLG51bGwhPT1kP3AoKTpuPSExfX19ZnVuY3Rpb24gdChhKXttPSEwO3ZhciBiPWU7ZT1hO3RyeXtpZihhKWZvcig7bnVsbCE9PWQ7KXt2YXIgYz1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKGQuZXhwaXJhdGlvblRpbWU8PWMpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTw9Yyl9ZWxzZSBicmVha31lbHNlIGlmKG51bGwhPT1kKXtkbyB1KCk7d2hpbGUobnVsbCE9PWQmJiF3KCkpfX1maW5hbGx5e209ITEsZT1iLG51bGwhPT1kP3AoKTpuPSExLHYoKX19XG52YXIgeD1EYXRlLHk9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsej1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDAsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcmVxdWVzdEFuaW1hdGlvbkZyYW1lP3JlcXVlc3RBbmltYXRpb25GcmFtZTp2b2lkIDAsQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2FuY2VsQW5pbWF0aW9uRnJhbWU/Y2FuY2VsQW5pbWF0aW9uRnJhbWU6dm9pZCAwLEMsRDtmdW5jdGlvbiBFKGEpe0M9QShmdW5jdGlvbihiKXt6KEQpO2EoYil9KTtEPXkoZnVuY3Rpb24oKXtCKEMpO2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LDEwMCl9XG5pZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgRj1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBGLm5vdygpfX1lbHNlIGV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCl9O3ZhciByLHEsdyxHPW51bGw7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiB3aW5kb3c/Rz13aW5kb3c6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBnbG9iYWwmJihHPWdsb2JhbCk7XG5pZihHJiZHLl9zY2hlZE1vY2spe3ZhciBIPUcuX3NjaGVkTW9jaztyPUhbMF07cT1IWzFdO3c9SFsyXTtleHBvcnRzLnVuc3RhYmxlX25vdz1IWzNdfWVsc2UgaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIEk9bnVsbCxKPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1JKXRyeXtJKGEpfWZpbmFsbHl7ST1udWxsfX07cj1mdW5jdGlvbihhKXtudWxsIT09ST9zZXRUaW1lb3V0KHIsMCxhKTooST1hLHNldFRpbWVvdXQoSiwwLCExKSl9O3E9ZnVuY3Rpb24oKXtJPW51bGx9O3c9ZnVuY3Rpb24oKXtyZXR1cm4hMX19ZWxzZXtcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUmJihcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSxcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBCJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIikpO3ZhciBLPW51bGwsTD0hMSxNPS0xLE49ITEsTz0hMSxQPTAsUj0zMyxTPTMzO3c9ZnVuY3Rpb24oKXtyZXR1cm4gUDw9ZXhwb3J0cy51bnN0YWJsZV9ub3coKX07dmFyIFQ9bmV3IE1lc3NhZ2VDaGFubmVsLFU9VC5wb3J0MjtULnBvcnQxLm9ubWVzc2FnZT1mdW5jdGlvbigpe0w9ITE7dmFyIGE9SyxiPU07Sz1udWxsO009LTE7dmFyIGM9ZXhwb3J0cy51bnN0YWJsZV9ub3coKSxmPSExO2lmKDA+PVAtYylpZigtMSE9PWImJmI8PWMpZj0hMDtlbHNle058fChOPSEwLEUoVikpO0s9YTtNPWI7cmV0dXJufWlmKG51bGwhPT1hKXtPPSEwO3RyeXthKGYpfWZpbmFsbHl7Tz0hMX19fTtcbnZhciBWPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1LKXtFKFYpO3ZhciBiPWEtUCtTO2I8UyYmUjxTPyg4PmImJihiPTgpLFM9YjxSP1I6Yik6Uj1iO1A9YStTO0x8fChMPSEwLFUucG9zdE1lc3NhZ2Uodm9pZCAwKSl9ZWxzZSBOPSExfTtyPWZ1bmN0aW9uKGEsYil7Sz1hO009YjtPfHwwPmI/VS5wb3N0TWVzc2FnZSh2b2lkIDApOk58fChOPSEwLEUoVikpfTtxPWZ1bmN0aW9uKCl7Sz1udWxsO0w9ITE7TT0tMX19ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7XG5leHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPWcsZj1rO2c9YTtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtnPWMsaz1mLHYoKX19O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goZyl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9Z312YXIgYz1nLGY9aztnPWI7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Zz1jLGs9Zix2KCl9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3ZhciBjPS0xIT09az9rOmV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09YiYmXCJudW1iZXJcIj09PXR5cGVvZiBiLnRpbWVvdXQpYj1jK2IudGltZW91dDtlbHNlIHN3aXRjaChnKXtjYXNlIDE6Yj1jKy0xO2JyZWFrO2Nhc2UgMjpiPWMrMjUwO2JyZWFrO2Nhc2UgNTpiPWMrMTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6Yj1jKzFFNDticmVhaztkZWZhdWx0OmI9Yys1RTN9YT17Y2FsbGJhY2s6YSxwcmlvcml0eUxldmVsOmcsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH07aWYobnVsbD09PWQpZD1hLm5leHQ9YS5wcmV2aW91cz1hLHAoKTtlbHNle2M9bnVsbDt2YXIgZj1kO2Rve2lmKGYuZXhwaXJhdGlvblRpbWU+Yil7Yz1mO2JyZWFrfWY9Zi5uZXh0fXdoaWxlKGYhPT1kKTtudWxsPT09Yz9jPWQ6Yz09PWQmJihkPWEscCgpKTtcbmI9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1hO2EubmV4dD1jO2EucHJldmlvdXM9Yn1yZXR1cm4gYX07ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1hLm5leHQ7aWYobnVsbCE9PWIpe2lmKGI9PT1hKWQ9bnVsbDtlbHNle2E9PT1kJiYoZD1iKTt2YXIgYz1hLnByZXZpb3VzO2MubmV4dD1iO2IucHJldmlvdXM9Y31hLm5leHQ9YS5wcmV2aW91cz1udWxsfX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9ZztyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1nLGY9aztnPWI7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtnPWMsaz1mLHYoKX19fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIGd9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiFlJiYobnVsbCE9PWQmJmQuZXhwaXJhdGlvblRpbWU8bHx8dygpKX07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe251bGwhPT1kJiZwKCl9O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gZH07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNFxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNjtmdW5jdGlvbiB0KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgcjpjYXNlIHE6Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gdihhKXtyZXR1cm4gdChhKT09PW19ZXhwb3J0cy50eXBlT2Y9dDtleHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47XG5leHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXI7ZXhwb3J0cy5NZW1vPXE7ZXhwb3J0cy5Qb3J0YWw9ZDtleHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09cXx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bil9O2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSl8fHQoYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9djtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09a307XG5leHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1yfTtleHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXF9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWZ9O1xuZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cH07XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNVxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNjtmdW5jdGlvbiB0KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgcjpjYXNlIHE6Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gdihhKXtyZXR1cm4gdChhKT09PW19ZXhwb3J0cy50eXBlT2Y9dDtleHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47XG5leHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXI7ZXhwb3J0cy5NZW1vPXE7ZXhwb3J0cy5Qb3J0YWw9ZDtleHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09cXx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bil9O2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSl8fHQoYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9djtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09a307XG5leHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1yfTtleHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXF9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWZ9O1xuZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cH07XG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX3Byb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxudmFyIF9ndWQgPSByZXF1aXJlKCdndWQnKTtcblxudmFyIF9ndWQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3VkKTtcblxudmFyIF93YXJuaW5nID0gcmVxdWlyZSgnZmJqcy9saWIvd2FybmluZycpO1xuXG52YXIgX3dhcm5pbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2FybmluZyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XG5cbi8vIElubGluZWQgT2JqZWN0LmlzIHBvbHlmaWxsLlxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyAoMCwgX2d1ZDIuZGVmYXVsdCkoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHJvdmlkZXIpO1xuXG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQuY2FsbC5hcHBseShfQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSksIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICAgIH1cblxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHMgPSB2b2lkIDA7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7IC8vIE5vIGNoYW5nZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KSgoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgJ2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBFeHBlY3RlZCB0aGUgcmV0dXJuIHZhbHVlIHRvIGJlIGEgJyArICczMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogJXMnLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtjb250ZXh0UHJvcF0gPSBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuXG4gIHZhciBDb25zdW1lciA9IGZ1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0cyhDb25zdW1lciwgX0NvbXBvbmVudDIpO1xuXG4gICAgZnVuY3Rpb24gQ29uc3VtZXIoKSB7XG4gICAgICB2YXIgX3RlbXAyLCBfdGhpczIsIF9yZXQyO1xuXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29uc3VtZXIpO1xuXG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfcmV0MiA9IChfdGVtcDIgPSAoX3RoaXMyID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudDIuY2FsbC5hcHBseShfQ29tcG9uZW50MiwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpczIpLCBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfSwgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG4gICAgICAgIGlmICgob2JzZXJ2ZWRCaXRzICYgY2hhbmdlZEJpdHMpICE9PSAwKSB7XG4gICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHsgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpIH0pO1xuICAgICAgICB9XG4gICAgICB9LCBfdGVtcDIpLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpczIsIF9yZXQyKTtcbiAgICB9XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcblxuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgLy8gU3Vic2NyaWJlIHRvIGFsbCBjaGFuZ2VzIGJ5IGRlZmF1bHRcbiAgICAgIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub24odGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG5cbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIC8vIFN1YnNjcmliZSB0byBhbGwgY2hhbmdlcyBieSBkZWZhdWx0XG4gICAgICA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9mZih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5nZXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3QsIF9Db25zdW1lciRjb250ZXh0VHlwZSk7XG5cblxuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUmVhY3RDb250ZXh0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiLy8gQGZsb3dcbid1c2Ugc3RyaWN0JztcblxudmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBnbG9iYWxba2V5XSA9IChnbG9iYWxba2V5XSB8fCAwKSArIDE7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJy4vZW1wdHlGdW5jdGlvbicpO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgd2FybmluZyA9IGVtcHR5RnVuY3Rpb247XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoZm9ybWF0KSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfTtcblxuICB3YXJuaW5nID0gZnVuY3Rpb24gd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCkge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICsgJ21lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG5cbiAgICBpZiAoZm9ybWF0LmluZGV4T2YoJ0ZhaWxlZCBDb21wb3NpdGUgcHJvcFR5cGU6ICcpID09PSAwKSB7XG4gICAgICByZXR1cm47IC8vIElnbm9yZSBDb21wb3NpdGVDb21wb25lbnQgcHJvcHR5cGUgY2hlY2suXG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4yID4gMiA/IF9sZW4yIC0gMiA6IDApLCBfa2V5MiA9IDI7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5MiAtIDJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgIH1cblxuICAgICAgcHJpbnRXYXJuaW5nLmFwcGx5KHVuZGVmaW5lZCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZzsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuOC41XG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTtcbnZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2O2Z1bmN0aW9uIHQoYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSByOmNhc2UgcTpjYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiB2KGEpe3JldHVybiB0KGEpPT09bX1leHBvcnRzLnR5cGVPZj10O2V4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtcbmV4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9cjtleHBvcnRzLk1lbW89cTtleHBvcnRzLlBvcnRhbD1kO2V4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1xfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1uKX07ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdihhKXx8dChhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT12O2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1rfTtcbmV4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXJ9O2V4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cX07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09Zn07XG5leHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1wfTtcbiIsIlwidXNlIHN0cmljdFwiO2Z1bmN0aW9uIF9pbnRlcm9wRGVmYXVsdChlKXtyZXR1cm4gZSYmXCJvYmplY3RcIj09dHlwZW9mIGUmJlwiZGVmYXVsdFwiaW4gZT9lLmRlZmF1bHQ6ZX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgUmVhY3Q9X2ludGVyb3BEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7ZnVuY3Rpb24gQXBwQ29udGFpbmVyKGUpe3JldHVybiBSZWFjdC5DaGlsZHJlbi5vbmx5KGUuY2hpbGRyZW4pfXZhciBob3RfcHJvZD1mdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gZX19LGFyZUNvbXBvbmVudHNFcXVhbD1mdW5jdGlvbihlLG4pe3JldHVybiBlPT09bn0sc2V0Q29uZmlnPWZ1bmN0aW9uKCl7fSxjb2xkPWZ1bmN0aW9uKGUpe3JldHVybiBlfSxjb25maWd1cmVDb21wb25lbnQ9ZnVuY3Rpb24oKXt9O2V4cG9ydHMuQXBwQ29udGFpbmVyPUFwcENvbnRhaW5lcixleHBvcnRzLmhvdD1ob3RfcHJvZCxleHBvcnRzLmFyZUNvbXBvbmVudHNFcXVhbD1hcmVDb21wb25lbnRzRXF1YWwsZXhwb3J0cy5zZXRDb25maWc9c2V0Q29uZmlnLGV4cG9ydHMuY29sZD1jb2xkLGV4cG9ydHMuY29uZmlndXJlQ29tcG9uZW50PWNvbmZpZ3VyZUNvbXBvbmVudDtcbiJdLCJzb3VyY2VSb290IjoiIn0=